{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Button,TextField,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,Alert,CircularProgress,Chip,FormControl,InputLabel,Select,MenuItem}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Save as SaveIcon,Business as BusinessIcon}from'@mui/icons-material';import{collection,getDocs,addDoc,updateDoc,deleteDoc,doc}from'firebase/firestore';import{db}from'../config/firebase';import{useSnackbar}from'notistack';import{SELASService}from'../services/SELASService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PoleManagement=()=>{const[poles,setPoles]=useState([]);const[loading,setLoading]=useState(true);const[openAddDialog,setOpenAddDialog]=useState(false);const[openEditDialog,setOpenEditDialog]=useState(false);const[openDeleteDialog,setOpenDeleteDialog]=useState(false);const[currentPole,setCurrentPole]=useState(null);const[newPoleName,setNewPoleName]=useState('');const[newPoleDescription,setNewPoleDescription]=useState('');const[newPoleSelasId,setNewPoleSelasId]=useState('');const[usageCount,setUsageCount]=useState({});const[selasList,setSelasList]=useState([]);const{enqueueSnackbar}=useSnackbar();const selasService=SELASService.getInstance();// Charger la liste des pôles au montage du composant\nuseEffect(()=>{fetchPoles();fetchSELAS();},[]);// Récupérer les pôles depuis Firestore\nconst fetchPoles=async()=>{try{setLoading(true);// Récupérer tous les pôles depuis la collection poles\nconst polesRef=collection(db,'poles');const snapshot=await getDocs(polesRef);const polesData=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));setPoles(polesData);// Compter l'utilisation de chaque pôle\nawait countPoleUsage(polesData);setLoading(false);}catch(error){console.error('Erreur lors du chargement des pôles:',error);enqueueSnackbar('Erreur lors du chargement des pôles',{variant:'error'});setLoading(false);}};// Récupérer la liste des SELAS depuis Firestore\nconst fetchSELAS=async()=>{try{const selasData=await selasService.getSELAS();// Filtrer pour n'afficher que les SELAS actives\nconst activeSelas=selasData.filter(s=>s.active);setSelasList(activeSelas);}catch(error){console.error('Erreur lors du chargement des SELAS:',error);enqueueSnackbar('Erreur lors du chargement des SELAS',{variant:'error'});}};// Obtenir le nom d'une SELAS à partir de son ID\nconst getSelasName=selasId=>{if(!selasId)return'-';const selas=selasList.find(s=>s.id===selasId);return selas?selas.nom:'-';};// Compter combien de fois chaque pôle est utilisé\nconst countPoleUsage=async polesList=>{const usageCounts={};// Initialiser les compteurs à 0\npolesList.forEach(pole=>{usageCounts[pole.id]=0;});// Collections à vérifier\nconst collectionsToCheck=['users','sites','passages','tournees','vehicules'];// Compter les utilisations dans chaque collection\nfor(const collectionName of collectionsToCheck){try{const collectionRef=collection(db,collectionName);const snapshot=await getDocs(collectionRef);snapshot.docs.forEach(doc=>{const data=doc.data();if(data.pole){// Trouver le pôle correspondant par son nom\nconst matchingPole=polesList.find(p=>p.nom===data.pole);if(matchingPole){usageCounts[matchingPole.id]++;}}});}catch(error){console.error(`Erreur lors du comptage des utilisations dans ${collectionName}:`,error);}}setUsageCount(usageCounts);};// Ajouter un nouveau pôle\nconst addPole=async()=>{if(!newPoleName.trim()){enqueueSnackbar('Le nom du pôle est requis',{variant:'error'});return;}try{setLoading(true);// Vérifier si un pôle avec le même nom existe déjà\nconst existingPole=poles.find(pole=>pole.nom.toLowerCase()===newPoleName.trim().toLowerCase());if(existingPole){enqueueSnackbar('Un pôle avec ce nom existe déjà',{variant:'error'});setLoading(false);return;}// Créer le nouveau pôle\nconst newPole={nom:newPoleName.trim(),description:newPoleDescription.trim()||'',selasId:newPoleSelasId||undefined,dateCreation:new Date().toISOString(),dateModification:new Date().toISOString()};const polesRef=collection(db,'poles');const docRef=await addDoc(polesRef,newPole);// Ajouter le nouveau pôle à la liste avec son ID\nsetPoles([...poles,{...newPole,id:docRef.id}]);enqueueSnackbar('Pôle ajouté avec succès',{variant:'success'});// Réinitialiser le formulaire\nsetNewPoleName('');setNewPoleDescription('');setNewPoleSelasId('');setOpenAddDialog(false);setLoading(false);}catch(error){console.error('Erreur lors de l\\'ajout du pôle:',error);enqueueSnackbar('Erreur lors de l\\'ajout du pôle',{variant:'error'});setLoading(false);}};// Mettre à jour un pôle existant\nconst updatePole=async()=>{if(!currentPole||!currentPole.nom.trim()){enqueueSnackbar('Le nom du pôle est requis',{variant:'error'});return;}try{var _currentPole$descript;setLoading(true);// Vérifier si un autre pôle avec le même nom existe déjà\nconst existingPole=poles.find(pole=>pole.nom.toLowerCase()===currentPole.nom.trim().toLowerCase()&&pole.id!==currentPole.id);if(existingPole){enqueueSnackbar('Un pôle avec ce nom existe déjà',{variant:'error'});setLoading(false);return;}// Mettre à jour le pôle\nconst updatedPole={...currentPole,nom:currentPole.nom.trim(),description:((_currentPole$descript=currentPole.description)===null||_currentPole$descript===void 0?void 0:_currentPole$descript.trim())||'',selasId:currentPole.selasId===''?null:currentPole.selasId,dateModification:new Date().toISOString()};const poleRef=doc(db,'poles',currentPole.id);await updateDoc(poleRef,updatedPole);// Mettre à jour la liste des pôles\nsetPoles(poles.map(pole=>pole.id===currentPole.id?updatedPole:pole));enqueueSnackbar('Pôle mis à jour avec succès',{variant:'success'});setOpenEditDialog(false);setCurrentPole(null);setLoading(false);}catch(error){console.error('Erreur lors de la mise à jour du pôle:',error);enqueueSnackbar('Erreur lors de la mise à jour du pôle',{variant:'error'});setLoading(false);}};// Supprimer un pôle\nconst deletePole=async()=>{if(!currentPole)return;try{setLoading(true);// Vérifier si le pôle est utilisé\nif(usageCount[currentPole.id]>0){enqueueSnackbar(`Ce pôle est utilisé par ${usageCount[currentPole.id]} éléments. Veuillez d'abord modifier ces éléments.`,{variant:'error'});setLoading(false);setOpenDeleteDialog(false);return;}// Supprimer le pôle\nconst poleRef=doc(db,'poles',currentPole.id);await deleteDoc(poleRef);// Mettre à jour la liste des pôles\nsetPoles(poles.filter(pole=>pole.id!==currentPole.id));enqueueSnackbar('Pôle supprimé avec succès',{variant:'success'});setOpenDeleteDialog(false);setCurrentPole(null);setLoading(false);}catch(error){console.error('Erreur lors de la suppression du pôle:',error);enqueueSnackbar('Erreur lors de la suppression du pôle',{variant:'error'});setLoading(false);}};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Gestion des p\\xF4les\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>setOpenAddDialog(true),children:\"Ajouter un p\\xF4le\"})]}),/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:3},children:\"Les p\\xF4les permettent de regrouper et filtrer les donn\\xE9es (sites, passages, tourn\\xE9es, v\\xE9hicules) par zones g\\xE9ographiques ou organisationnelles.\"}),loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',my:3},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Nom du p\\xF4le\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Description\"}),/*#__PURE__*/_jsx(TableCell,{children:\"SELAS\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Date de cr\\xE9ation\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Utilisation\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:poles.length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:6,align:\"center\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{py:2},children:\"Aucun p\\xF4le n'a \\xE9t\\xE9 cr\\xE9\\xE9. Cliquez sur \\\"Ajouter un p\\xF4le\\\" pour commencer.\"})})}):poles.map(pole=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:pole.nom}),/*#__PURE__*/_jsx(TableCell,{children:pole.description||'-'}),/*#__PURE__*/_jsx(TableCell,{children:pole.selasId?/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(BusinessIcon,{fontSize:\"small\"}),label:getSelasName(pole.selasId),color:\"primary\",variant:\"outlined\",size:\"small\"}):'-'}),/*#__PURE__*/_jsx(TableCell,{children:new Date(pole.dateCreation).toLocaleDateString('fr-FR')}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:`${usageCount[pole.id]||0} éléments`,color:usageCount[pole.id]>0?'primary':'default',variant:usageCount[pole.id]>0?'filled':'outlined',size:\"small\"})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:()=>{setCurrentPole(pole);setOpenEditDialog(true);},children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{color:\"error\",onClick:()=>{setCurrentPole(pole);setOpenDeleteDialog(true);},children:/*#__PURE__*/_jsx(DeleteIcon,{})})]})]},pole.id))})]})}),/*#__PURE__*/_jsxs(Dialog,{open:openAddDialog,onClose:()=>setOpenAddDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Ajouter un nouveau p\\xF4le\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"Entrez les informations du nouveau p\\xF4le. Le nom sera utilis\\xE9 pour identifier le p\\xF4le dans l'application.\"}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",label:\"Nom du p\\xF4le\",type:\"text\",fullWidth:true,variant:\"outlined\",value:newPoleName,onChange:e=>setNewPoleName(e.target.value),required:true,sx:{mt:2}}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",label:\"Description (optionnelle)\",type:\"text\",fullWidth:true,variant:\"outlined\",value:newPoleDescription,onChange:e=>setNewPoleDescription(e.target.value),multiline:true,rows:2,sx:{mb:2}}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,variant:\"outlined\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"new-pole-selas-label\",children:\"SELAS associ\\xE9e\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"new-pole-selas-label\",value:newPoleSelasId,onChange:e=>setNewPoleSelasId(e.target.value),label:\"SELAS associ\\xE9e\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Aucune\"})}),selasList.map(selas=>/*#__PURE__*/_jsx(MenuItem,{value:selas.id,children:selas.nom},selas.id))]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenAddDialog(false),color:\"inherit\",children:\"Annuler\"}),/*#__PURE__*/_jsx(Button,{onClick:addPole,color:\"primary\",variant:\"contained\",startIcon:/*#__PURE__*/_jsx(SaveIcon,{}),disabled:!newPoleName.trim()||loading,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Enregistrer'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:openEditDialog,onClose:()=>setOpenEditDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Modifier un p\\xF4le\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"Modifiez les informations du p\\xF4le s\\xE9lectionn\\xE9.\"}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",label:\"Nom du p\\xF4le\",type:\"text\",fullWidth:true,variant:\"outlined\",value:(currentPole===null||currentPole===void 0?void 0:currentPole.nom)||'',onChange:e=>setCurrentPole(currentPole?{...currentPole,nom:e.target.value}:null),required:true,sx:{mt:2}}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",label:\"Description (optionnelle)\",type:\"text\",fullWidth:true,variant:\"outlined\",value:(currentPole===null||currentPole===void 0?void 0:currentPole.description)||'',onChange:e=>setCurrentPole(currentPole?{...currentPole,description:e.target.value}:null),multiline:true,rows:2,sx:{mb:2}}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,variant:\"outlined\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"edit-pole-selas-label\",children:\"SELAS associ\\xE9e\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"edit-pole-selas-label\",value:(currentPole===null||currentPole===void 0?void 0:currentPole.selasId)||'',onChange:e=>setCurrentPole(currentPole?{...currentPole,selasId:e.target.value}:null),label:\"SELAS associ\\xE9e\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Aucune\"})}),selasList.map(selas=>/*#__PURE__*/_jsx(MenuItem,{value:selas.id,children:selas.nom},selas.id))]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenEditDialog(false),color:\"inherit\",children:\"Annuler\"}),/*#__PURE__*/_jsx(Button,{onClick:updatePole,color:\"primary\",variant:\"contained\",startIcon:/*#__PURE__*/_jsx(SaveIcon,{}),disabled:!(currentPole!==null&&currentPole!==void 0&&currentPole.nom.trim())||loading,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Enregistrer'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:openDeleteDialog,onClose:()=>setOpenDeleteDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Supprimer un p\\xF4le\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(DialogContentText,{children:[\"\\xCAtes-vous s\\xFBr de vouloir supprimer le p\\xF4le \\\"\",currentPole===null||currentPole===void 0?void 0:currentPole.nom,\"\\\" ?\",usageCount[(currentPole===null||currentPole===void 0?void 0:currentPole.id)||'']>0&&/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",sx:{mt:2},children:[\"Ce p\\xF4le est utilis\\xE9 par \",usageCount[(currentPole===null||currentPole===void 0?void 0:currentPole.id)||''],\" \\xE9l\\xE9ments. Vous ne pouvez pas le supprimer tant qu'il est utilis\\xE9.\"]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenDeleteDialog(false),color:\"inherit\",children:\"Annuler\"}),/*#__PURE__*/_jsx(Button,{onClick:deletePole,color:\"error\",variant:\"contained\",startIcon:/*#__PURE__*/_jsx(DeleteIcon,{}),disabled:usageCount[(currentPole===null||currentPole===void 0?void 0:currentPole.id)||'']>0||loading,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Supprimer'})]})]})]});};export default PoleManagement;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Alert","CircularProgress","Chip","FormControl","InputLabel","Select","MenuItem","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Save","SaveIcon","Business","BusinessIcon","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","db","useSnackbar","SELASService","jsx","_jsx","jsxs","_jsxs","PoleManagement","poles","setPoles","loading","setLoading","openAddDialog","setOpenAddDialog","openEditDialog","setOpenEditDialog","openDeleteDialog","setOpenDeleteDialog","currentPole","setCurrentPole","newPoleName","setNewPoleName","newPoleDescription","setNewPoleDescription","newPoleSelasId","setNewPoleSelasId","usageCount","setUsageCount","selasList","setSelasList","enqueueSnackbar","selasService","getInstance","fetchPoles","fetchSELAS","polesRef","snapshot","polesData","docs","map","id","data","countPoleUsage","error","console","variant","selasData","getSELAS","activeSelas","filter","s","active","getSelasName","selasId","selas","find","nom","polesList","usageCounts","forEach","pole","collectionsToCheck","collectionName","collectionRef","matchingPole","p","addPole","trim","existingPole","toLowerCase","newPole","description","undefined","dateCreation","Date","toISOString","dateModification","docRef","updatePole","_currentPole$descript","updatedPole","poleRef","deletePole","children","sx","display","justifyContent","alignItems","mb","color","startIcon","onClick","severity","my","component","align","length","colSpan","py","icon","fontSize","label","size","toLocaleDateString","open","onClose","autoFocus","margin","type","fullWidth","value","onChange","e","target","required","mt","multiline","rows","labelId","disabled"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/PoleManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Alert,\n  CircularProgress,\n  Divider,\n  Chip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Save as SaveIcon,\n  Cancel as CancelIcon,\n  Business as BusinessIcon\n} from '@mui/icons-material';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport { useSnackbar } from 'notistack';\nimport { SELAS } from '../types/SELAS';\nimport { SELASService } from '../services/SELASService';\n\ninterface Pole {\n  id: string;\n  nom: string;\n  description?: string;\n  dateCreation: string;\n  dateModification: string;\n  selasId?: string; // ID de la SELAS associée\n}\n\nconst PoleManagement: React.FC = () => {\n  const [poles, setPoles] = useState<Pole[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [openAddDialog, setOpenAddDialog] = useState(false);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [currentPole, setCurrentPole] = useState<Pole | null>(null);\n  const [newPoleName, setNewPoleName] = useState('');\n  const [newPoleDescription, setNewPoleDescription] = useState('');\n  const [newPoleSelasId, setNewPoleSelasId] = useState<string>('');\n  const [usageCount, setUsageCount] = useState<Record<string, number>>({});\n  const [selasList, setSelasList] = useState<SELAS[]>([]);\n  const { enqueueSnackbar } = useSnackbar();\n  const selasService = SELASService.getInstance();\n\n  // Charger la liste des pôles au montage du composant\n  useEffect(() => {\n    fetchPoles();\n    fetchSELAS();\n  }, []);\n\n  // Récupérer les pôles depuis Firestore\n  const fetchPoles = async () => {\n    try {\n      setLoading(true);\n      \n      // Récupérer tous les pôles depuis la collection poles\n      const polesRef = collection(db, 'poles');\n      const snapshot = await getDocs(polesRef);\n      \n      const polesData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      } as Pole));\n      \n      setPoles(polesData);\n      \n      // Compter l'utilisation de chaque pôle\n      await countPoleUsage(polesData);\n      \n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors du chargement des pôles:', error);\n      enqueueSnackbar('Erreur lors du chargement des pôles', { variant: 'error' });\n      setLoading(false);\n    }\n  };\n\n  // Récupérer la liste des SELAS depuis Firestore\n  const fetchSELAS = async () => {\n    try {\n      const selasData = await selasService.getSELAS();\n      // Filtrer pour n'afficher que les SELAS actives\n      const activeSelas = selasData.filter(s => s.active);\n      setSelasList(activeSelas);\n    } catch (error) {\n      console.error('Erreur lors du chargement des SELAS:', error);\n      enqueueSnackbar('Erreur lors du chargement des SELAS', { variant: 'error' });\n    }\n  };\n\n  // Obtenir le nom d'une SELAS à partir de son ID\n  const getSelasName = (selasId?: string) => {\n    if (!selasId) return '-';\n    const selas = selasList.find(s => s.id === selasId);\n    return selas ? selas.nom : '-';\n  };\n\n  // Compter combien de fois chaque pôle est utilisé\n  const countPoleUsage = async (polesList: Pole[]) => {\n    const usageCounts: Record<string, number> = {};\n    \n    // Initialiser les compteurs à 0\n    polesList.forEach(pole => {\n      usageCounts[pole.id] = 0;\n    });\n\n    // Collections à vérifier\n    const collectionsToCheck = ['users', 'sites', 'passages', 'tournees', 'vehicules'];\n    \n    // Compter les utilisations dans chaque collection\n    for (const collectionName of collectionsToCheck) {\n      try {\n        const collectionRef = collection(db, collectionName);\n        const snapshot = await getDocs(collectionRef);\n        \n        snapshot.docs.forEach(doc => {\n          const data = doc.data();\n          if (data.pole) {\n            // Trouver le pôle correspondant par son nom\n            const matchingPole = polesList.find(p => p.nom === data.pole);\n            if (matchingPole) {\n              usageCounts[matchingPole.id]++;\n            }\n          }\n        });\n      } catch (error) {\n        console.error(`Erreur lors du comptage des utilisations dans ${collectionName}:`, error);\n      }\n    }\n    \n    setUsageCount(usageCounts);\n  };\n\n  // Ajouter un nouveau pôle\n  const addPole = async () => {\n    if (!newPoleName.trim()) {\n      enqueueSnackbar('Le nom du pôle est requis', { variant: 'error' });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Vérifier si un pôle avec le même nom existe déjà\n      const existingPole = poles.find(pole => \n        pole.nom.toLowerCase() === newPoleName.trim().toLowerCase()\n      );\n      \n      if (existingPole) {\n        enqueueSnackbar('Un pôle avec ce nom existe déjà', { variant: 'error' });\n        setLoading(false);\n        return;\n      }\n      \n      // Créer le nouveau pôle\n      const newPole = {\n        nom: newPoleName.trim(),\n        description: newPoleDescription.trim() || '',\n        selasId: newPoleSelasId || undefined,\n        dateCreation: new Date().toISOString(),\n        dateModification: new Date().toISOString()\n      };\n      \n      const polesRef = collection(db, 'poles');\n      const docRef = await addDoc(polesRef, newPole);\n      \n      // Ajouter le nouveau pôle à la liste avec son ID\n      setPoles([...poles, { ...newPole, id: docRef.id }]);\n      \n      enqueueSnackbar('Pôle ajouté avec succès', { variant: 'success' });\n      \n      // Réinitialiser le formulaire\n      setNewPoleName('');\n      setNewPoleDescription('');\n      setNewPoleSelasId('');\n      setOpenAddDialog(false);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du pôle:', error);\n      enqueueSnackbar('Erreur lors de l\\'ajout du pôle', { variant: 'error' });\n      setLoading(false);\n    }\n  };\n\n  // Mettre à jour un pôle existant\n  const updatePole = async () => {\n    if (!currentPole || !currentPole.nom.trim()) {\n      enqueueSnackbar('Le nom du pôle est requis', { variant: 'error' });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Vérifier si un autre pôle avec le même nom existe déjà\n      const existingPole = poles.find(pole => \n        pole.nom.toLowerCase() === currentPole.nom.trim().toLowerCase() && \n        pole.id !== currentPole.id\n      );\n      \n      if (existingPole) {\n        enqueueSnackbar('Un pôle avec ce nom existe déjà', { variant: 'error' });\n        setLoading(false);\n        return;\n      }\n      \n      // Mettre à jour le pôle\n      const updatedPole = {\n        ...currentPole,\n        nom: currentPole.nom.trim(),\n        description: currentPole.description?.trim() || '',\n        selasId: currentPole.selasId === '' ? null : currentPole.selasId,\n        dateModification: new Date().toISOString()\n      };\n      \n      const poleRef = doc(db, 'poles', currentPole.id);\n      await updateDoc(poleRef, updatedPole);\n      \n      // Mettre à jour la liste des pôles\n      setPoles(poles.map(pole => \n        pole.id === currentPole.id ? updatedPole : pole\n      ));\n      \n      enqueueSnackbar('Pôle mis à jour avec succès', { variant: 'success' });\n      \n      setOpenEditDialog(false);\n      setCurrentPole(null);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du pôle:', error);\n      enqueueSnackbar('Erreur lors de la mise à jour du pôle', { variant: 'error' });\n      setLoading(false);\n    }\n  };\n\n  // Supprimer un pôle\n  const deletePole = async () => {\n    if (!currentPole) return;\n\n    try {\n      setLoading(true);\n      \n      // Vérifier si le pôle est utilisé\n      if (usageCount[currentPole.id] > 0) {\n        enqueueSnackbar(\n          `Ce pôle est utilisé par ${usageCount[currentPole.id]} éléments. Veuillez d'abord modifier ces éléments.`, \n          { variant: 'error' }\n        );\n        setLoading(false);\n        setOpenDeleteDialog(false);\n        return;\n      }\n      \n      // Supprimer le pôle\n      const poleRef = doc(db, 'poles', currentPole.id);\n      await deleteDoc(poleRef);\n      \n      // Mettre à jour la liste des pôles\n      setPoles(poles.filter(pole => pole.id !== currentPole.id));\n      \n      enqueueSnackbar('Pôle supprimé avec succès', { variant: 'success' });\n      \n      setOpenDeleteDialog(false);\n      setCurrentPole(null);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors de la suppression du pôle:', error);\n      enqueueSnackbar('Erreur lors de la suppression du pôle', { variant: 'error' });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h5\">Gestion des pôles</Typography>\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          startIcon={<AddIcon />}\n          onClick={() => setOpenAddDialog(true)}\n        >\n          Ajouter un pôle\n        </Button>\n      </Box>\n\n      <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Les pôles permettent de regrouper et filtrer les données (sites, passages, tournées, véhicules) par zones géographiques ou organisationnelles.\n      </Alert>\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Nom du pôle</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell>SELAS</TableCell>\n                <TableCell>Date de création</TableCell>\n                <TableCell>Utilisation</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {poles.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={6} align=\"center\">\n                    <Typography variant=\"body1\" sx={{ py: 2 }}>\n                      Aucun pôle n'a été créé. Cliquez sur \"Ajouter un pôle\" pour commencer.\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                poles.map((pole) => (\n                  <TableRow key={pole.id}>\n                    <TableCell>{pole.nom}</TableCell>\n                    <TableCell>{pole.description || '-'}</TableCell>\n                    <TableCell>\n                      {pole.selasId ? (\n                        <Chip \n                          icon={<BusinessIcon fontSize=\"small\" />}\n                          label={getSelasName(pole.selasId)}\n                          color=\"primary\"\n                          variant=\"outlined\"\n                          size=\"small\"\n                        />\n                      ) : (\n                        '-'\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      {new Date(pole.dateCreation).toLocaleDateString('fr-FR')}\n                    </TableCell>\n                    <TableCell>\n                      <Chip \n                        label={`${usageCount[pole.id] || 0} éléments`}\n                        color={usageCount[pole.id] > 0 ? 'primary' : 'default'}\n                        variant={usageCount[pole.id] > 0 ? 'filled' : 'outlined'}\n                        size=\"small\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton \n                        color=\"primary\" \n                        onClick={() => {\n                          setCurrentPole(pole);\n                          setOpenEditDialog(true);\n                        }}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton \n                        color=\"error\"\n                        onClick={() => {\n                          setCurrentPole(pole);\n                          setOpenDeleteDialog(true);\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {/* Dialog pour ajouter un pôle */}\n      <Dialog open={openAddDialog} onClose={() => setOpenAddDialog(false)}>\n        <DialogTitle>Ajouter un nouveau pôle</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Entrez les informations du nouveau pôle. Le nom sera utilisé pour identifier le pôle dans l'application.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Nom du pôle\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            value={newPoleName}\n            onChange={(e) => setNewPoleName(e.target.value)}\n            required\n            sx={{ mt: 2 }}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Description (optionnelle)\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            value={newPoleDescription}\n            onChange={(e) => setNewPoleDescription(e.target.value)}\n            multiline\n            rows={2}\n            sx={{ mb: 2 }}\n          />\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel id=\"new-pole-selas-label\">SELAS associée</InputLabel>\n            <Select\n              labelId=\"new-pole-selas-label\"\n              value={newPoleSelasId}\n              onChange={(e) => setNewPoleSelasId(e.target.value)}\n              label=\"SELAS associée\"\n            >\n              <MenuItem value=\"\">\n                <em>Aucune</em>\n              </MenuItem>\n              {selasList.map((selas) => (\n                <MenuItem key={selas.id} value={selas.id}>\n                  {selas.nom}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenAddDialog(false)} color=\"inherit\">\n            Annuler\n          </Button>\n          <Button \n            onClick={addPole} \n            color=\"primary\" \n            variant=\"contained\"\n            startIcon={<SaveIcon />}\n            disabled={!newPoleName.trim() || loading}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Enregistrer'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Dialog pour modifier un pôle */}\n      <Dialog open={openEditDialog} onClose={() => setOpenEditDialog(false)}>\n        <DialogTitle>Modifier un pôle</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Modifiez les informations du pôle sélectionné.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Nom du pôle\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            value={currentPole?.nom || ''}\n            onChange={(e) => setCurrentPole(currentPole ? {...currentPole, nom: e.target.value} : null)}\n            required\n            sx={{ mt: 2 }}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Description (optionnelle)\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            value={currentPole?.description || ''}\n            onChange={(e) => setCurrentPole(currentPole ? {...currentPole, description: e.target.value} : null)}\n            multiline\n            rows={2}\n            sx={{ mb: 2 }}\n          />\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel id=\"edit-pole-selas-label\">SELAS associée</InputLabel>\n            <Select\n              labelId=\"edit-pole-selas-label\"\n              value={currentPole?.selasId || ''}\n              onChange={(e) => setCurrentPole(currentPole ? {...currentPole, selasId: e.target.value} : null)}\n              label=\"SELAS associée\"\n            >\n              <MenuItem value=\"\">\n                <em>Aucune</em>\n              </MenuItem>\n              {selasList.map((selas) => (\n                <MenuItem key={selas.id} value={selas.id}>\n                  {selas.nom}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenEditDialog(false)} color=\"inherit\">\n            Annuler\n          </Button>\n          <Button \n            onClick={updatePole} \n            color=\"primary\" \n            variant=\"contained\"\n            startIcon={<SaveIcon />}\n            disabled={!currentPole?.nom.trim() || loading}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Enregistrer'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Dialog pour supprimer un pôle */}\n      <Dialog open={openDeleteDialog} onClose={() => setOpenDeleteDialog(false)}>\n        <DialogTitle>Supprimer un pôle</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Êtes-vous sûr de vouloir supprimer le pôle \"{currentPole?.nom}\" ?\n            {usageCount[currentPole?.id || ''] > 0 && (\n              <Alert severity=\"warning\" sx={{ mt: 2 }}>\n                Ce pôle est utilisé par {usageCount[currentPole?.id || '']} éléments. \n                Vous ne pouvez pas le supprimer tant qu'il est utilisé.\n              </Alert>\n            )}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDeleteDialog(false)} color=\"inherit\">\n            Annuler\n          </Button>\n          <Button \n            onClick={deletePole} \n            color=\"error\" \n            variant=\"contained\"\n            startIcon={<DeleteIcon />}\n            disabled={usageCount[currentPole?.id || ''] > 0 || loading}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Supprimer'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default PoleManagement; \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}