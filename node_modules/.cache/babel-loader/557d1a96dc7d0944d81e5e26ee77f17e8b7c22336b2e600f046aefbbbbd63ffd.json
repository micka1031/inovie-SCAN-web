{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Table,Checkbox,Select,Switch,Input,Tag,Tooltip}from'antd';import{FaEdit,FaPlus,FaSave,FaTimes,FaTrash,FaCheckCircle,FaUser}from'react-icons/fa';import{SELASService}from'../services/SELASService';import{collection,getDocs,updateDoc,doc,query,where}from'firebase/firestore';import{getAuth}from'firebase/auth';import{db}from'../config/firebase';import'./SELASManagement.css';import'./DataTable.css';import'./EditMode.css';// Type pour les utilisateurs\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SELASManagement=()=>{const[selas,setSelas]=useState([]);const[filteredSelas,setFilteredSelas]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[editMode,setEditMode]=useState(false);const[editingSelas,setEditingSelas]=useState({});const[newSelas,setNewSelas]=useState(null);const[selectedSelas,setSelectedSelas]=useState([]);const[quickSearch,setQuickSearch]=useState('');const[adminAction,setAdminAction]=useState('default');const[bulkActionType,setBulkActionType]=useState('activate');// Nouvel état pour les utilisateurs disponibles\nconst[availableUsers,setAvailableUsers]=useState([]);const selasService=SELASService.getInstance();useEffect(()=>{fetchSELAS();},[]);// Initialiser les SELAS filtrées au chargement\nuseEffect(()=>{setFilteredSelas(selas);},[selas]);// Effet pour filtrer les SELAS en fonction de la recherche rapide\nuseEffect(()=>{if(!quickSearch.trim()){setFilteredSelas(selas);return;}const searchTerm=quickSearch.toLowerCase().trim();const results=selas.filter(sela=>{return(sela.nom||'').toLowerCase().includes(searchTerm)||(sela.description||'').toLowerCase().includes(searchTerm)||(sela.code||'').toLowerCase().includes(searchTerm);});setFilteredSelas(results);},[quickSearch,selas]);// Ajouter l'effet pour charger les utilisateurs\nuseEffect(()=>{fetchUsers();},[]);const fetchSELAS=async()=>{try{setLoading(true);const selasData=await selasService.getSELAS();setSelas(selasData);setLoading(false);}catch(err){setError('Erreur lors du chargement des SELAS');setLoading(false);}};const fetchUsers=async()=>{try{// Récupérer tous les utilisateurs depuis Firestore\nconst usersCollection=collection(db,'users');const usersSnapshot=await getDocs(usersCollection);const usersList=usersSnapshot.docs.filter(doc=>doc.data().statut!=='Inactif')// Optionnel: filtrer les utilisateurs inactifs\n.map(doc=>({id:doc.id,nom:doc.data().nom||'Sans nom',email:doc.data().email||'',role:doc.data().role||''}));setAvailableUsers(usersList);console.log('Utilisateurs chargés:',usersList.length);}catch(error){console.error('Erreur lors du chargement des utilisateurs:',error);setError('Erreur lors du chargement des utilisateurs');}};const handleEdit=(id,field,value)=>{// Si c'est la nouvelle SELAS temporaire, mettre à jour l'état newSelas\nif(id==='new-selas-temp'){handleNewSelasChange(field,value);return;}// Sinon, mettre à jour une SELAS existante\nsetSelas(prev=>prev.map(sela=>sela.id===id?{...sela,[field]:value}:sela));};const handleNewSelasChange=(field,value)=>{setNewSelas(prev=>{const updated={...(prev||{})};if(field.startsWith('accesPages.')){const pageKey=field.split('.')[1];updated.accesPages={...(updated.accesPages||{dashboard:true,passages:false,sites:false,tournees:false,vehicules:false,map:false,userManagement:false,adminPanel:false}),[pageKey]:value};}else{// Type-safe key check\nconst selasKeys=['nom','description','code','active','sitesAutorises'];const typedField=field;if(selasKeys.includes(typedField)){updated[typedField]=value;}}return updated;});};const handleSaveChanges=async()=>{try{setLoading(true);setError(null);// Mettre à jour les SELAS existantes\nconst updatePromises=selas.map(sela=>selasService.updateSELAS(sela.id,sela));// Ajouter une nouvelle SELAS si nécessaire\nif(newSelas&&newSelas.nom){// Valider les champs obligatoires\nif(!newSelas.nom){setError('Le nom de la SELAS est obligatoire');setLoading(false);return;}// Préparer l'objet avec les valeurs par défaut pour les champs manquants\nconst completeSelas={nom:newSelas.nom,description:newSelas.description||'',code:newSelas.code||'',active:newSelas.active!==undefined?newSelas.active:true,accesPages:newSelas.accesPages||{dashboard:true,passages:false,sites:false,tournees:false,vehicules:false,map:false,userManagement:false,adminPanel:false},sitesAutorises:newSelas.sitesAutorises||[]};await selasService.addSELAS(completeSelas);}// Attendre que toutes les mises à jour soient terminées\nawait Promise.all(updatePromises);// Réinitialiser les états\nsetEditMode(false);setEditingSelas({});setNewSelas(null);setSelectedSelas([]);// Recharger les données\nawait fetchSELAS();}catch(err){setError('Erreur lors de la sauvegarde des modifications');}finally{setLoading(false);}};const handleCancelEdit=()=>{setEditMode(false);setEditingSelas({});setNewSelas(null);setSelectedSelas([]);};const handleDeleteSelected=async()=>{if(!window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedSelas.length} SELAS ?`)){return;}try{setLoading(true);setError(null);const deletePromises=selectedSelas.map(id=>selasService.deleteSELAS(id));await Promise.all(deletePromises);setEditMode(false);setSelectedSelas([]);await fetchSELAS();}catch(err){setError('Erreur lors de la suppression des SELAS');}finally{setLoading(false);}};const toggleSelectSelas=id=>{// Si c'est la nouvelle SELAS temporaire, ne rien faire car elle n'est pas encore sauvegardée\nif(id==='new-selas-temp'){return;}setSelectedSelas(prev=>prev.includes(id)?prev.filter(selasId=>selasId!==id):[...prev,id]);};const toggleSelectAll=()=>{if(selectedSelas.length===filteredSelas.length){setSelectedSelas([]);}else{setSelectedSelas(filteredSelas.map(sela=>sela.id));}};const selasToRender=[...filteredSelas];// Après cette ligne, ajoutons la nouvelle SELAS au tableau s'il y en a une\nif(editMode&&newSelas){// Créer un objet SELAS temporaire pour l'affichage\nconst tempNewSelas={id:'new-selas-temp',// ID temporaire\nnom:newSelas.nom||'',description:newSelas.description||'',code:newSelas.code||'',active:newSelas.active!==undefined?newSelas.active:true,accesPages:newSelas.accesPages||{dashboard:true,passages:false,sites:false,tournees:false,vehicules:false,map:false,userManagement:false,adminPanel:false},sitesAutorises:newSelas.sitesAutorises||[],dateCreation:new Date().toISOString(),dateModification:new Date().toISOString()};// Si tempNewSelas a besoin de la propriété utilisateurs (qui semble ne pas être définie dans le type SELAS),\n// nous devons l'ajouter à l'objet après sa création, en utilisant une assertion de type\ntempNewSelas.utilisateurs=[];// Ajouter la nouvelle SELAS en haut du tableau\nselasToRender.unshift(tempNewSelas);}const handleBulkAction=async()=>{try{setLoading(true);switch(bulkActionType){case'activate':await Promise.all(selectedSelas.map(id=>selasService.updateSELAS(id,{active:true})));break;case'deactivate':await Promise.all(selectedSelas.map(id=>selasService.updateSELAS(id,{active:false})));break;case'delete':await Promise.all(selectedSelas.map(id=>selasService.deleteSELAS(id)));break;}await fetchSELAS();setSelectedSelas([]);setAdminAction('default');}catch(err){setError(`Erreur lors de l'action de masse`);}finally{setLoading(false);}};const handleExportSELAS=async()=>{try{const exportData=await selasService.exportSELAS(selectedSelas);const blob=new Blob([JSON.stringify(exportData,null,2)],{type:'application/json'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='selas_export.json';a.click();window.URL.revokeObjectURL(url);}catch(err){setError('Erreur lors de l\\'exportation des SELAS');}};const renderAdminSection=()=>{if(!editMode)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Actions d'administration\"}),adminAction==='default'&&/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>setAdminAction('bulk'),disabled:selectedSelas.length===0,children:\"Actions de masse\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>setAdminAction('export'),disabled:selectedSelas.length===0,children:\"Exporter\"})]}),adminAction==='bulk'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"select\",{value:bulkActionType,onChange:e=>setBulkActionType(e.target.value),title:\"S\\xE9lectionner une action de masse\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"activate\",children:\"Activer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"deactivate\",children:\"D\\xE9sactiver\"}),/*#__PURE__*/_jsx(\"option\",{value:\"delete\",children:\"Supprimer\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleBulkAction,children:\"Appliquer\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>setAdminAction('default'),children:\"Annuler\"})]}),adminAction==='export'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleExportSELAS,children:\"Confirmer l'exportation\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>setAdminAction('default'),children:\"Annuler\"})]})]});};// Nouvelle fonction pour définir la SELAS par défaut\nconst handleSetDefaultSELAS=async selasId=>{try{// Récupérer l'ID de l'utilisateur connecté\nconst auth=getAuth();const currentUser=auth.currentUser;if(!currentUser||!currentUser.uid){alert('Vous devez être connecté pour effectuer cette action');return;}// Trouver l'utilisateur dans Firestore et mettre à jour son SELAS par défaut\nconst usersRef=collection(db,'users');const userQuery=query(usersRef,where('uid','==',currentUser.uid));const querySnapshot=await getDocs(userQuery);if(querySnapshot.empty){alert('Votre profil utilisateur n\\'a pas été trouvé');return;}const userDoc=querySnapshot.docs[0];await updateDoc(doc(db,'users',userDoc.id),{defaultSelasId:selasId,lastUpdated:new Date().toISOString()});// Afficher un message de succès\nalert(`SELAS définie comme SELAS par défaut avec succès`);// Mettre à jour localStorage pour une expérience utilisateur immédiate\nlocalStorage.setItem('currentSelasId',selasId);}catch(error){// Gérer les erreurs\nconsole.error('Erreur lors de la définition de la SELAS par défaut:',error);setError('Impossible de définir la SELAS par défaut');alert('Impossible de définir la SELAS par défaut');}};// Mappings pour les noms d'accès\nconst accessPageNames={dashboard:'Tableau de bord',passages:'Passages',sites:'Sites',tournees:'Tournées',vehicules:'Véhicules',map:'Carte',userManagement:'Gestion utilisateurs',adminPanel:'Administration'};// Améliorer la définition des colonnes\nconst columns=[{title:'Sélection',dataIndex:'id',width:50,render:id=>/*#__PURE__*/_jsx(Checkbox,{checked:selectedSelas.includes(id),onChange:()=>toggleSelectSelas(id),\"aria-label\":`Sélectionner SELAS ${id}`})},{title:'Nom',dataIndex:'nom',width:150,render:(nom,record)=>/*#__PURE__*/_jsx(Input,{value:nom,onChange:e=>handleEdit(record.id,'nom',e.target.value),\"aria-label\":\"Nom de la SELAS\"})},{title:'Description',dataIndex:'description',width:200,render:(description,record)=>/*#__PURE__*/_jsx(Input,{value:description,onChange:e=>handleEdit(record.id,'description',e.target.value),\"aria-label\":\"Description de la SELAS\"})},{title:'Code',dataIndex:'code',width:100,render:(code,record)=>/*#__PURE__*/_jsx(Input,{value:code,onChange:e=>handleEdit(record.id,'code',e.target.value),\"aria-label\":\"Code de la SELAS\"})},{title:'Statut',dataIndex:'active',width:100,render:(active,record)=>/*#__PURE__*/_jsx(Switch,{checked:active,onChange:checked=>handleEdit(record.id,'active',checked),\"aria-label\":\"Statut de la SELAS\"})},{title:'Accès',dataIndex:'accesPages',width:300,render:function(){let accesPages=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let record=arguments.length>1?arguments[1]:undefined;return/*#__PURE__*/_jsx(\"div\",{className:\"acces-pages-container\",children:editMode?/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexWrap:'wrap',gap:'8px'},children:Object.entries(accesPages).map(_ref=>{let[page,hasAccess]=_ref;return/*#__PURE__*/_jsx(Checkbox,{checked:!!hasAccess,onChange:e=>handleEdit(record.id,`accesPages.${page}`,e.target.checked),style:{marginRight:'8px',marginBottom:'8px'},children:/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.8rem'},children:accessPageNames[page]||page})},page);})}):/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexWrap:'wrap',gap:'5px'},children:[Object.entries(accesPages).filter(_ref2=>{let[_,hasAccess]=_ref2;return hasAccess;}).map(_ref3=>{let[page]=_ref3;return/*#__PURE__*/_jsx(Tag,{color:\"blue\",style:{margin:'2px'},children:accessPageNames[page]||page},page);}),!Object.values(accesPages||{}).some(Boolean)&&/*#__PURE__*/_jsx(\"span\",{style:{color:'#999',fontStyle:'italic'},children:\"Aucun acc\\xE8s\"})]})});}},{title:'Utilisateurs',dataIndex:'utilisateurs',width:200,render:function(){let utilisateurs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let record=arguments.length>1?arguments[1]:undefined;return/*#__PURE__*/_jsx(\"div\",{className:\"users-association\",children:editMode?/*#__PURE__*/_jsx(Select,{mode:\"multiple\",style:{width:'100%'},placeholder:\"Associer des utilisateurs\",value:utilisateurs||[],onChange:newUsers=>handleUserAssociation(record.id,newUsers),optionFilterProp:\"children\",filterOption:(input,option)=>{var _option$label;return((option===null||option===void 0?void 0:(_option$label=option.label)===null||_option$label===void 0?void 0:_option$label.toString().toLowerCase())||'').includes(input.toLowerCase());},options:availableUsers.map(user=>({value:user.id,label:user.nom?`${user.nom} (${user.email})`:user.email}))}):/*#__PURE__*/_jsx(\"div\",{children:utilisateurs&&utilisateurs.length>0?/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'3px'},children:[utilisateurs.slice(0,3).map(userId=>{const user=availableUsers.find(u=>u.id===userId);return/*#__PURE__*/_jsx(Tag,{icon:/*#__PURE__*/_jsx(FaUser,{style:{marginRight:'5px',verticalAlign:'middle'}}),color:\"green\",children:user?user.nom||user.email:'Utilisateur inconnu'},userId);}),utilisateurs.length>3&&/*#__PURE__*/_jsx(Tooltip,{title:utilisateurs.slice(3).map(userId=>{const user=availableUsers.find(u=>u.id===userId);return user?user.nom||user.email:'Utilisateur inconnu';}).join(', '),children:/*#__PURE__*/_jsx(Tag,{color:\"blue\",children:`+${utilisateurs.length-3} autres`})})]}):/*#__PURE__*/_jsx(\"span\",{style:{color:'#999',fontStyle:'italic'},children:\"Aucun utilisateur\"})})});}}];// Améliorer la fonction handleUserAssociation\nconst handleUserAssociation=async(selasId,userIds)=>{try{console.log(`Association des utilisateurs à la SELAS ${selasId}:`,userIds);// Si c'est la nouvelle SELAS temporaire, mettre à jour l'état newSelas\nif(selasId==='new-selas-temp'){setNewSelas(prev=>({...prev,utilisateurs:userIds}));return;}// Sinon, mettre à jour une SELAS existante\nsetSelas(prev=>prev.map(sela=>sela.id===selasId?{...sela,utilisateurs:userIds}:sela));// Si vous avez une API pour l'association, vous pouvez l'appeler ici\n// await userService.associateUsersToSELAS(selasId, userIds);\n}catch(error){console.error('Erreur lors de l\\'association des utilisateurs:',error);setError('Erreur lors de l\\'association des utilisateurs');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Chargement des SELAS...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"selas-management\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selas-management-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Gestion des SELAS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"action-buttons\",children:!editMode?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:()=>setEditMode(true),style:{backgroundColor:'#1976d2',color:'white',padding:'10px 16px',border:'none',borderRadius:'4px',cursor:'pointer',display:'flex',alignItems:'center',gap:'8px',fontWeight:500,transition:'all 0.3s ease',boxShadow:'0 2px 5px rgba(0,0,0,0.2)'},children:[/*#__PURE__*/_jsx(FaEdit,{}),\" Modifier\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary\",onClick:()=>{setEditMode(true);setNewSelas({nom:'',description:'',code:'',active:true,accesPages:{dashboard:true,passages:false,sites:false,tournees:false,vehicules:false,map:false,userManagement:false,adminPanel:false},sitesAutorises:[]});},style:{backgroundColor:'#2196f3',color:'white',padding:'10px 16px',border:'none',borderRadius:'4px',cursor:'pointer',display:'flex',alignItems:'center',gap:'8px',fontWeight:500,marginLeft:'10px',transition:'all 0.3s ease',boxShadow:'0 2px 5px rgba(0,0,0,0.2)'},children:[/*#__PURE__*/_jsx(FaPlus,{}),\" Ajouter\"]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:handleSaveChanges,style:{backgroundColor:'#4caf50',color:'white',padding:'10px 16px',border:'none',borderRadius:'4px',cursor:'pointer',display:'flex',alignItems:'center',gap:'8px',fontWeight:500,transition:'all 0.3s ease',boxShadow:'0 2px 5px rgba(0,0,0,0.2)'},children:[/*#__PURE__*/_jsx(FaSave,{}),\" Enregistrer\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary\",onClick:handleCancelEdit,style:{backgroundColor:'#ff9800',color:'white',padding:'10px 16px',border:'none',borderRadius:'4px',cursor:'pointer',display:'flex',alignItems:'center',gap:'8px',fontWeight:500,marginLeft:'10px',transition:'all 0.3s ease',boxShadow:'0 2px 5px rgba(0,0,0,0.2)'},children:[/*#__PURE__*/_jsx(FaTimes,{}),\" Annuler\"]}),selectedSelas.length>0&&/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-danger\",onClick:handleDeleteSelected,style:{backgroundColor:'#f44336',color:'white',padding:'10px 16px',border:'none',borderRadius:'4px',cursor:'pointer',display:'flex',alignItems:'center',gap:'8px',fontWeight:500,marginLeft:'10px',transition:'all 0.3s ease',boxShadow:'0 2px 5px rgba(0,0,0,0.2)'},children:[/*#__PURE__*/_jsx(FaTrash,{}),\" Supprimer (\",selectedSelas.length,\")\"]})]})})]}),renderAdminSection(),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Rechercher une SELAS...\",value:quickSearch,onChange:e=>setQuickSearch(e.target.value),className:\"search-input\"}),quickSearch&&/*#__PURE__*/_jsx(\"button\",{className:\"clear-search\",onClick:()=>setQuickSearch(''),children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"action-buttons\",children:!editMode?/*#__PURE__*/_jsx(_Fragment,{}):/*#__PURE__*/_jsx(_Fragment,{children:selectedSelas.length>0&&/*#__PURE__*/_jsxs(\"button\",{className:\"modern-button delete-button\",onClick:handleDeleteSelected,style:{backgroundColor:'#f44336',color:'white',padding:'8px 15px',border:'none',borderRadius:'4px',cursor:'pointer',display:'flex',alignItems:'center',gap:'5px',fontWeight:'bold',transition:'all 0.3s ease',boxShadow:'0 2px 5px rgba(0,0,0,0.2)'},children:[/*#__PURE__*/_jsx(FaTrash,{}),\" Supprimer (\",selectedSelas.length,\")\"]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"selas-table-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"results-info\",children:/*#__PURE__*/_jsxs(\"p\",{children:[filteredSelas.length,\" r\\xE9sultat(s) trouv\\xE9(s)\",quickSearch?` pour la recherche \"${quickSearch}\"`:'']})}),/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:selasToRender,loading:loading,scroll:{x:1500},rowSelection:{selectedRowKeys:selectedSelas,onChange:keys=>{const stringKeys=keys.map(key=>key.toString());setSelectedSelas(stringKeys);}},pagination:{pageSize:10,showSizeChanger:true},rowKey:\"id\",rowClassName:record=>{return record.id==='new-selas-temp'?'new-selas-row':'';}})]}),editMode&&/*#__PURE__*/_jsx(\"div\",{className:\"default-selas-actions\",children:selectedSelas.length===1&&/*#__PURE__*/_jsxs(\"button\",{className:\"set-default-button\",onClick:()=>handleSetDefaultSELAS(selectedSelas[0]),style:{backgroundColor:'#2196f3',color:'white',padding:'10px 16px',border:'none',borderRadius:'4px',cursor:'pointer',display:'flex',alignItems:'center',gap:'8px',fontWeight:500,marginTop:'15px',transition:'all 0.3s ease',boxShadow:'0 2px 5px rgba(0,0,0,0.2)'},children:[/*#__PURE__*/_jsx(FaCheckCircle,{}),\" D\\xE9finir comme SELAS par d\\xE9faut\"]})})]});};export default SELASManagement;","map":{"version":3,"names":["React","useState","useEffect","Table","Checkbox","Select","Switch","Input","Tag","Tooltip","FaEdit","FaPlus","FaSave","FaTimes","FaTrash","FaCheckCircle","FaUser","SELASService","collection","getDocs","updateDoc","doc","query","where","getAuth","db","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SELASManagement","selas","setSelas","filteredSelas","setFilteredSelas","loading","setLoading","error","setError","editMode","setEditMode","editingSelas","setEditingSelas","newSelas","setNewSelas","selectedSelas","setSelectedSelas","quickSearch","setQuickSearch","adminAction","setAdminAction","bulkActionType","setBulkActionType","availableUsers","setAvailableUsers","selasService","getInstance","fetchSELAS","trim","searchTerm","toLowerCase","results","filter","sela","nom","includes","description","code","fetchUsers","selasData","getSELAS","err","usersCollection","usersSnapshot","usersList","docs","data","statut","map","id","email","role","console","log","length","handleEdit","field","value","handleNewSelasChange","prev","updated","startsWith","pageKey","split","accesPages","dashboard","passages","sites","tournees","vehicules","userManagement","adminPanel","selasKeys","typedField","handleSaveChanges","updatePromises","updateSELAS","completeSelas","active","undefined","sitesAutorises","addSELAS","Promise","all","handleCancelEdit","handleDeleteSelected","window","confirm","deletePromises","deleteSELAS","toggleSelectSelas","selasId","toggleSelectAll","selasToRender","tempNewSelas","dateCreation","Date","toISOString","dateModification","utilisateurs","unshift","handleBulkAction","handleExportSELAS","exportData","exportSELAS","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","renderAdminSection","className","children","onClick","disabled","onChange","e","target","title","handleSetDefaultSELAS","auth","currentUser","uid","alert","usersRef","userQuery","querySnapshot","empty","userDoc","defaultSelasId","lastUpdated","localStorage","setItem","accessPageNames","columns","dataIndex","width","render","checked","record","arguments","style","display","flexWrap","gap","Object","entries","_ref","page","hasAccess","marginRight","marginBottom","fontSize","_ref2","_","_ref3","color","margin","values","some","Boolean","fontStyle","mode","placeholder","newUsers","handleUserAssociation","optionFilterProp","filterOption","input","option","_option$label","label","toString","options","user","flexDirection","slice","userId","find","u","icon","verticalAlign","join","userIds","backgroundColor","padding","border","borderRadius","cursor","alignItems","fontWeight","transition","boxShadow","marginLeft","dataSource","scroll","x","rowSelection","selectedRowKeys","keys","stringKeys","key","pagination","pageSize","showSizeChanger","rowKey","rowClassName","marginTop"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/SELASManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Checkbox, Select, Switch, Input, Tag, Tooltip } from 'antd';\nimport { \n  FaEdit, \n  FaPlus, \n  FaSave, \n  FaTimes, \n  FaTrash, \n  FaFileExport, \n  FaCheckCircle, \n  FaTimesCircle,\n  FaUser,\n  FaUsers,\n  FaLock,\n  FaLockOpen,\n  FaKey\n} from 'react-icons/fa';\nimport { SELAS } from '../types/SELAS';\nimport { SELASService } from '../services/SELASService';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { db } from '../config/firebase';\nimport './SELASManagement.css';\nimport './DataTable.css';\nimport './EditMode.css';\n\n// Type pour les utilisateurs\ninterface User {\n  id: string;\n  nom: string;\n  email: string;\n  role?: string;\n}\n\nconst SELASManagement: React.FC = () => {\n  const [selas, setSelas] = useState<SELAS[]>([]);\n  const [filteredSelas, setFilteredSelas] = useState<SELAS[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [editMode, setEditMode] = useState(false);\n  const [editingSelas, setEditingSelas] = useState<{[key: string]: SELAS}>({});\n  const [newSelas, setNewSelas] = useState<Partial<SELAS> | null>(null);\n  const [selectedSelas, setSelectedSelas] = useState<string[]>([]);\n  const [quickSearch, setQuickSearch] = useState('');\n  const [adminAction, setAdminAction] = useState<'default' | 'bulk' | 'export'>('default');\n  const [bulkActionType, setBulkActionType] = useState<'activate' | 'deactivate' | 'delete'>('activate');\n  \n  // Nouvel état pour les utilisateurs disponibles\n  const [availableUsers, setAvailableUsers] = useState<User[]>([]);\n  \n  const selasService = SELASService.getInstance();\n\n  useEffect(() => {\n    fetchSELAS();\n  }, []);\n\n  // Initialiser les SELAS filtrées au chargement\n  useEffect(() => {\n    setFilteredSelas(selas);\n  }, [selas]);\n\n  // Effet pour filtrer les SELAS en fonction de la recherche rapide\n  useEffect(() => {\n    if (!quickSearch.trim()) {\n      setFilteredSelas(selas);\n      return;\n    }\n\n    const searchTerm = quickSearch.toLowerCase().trim();\n    const results = selas.filter(sela => {\n      return (\n        (sela.nom || '').toLowerCase().includes(searchTerm) ||\n        (sela.description || '').toLowerCase().includes(searchTerm) ||\n        (sela.code || '').toLowerCase().includes(searchTerm)\n      );\n    });\n\n    setFilteredSelas(results);\n  }, [quickSearch, selas]);\n\n  // Ajouter l'effet pour charger les utilisateurs\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchSELAS = async () => {\n    try {\n      setLoading(true);\n      const selasData = await selasService.getSELAS();\n      setSelas(selasData);\n      setLoading(false);\n    } catch (err) {\n      setError('Erreur lors du chargement des SELAS');\n      setLoading(false);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      // Récupérer tous les utilisateurs depuis Firestore\n      const usersCollection = collection(db, 'users');\n      const usersSnapshot = await getDocs(usersCollection);\n      \n      const usersList = usersSnapshot.docs\n        .filter(doc => doc.data().statut !== 'Inactif') // Optionnel: filtrer les utilisateurs inactifs\n        .map(doc => ({\n          id: doc.id,\n          nom: doc.data().nom || 'Sans nom',\n          email: doc.data().email || '',\n          role: doc.data().role || ''\n        }));\n      \n      setAvailableUsers(usersList);\n      console.log('Utilisateurs chargés:', usersList.length);\n    } catch (error) {\n      console.error('Erreur lors du chargement des utilisateurs:', error);\n      setError('Erreur lors du chargement des utilisateurs');\n    }\n  };\n\n  const handleEdit = (id: string, field: string, value: any) => {\n    // Si c'est la nouvelle SELAS temporaire, mettre à jour l'état newSelas\n    if (id === 'new-selas-temp') {\n      handleNewSelasChange(field, value);\n      return;\n    }\n    \n    // Sinon, mettre à jour une SELAS existante\n    setSelas(prev => \n      prev.map(sela => \n        sela.id === id \n          ? { ...sela, [field]: value }\n          : sela\n      )\n    );\n  };\n\n  const handleNewSelasChange = (field: string, value: any) => {\n    setNewSelas(prev => {\n      const updated = { ...(prev || {}) };\n      \n      if (field.startsWith('accesPages.')) {\n        const pageKey = field.split('.')[1];\n        updated.accesPages = {\n          ...(updated.accesPages || {\n            dashboard: true,\n            passages: false,\n            sites: false,\n            tournees: false,\n            vehicules: false,\n            map: false,\n            userManagement: false,\n            adminPanel: false\n          }),\n          [pageKey]: value\n        };\n      } else {\n        // Type-safe key check\n        const selasKeys = ['nom', 'description', 'code', 'active', 'sitesAutorises'] as const;\n        const typedField = field as typeof selasKeys[number];\n        \n        if (selasKeys.includes(typedField)) {\n          (updated as any)[typedField] = value;\n        }\n      }\n      \n      return updated;\n    });\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Mettre à jour les SELAS existantes\n      const updatePromises = selas.map(sela => selasService.updateSELAS(sela.id, sela));\n      \n      // Ajouter une nouvelle SELAS si nécessaire\n      if (newSelas && newSelas.nom) {\n        // Valider les champs obligatoires\n        if (!newSelas.nom) {\n          setError('Le nom de la SELAS est obligatoire');\n          setLoading(false);\n          return;\n        }\n        \n        // Préparer l'objet avec les valeurs par défaut pour les champs manquants\n        const completeSelas: Omit<SELAS, 'id' | 'dateCreation' | 'dateModification'> = {\n          nom: newSelas.nom,\n          description: newSelas.description || '',\n          code: newSelas.code || '',\n          active: newSelas.active !== undefined ? newSelas.active : true,\n          accesPages: newSelas.accesPages || {\n            dashboard: true,\n            passages: false,\n            sites: false,\n            tournees: false,\n            vehicules: false,\n            map: false,\n            userManagement: false,\n            adminPanel: false\n          },\n          sitesAutorises: newSelas.sitesAutorises || []\n        };\n        \n        await selasService.addSELAS(completeSelas);\n      }\n      \n      // Attendre que toutes les mises à jour soient terminées\n      await Promise.all(updatePromises);\n      \n      // Réinitialiser les états\n      setEditMode(false);\n      setEditingSelas({});\n      setNewSelas(null);\n      setSelectedSelas([]);\n      \n      // Recharger les données\n      await fetchSELAS();\n    } catch (err) {\n      setError('Erreur lors de la sauvegarde des modifications');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditMode(false);\n    setEditingSelas({});\n    setNewSelas(null);\n    setSelectedSelas([]);\n  };\n\n  const handleDeleteSelected = async () => {\n    if (!window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedSelas.length} SELAS ?`)) {\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const deletePromises = selectedSelas.map(id => selasService.deleteSELAS(id));\n      await Promise.all(deletePromises);\n      \n      setEditMode(false);\n      setSelectedSelas([]);\n      \n      await fetchSELAS();\n    } catch (err) {\n      setError('Erreur lors de la suppression des SELAS');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const toggleSelectSelas = (id: string) => {\n    // Si c'est la nouvelle SELAS temporaire, ne rien faire car elle n'est pas encore sauvegardée\n    if (id === 'new-selas-temp') {\n      return;\n    }\n    \n    setSelectedSelas(prev => \n      prev.includes(id) \n        ? prev.filter(selasId => selasId !== id)\n        : [...prev, id]\n    );\n  };\n\n  const toggleSelectAll = () => {\n    if (selectedSelas.length === filteredSelas.length) {\n      setSelectedSelas([]);\n    } else {\n      setSelectedSelas(filteredSelas.map(sela => sela.id));\n    }\n  };\n\n  const selasToRender = [...filteredSelas];\n  \n  // Après cette ligne, ajoutons la nouvelle SELAS au tableau s'il y en a une\n  if (editMode && newSelas) {\n    // Créer un objet SELAS temporaire pour l'affichage\n    const tempNewSelas: SELAS = {\n      id: 'new-selas-temp',  // ID temporaire\n      nom: newSelas.nom || '',\n      description: newSelas.description || '',\n      code: newSelas.code || '',\n      active: newSelas.active !== undefined ? newSelas.active : true,\n      accesPages: newSelas.accesPages || {\n        dashboard: true,\n        passages: false,\n        sites: false,\n        tournees: false,\n        vehicules: false,\n        map: false,\n        userManagement: false,\n        adminPanel: false\n      },\n      sitesAutorises: newSelas.sitesAutorises || [],\n      dateCreation: new Date().toISOString(),\n      dateModification: new Date().toISOString()\n    };\n    \n    // Si tempNewSelas a besoin de la propriété utilisateurs (qui semble ne pas être définie dans le type SELAS),\n    // nous devons l'ajouter à l'objet après sa création, en utilisant une assertion de type\n    (tempNewSelas as any).utilisateurs = [];\n    \n    // Ajouter la nouvelle SELAS en haut du tableau\n    selasToRender.unshift(tempNewSelas);\n  }\n\n  const handleBulkAction = async () => {\n    try {\n      setLoading(true);\n      switch (bulkActionType) {\n        case 'activate':\n          await Promise.all(\n            selectedSelas.map(id => selasService.updateSELAS(id, { active: true }))\n          );\n          break;\n        case 'deactivate':\n          await Promise.all(\n            selectedSelas.map(id => selasService.updateSELAS(id, { active: false }))\n          );\n          break;\n        case 'delete':\n          await Promise.all(\n            selectedSelas.map(id => selasService.deleteSELAS(id))\n          );\n          break;\n      }\n      \n      await fetchSELAS();\n      setSelectedSelas([]);\n      setAdminAction('default');\n    } catch (err) {\n      setError(`Erreur lors de l'action de masse`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExportSELAS = async () => {\n    try {\n      const exportData = await selasService.exportSELAS(selectedSelas);\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'selas_export.json';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      setError('Erreur lors de l\\'exportation des SELAS');\n    }\n  };\n\n  const renderAdminSection = () => {\n    if (!editMode) return null;\n\n    return (\n      <div className=\"admin-section\">\n        <h3>Actions d'administration</h3>\n        {adminAction === 'default' && (\n          <div className=\"action-buttons\">\n            <button \n              className=\"btn btn-secondary\"\n              onClick={() => setAdminAction('bulk')}\n              disabled={selectedSelas.length === 0}\n            >\n              Actions de masse\n            </button>\n            <button \n              className=\"btn btn-secondary\"\n              onClick={() => setAdminAction('export')}\n              disabled={selectedSelas.length === 0}\n            >\n              Exporter\n            </button>\n          </div>\n        )}\n\n        {adminAction === 'bulk' && (\n          <div>\n            <select \n              value={bulkActionType}\n              onChange={(e) => setBulkActionType(e.target.value as any)}\n              title=\"Sélectionner une action de masse\"\n            >\n              <option value=\"activate\">Activer</option>\n              <option value=\"deactivate\">Désactiver</option>\n              <option value=\"delete\">Supprimer</option>\n            </select>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleBulkAction}\n            >\n              Appliquer\n            </button>\n            <button \n              className=\"btn btn-secondary\"\n              onClick={() => setAdminAction('default')}\n            >\n              Annuler\n            </button>\n          </div>\n        )}\n\n        {adminAction === 'export' && (\n          <div>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleExportSELAS}\n            >\n              Confirmer l'exportation\n            </button>\n            <button \n              className=\"btn btn-secondary\"\n              onClick={() => setAdminAction('default')}\n            >\n              Annuler\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Nouvelle fonction pour définir la SELAS par défaut\n  const handleSetDefaultSELAS = async (selasId: string) => {\n    try {\n      // Récupérer l'ID de l'utilisateur connecté\n      const auth = getAuth();\n      const currentUser = auth.currentUser;\n      \n      if (!currentUser || !currentUser.uid) {\n        alert('Vous devez être connecté pour effectuer cette action');\n        return;\n      }\n      \n      // Trouver l'utilisateur dans Firestore et mettre à jour son SELAS par défaut\n      const usersRef = collection(db, 'users');\n      const userQuery = query(usersRef, where('uid', '==', currentUser.uid));\n      const querySnapshot = await getDocs(userQuery);\n      \n      if (querySnapshot.empty) {\n        alert('Votre profil utilisateur n\\'a pas été trouvé');\n        return;\n      }\n      \n      const userDoc = querySnapshot.docs[0];\n      await updateDoc(doc(db, 'users', userDoc.id), {\n        defaultSelasId: selasId,\n        lastUpdated: new Date().toISOString()\n      });\n      \n      // Afficher un message de succès\n      alert(`SELAS définie comme SELAS par défaut avec succès`);\n      \n      // Mettre à jour localStorage pour une expérience utilisateur immédiate\n      localStorage.setItem('currentSelasId', selasId);\n    } catch (error) {\n      // Gérer les erreurs\n      console.error('Erreur lors de la définition de la SELAS par défaut:', error);\n      setError('Impossible de définir la SELAS par défaut');\n      alert('Impossible de définir la SELAS par défaut');\n    }\n  };\n\n  // Mappings pour les noms d'accès\n  const accessPageNames: Record<string, string> = {\n    dashboard: 'Tableau de bord',\n    passages: 'Passages',\n    sites: 'Sites',\n    tournees: 'Tournées',\n    vehicules: 'Véhicules',\n    map: 'Carte',\n    userManagement: 'Gestion utilisateurs',\n    adminPanel: 'Administration'\n  };\n  \n  // Améliorer la définition des colonnes\n  const columns = [\n    {\n      title: 'Sélection',\n      dataIndex: 'id',\n      width: 50,\n      render: (id: string) => (\n        <Checkbox \n          checked={selectedSelas.includes(id)}\n          onChange={() => toggleSelectSelas(id)}\n          aria-label={`Sélectionner SELAS ${id}`}\n        />\n      )\n    },\n    {\n      title: 'Nom',\n      dataIndex: 'nom',\n      width: 150,\n      render: (nom: string, record: SELAS) => (\n        <Input \n          value={nom}\n          onChange={(e) => handleEdit(record.id, 'nom', e.target.value)}\n          aria-label=\"Nom de la SELAS\"\n        />\n      )\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      width: 200,\n      render: (description: string, record: SELAS) => (\n        <Input \n          value={description}\n          onChange={(e) => handleEdit(record.id, 'description', e.target.value)}\n          aria-label=\"Description de la SELAS\"\n        />\n      )\n    },\n    {\n      title: 'Code',\n      dataIndex: 'code',\n      width: 100,\n      render: (code: string, record: SELAS) => (\n        <Input \n          value={code}\n          onChange={(e) => handleEdit(record.id, 'code', e.target.value)}\n          aria-label=\"Code de la SELAS\"\n        />\n      )\n    },\n    {\n      title: 'Statut',\n      dataIndex: 'active',\n      width: 100,\n      render: (active: boolean, record: SELAS) => (\n        <Switch \n          checked={active}\n          onChange={(checked) => handleEdit(record.id, 'active', checked)}\n          aria-label=\"Statut de la SELAS\"\n        />\n      )\n    },\n    {\n      title: 'Accès',\n      dataIndex: 'accesPages',\n      width: 300,\n      render: (accesPages: Record<string, boolean> = {}, record: SELAS) => (\n        <div className=\"acces-pages-container\">\n          {editMode ? (\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\n              {Object.entries(accesPages).map(([page, hasAccess]) => (\n                <Checkbox \n                  key={page}\n                  checked={!!hasAccess}\n                  onChange={(e) => handleEdit(\n                    record.id, \n                    `accesPages.${page}`, \n                    e.target.checked\n                  )}\n                  style={{ marginRight: '8px', marginBottom: '8px' }}\n                >\n                  <span style={{ fontSize: '0.8rem' }}>{accessPageNames[page] || page}</span>\n                </Checkbox>\n              ))}\n            </div>\n          ) : (\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '5px' }}>\n              {Object.entries(accesPages).filter(([_, hasAccess]) => hasAccess).map(([page]) => (\n                <Tag color=\"blue\" key={page} style={{ margin: '2px' }}>\n                  {accessPageNames[page] || page}\n                </Tag>\n              ))}\n              {!Object.values(accesPages || {}).some(Boolean) && (\n                <span style={{ color: '#999', fontStyle: 'italic' }}>Aucun accès</span>\n              )}\n            </div>\n          )}\n        </div>\n      )\n    },\n    {\n      title: 'Utilisateurs',\n      dataIndex: 'utilisateurs',\n      width: 200,\n      render: (utilisateurs: string[] = [], record: SELAS) => (\n        <div className=\"users-association\">\n          {editMode ? (\n            <Select\n              mode=\"multiple\"\n              style={{ width: '100%' }}\n              placeholder=\"Associer des utilisateurs\"\n              value={utilisateurs || []}\n              onChange={(newUsers) => handleUserAssociation(record.id, newUsers)}\n              optionFilterProp=\"children\"\n              filterOption={(input, option) => \n                (option?.label?.toString().toLowerCase() || '').includes(input.toLowerCase())\n              }\n              options={availableUsers.map(user => ({\n                value: user.id,\n                label: user.nom ? `${user.nom} (${user.email})` : user.email\n              }))}\n            />\n          ) : (\n            <div>\n              {utilisateurs && utilisateurs.length > 0 ? (\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '3px' }}>\n                  {utilisateurs.slice(0, 3).map(userId => {\n                    const user = availableUsers.find(u => u.id === userId);\n                    return (\n                      <Tag \n                        icon={<FaUser style={{ marginRight: '5px', verticalAlign: 'middle' }} />} \n                        color=\"green\" \n                        key={userId}\n                      >\n                        {user ? user.nom || user.email : 'Utilisateur inconnu'}\n                      </Tag>\n                    );\n                  })}\n                  {utilisateurs.length > 3 && (\n                    <Tooltip title={utilisateurs.slice(3).map(userId => {\n                      const user = availableUsers.find(u => u.id === userId);\n                      return user ? user.nom || user.email : 'Utilisateur inconnu';\n                    }).join(', ')}>\n                      <Tag color=\"blue\">{`+${utilisateurs.length - 3} autres`}</Tag>\n                    </Tooltip>\n                  )}\n                </div>\n              ) : (\n                <span style={{ color: '#999', fontStyle: 'italic' }}>Aucun utilisateur</span>\n              )}\n            </div>\n          )}\n        </div>\n      )\n    }\n  ];\n\n  // Améliorer la fonction handleUserAssociation\n  const handleUserAssociation = async (selasId: string, userIds: string[]) => {\n    try {\n      console.log(`Association des utilisateurs à la SELAS ${selasId}:`, userIds);\n      \n      // Si c'est la nouvelle SELAS temporaire, mettre à jour l'état newSelas\n      if (selasId === 'new-selas-temp') {\n        setNewSelas(prev => ({\n          ...prev!,\n          utilisateurs: userIds\n        }));\n        return;\n      }\n      \n      // Sinon, mettre à jour une SELAS existante\n      setSelas(prev => \n        prev.map(sela => \n          sela.id === selasId \n            ? { ...sela, utilisateurs: userIds }\n            : sela\n        )\n      );\n      \n      // Si vous avez une API pour l'association, vous pouvez l'appeler ici\n      // await userService.associateUsersToSELAS(selasId, userIds);\n    } catch (error) {\n      console.error('Erreur lors de l\\'association des utilisateurs:', error);\n      setError('Erreur lors de l\\'association des utilisateurs');\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Chargement des SELAS...</div>;\n  }\n\n  return (\n    <div className=\"selas-management\">\n      <div className=\"selas-management-header\">\n        <h2>Gestion des SELAS</h2>\n        <div className=\"action-buttons\">\n          {!editMode ? (\n            <>\n              <button \n                className=\"btn btn-primary\"\n                onClick={() => setEditMode(true)}\n                style={{\n                  backgroundColor: '#1976d2',\n                  color: 'white',\n                  padding: '10px 16px',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                  fontWeight: 500,\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                }}\n              >\n                <FaEdit /> Modifier\n              </button>\n              <button \n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setEditMode(true);\n                  setNewSelas({\n                    nom: '',\n                    description: '',\n                    code: '',\n                    active: true,\n                    accesPages: {\n                      dashboard: true,\n                      passages: false,\n                      sites: false,\n                      tournees: false,\n                      vehicules: false,\n                      map: false,\n                      userManagement: false,\n                      adminPanel: false\n                    },\n                    sitesAutorises: []\n                  });\n                }}\n                style={{\n                  backgroundColor: '#2196f3',\n                  color: 'white',\n                  padding: '10px 16px',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                  fontWeight: 500,\n                  marginLeft: '10px',\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                }}\n              >\n                <FaPlus /> Ajouter\n              </button>\n            </>\n          ) : (\n            <>\n              <button \n                className=\"btn btn-primary\"\n                onClick={handleSaveChanges}\n                style={{\n                  backgroundColor: '#4caf50',\n                  color: 'white',\n                  padding: '10px 16px',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                  fontWeight: 500,\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                }}\n              >\n                <FaSave /> Enregistrer\n              </button>\n              <button \n                className=\"btn btn-secondary\"\n                onClick={handleCancelEdit}\n                style={{\n                  backgroundColor: '#ff9800',\n                  color: 'white',\n                  padding: '10px 16px',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                  fontWeight: 500,\n                  marginLeft: '10px',\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                }}\n              >\n                <FaTimes /> Annuler\n              </button>\n              {selectedSelas.length > 0 && (\n                <button \n                  className=\"btn btn-danger\"\n                  onClick={handleDeleteSelected}\n                  style={{\n                    backgroundColor: '#f44336',\n                    color: 'white',\n                    padding: '10px 16px',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    fontWeight: 500,\n                    marginLeft: '10px',\n                    transition: 'all 0.3s ease',\n                    boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                  }}\n                >\n                  <FaTrash /> Supprimer ({selectedSelas.length})\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n      \n      {renderAdminSection()}\n      \n      <div className=\"controls\">\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            placeholder=\"Rechercher une SELAS...\"\n            value={quickSearch}\n            onChange={e => setQuickSearch(e.target.value)}\n            className=\"search-input\"\n          />\n          {quickSearch && (\n            <button \n              className=\"clear-search\" \n              onClick={() => setQuickSearch('')}\n            >\n              ✕\n            </button>\n          )}\n        </div>\n        \n        <div className=\"action-buttons\">\n          {!editMode ? (\n            <>\n              {/* Actions pour le mode consultation - pas de boutons ici, ils sont déjà en haut */}\n            </>\n          ) : (\n            <>\n              {selectedSelas.length > 0 && (\n                <button \n                  className=\"modern-button delete-button\" \n                  onClick={handleDeleteSelected}\n                  style={{ \n                    backgroundColor: '#f44336', \n                    color: 'white',\n                    padding: '8px 15px',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '5px',\n                    fontWeight: 'bold',\n                    transition: 'all 0.3s ease',\n                    boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                  }}\n                >\n                  <FaTrash /> Supprimer ({selectedSelas.length})\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"selas-table-container\">\n        <div className=\"results-info\">\n          <p>{filteredSelas.length} résultat(s) trouvé(s){quickSearch ? ` pour la recherche \"${quickSearch}\"` : ''}</p>\n        </div>\n        \n        <Table \n          columns={columns}\n          dataSource={selasToRender}\n          loading={loading}\n          scroll={{ x: 1500 }}\n          rowSelection={{\n            selectedRowKeys: selectedSelas,\n            onChange: (keys) => {\n              const stringKeys = keys.map(key => key.toString());\n              setSelectedSelas(stringKeys);\n            },\n          }}\n          pagination={{\n            pageSize: 10,\n            showSizeChanger: true,\n          }}\n          rowKey=\"id\"\n          rowClassName={(record) => {\n            return record.id === 'new-selas-temp' ? 'new-selas-row' : '';\n          }}\n        />\n      </div>\n      \n      {editMode && (\n        <div className=\"default-selas-actions\">\n          {selectedSelas.length === 1 && (\n            <button \n              className=\"set-default-button\"\n              onClick={() => handleSetDefaultSELAS(selectedSelas[0])}\n              style={{\n                backgroundColor: '#2196f3',\n                color: 'white',\n                padding: '10px 16px',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                fontWeight: 500,\n                marginTop: '15px',\n                transition: 'all 0.3s ease',\n                boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n              }}\n            >\n              <FaCheckCircle /> Définir comme SELAS par défaut\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SELASManagement; \n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,KAAK,CAAEC,QAAQ,CAAEC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,GAAG,CAAEC,OAAO,KAAQ,MAAM,CAC3E,OACEC,MAAM,CACNC,MAAM,CACNC,MAAM,CACNC,OAAO,CACPC,OAAO,CAEPC,aAAa,CAEbC,MAAM,KAKD,gBAAgB,CAEvB,OAASC,YAAY,KAAQ,0BAA0B,CACvD,OAASC,UAAU,CAAEC,OAAO,CAAUC,SAAS,CAAaC,GAAG,CAAEC,KAAK,CAAEC,KAAK,KAAQ,oBAAoB,CACzG,OAASC,OAAO,KAAQ,eAAe,CACvC,OAASC,EAAE,KAAQ,oBAAoB,CACvC,MAAO,uBAAuB,CAC9B,MAAO,iBAAiB,CACxB,MAAO,gBAAgB,CAEvB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAQA,KAAM,CAAAC,eAAyB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGjC,QAAQ,CAAU,EAAE,CAAC,CAC/C,KAAM,CAACkC,aAAa,CAAEC,gBAAgB,CAAC,CAAGnC,QAAQ,CAAU,EAAE,CAAC,CAC/D,KAAM,CAACoC,OAAO,CAAEC,UAAU,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACsC,KAAK,CAAEC,QAAQ,CAAC,CAAGvC,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACwC,QAAQ,CAAEC,WAAW,CAAC,CAAGzC,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAC0C,YAAY,CAAEC,eAAe,CAAC,CAAG3C,QAAQ,CAAyB,CAAC,CAAC,CAAC,CAC5E,KAAM,CAAC4C,QAAQ,CAAEC,WAAW,CAAC,CAAG7C,QAAQ,CAAwB,IAAI,CAAC,CACrE,KAAM,CAAC8C,aAAa,CAAEC,gBAAgB,CAAC,CAAG/C,QAAQ,CAAW,EAAE,CAAC,CAChE,KAAM,CAACgD,WAAW,CAAEC,cAAc,CAAC,CAAGjD,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACkD,WAAW,CAAEC,cAAc,CAAC,CAAGnD,QAAQ,CAAgC,SAAS,CAAC,CACxF,KAAM,CAACoD,cAAc,CAAEC,iBAAiB,CAAC,CAAGrD,QAAQ,CAAuC,UAAU,CAAC,CAEtG;AACA,KAAM,CAACsD,cAAc,CAAEC,iBAAiB,CAAC,CAAGvD,QAAQ,CAAS,EAAE,CAAC,CAEhE,KAAM,CAAAwD,YAAY,CAAGxC,YAAY,CAACyC,WAAW,CAAC,CAAC,CAE/CxD,SAAS,CAAC,IAAM,CACdyD,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN;AACAzD,SAAS,CAAC,IAAM,CACdkC,gBAAgB,CAACH,KAAK,CAAC,CACzB,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX;AACA/B,SAAS,CAAC,IAAM,CACd,GAAI,CAAC+C,WAAW,CAACW,IAAI,CAAC,CAAC,CAAE,CACvBxB,gBAAgB,CAACH,KAAK,CAAC,CACvB,OACF,CAEA,KAAM,CAAA4B,UAAU,CAAGZ,WAAW,CAACa,WAAW,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,CACnD,KAAM,CAAAG,OAAO,CAAG9B,KAAK,CAAC+B,MAAM,CAACC,IAAI,EAAI,CACnC,MACE,CAACA,IAAI,CAACC,GAAG,EAAI,EAAE,EAAEJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,UAAU,CAAC,EACnD,CAACI,IAAI,CAACG,WAAW,EAAI,EAAE,EAAEN,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,UAAU,CAAC,EAC3D,CAACI,IAAI,CAACI,IAAI,EAAI,EAAE,EAAEP,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,UAAU,CAAC,CAExD,CAAC,CAAC,CAEFzB,gBAAgB,CAAC2B,OAAO,CAAC,CAC3B,CAAC,CAAE,CAACd,WAAW,CAAEhB,KAAK,CAAC,CAAC,CAExB;AACA/B,SAAS,CAAC,IAAM,CACdoE,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAX,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACFrB,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAiC,SAAS,CAAG,KAAM,CAAAd,YAAY,CAACe,QAAQ,CAAC,CAAC,CAC/CtC,QAAQ,CAACqC,SAAS,CAAC,CACnBjC,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOmC,GAAG,CAAE,CACZjC,QAAQ,CAAC,qCAAqC,CAAC,CAC/CF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAgC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF;AACA,KAAM,CAAAI,eAAe,CAAGxD,UAAU,CAACO,EAAE,CAAE,OAAO,CAAC,CAC/C,KAAM,CAAAkD,aAAa,CAAG,KAAM,CAAAxD,OAAO,CAACuD,eAAe,CAAC,CAEpD,KAAM,CAAAE,SAAS,CAAGD,aAAa,CAACE,IAAI,CACjCb,MAAM,CAAC3C,GAAG,EAAIA,GAAG,CAACyD,IAAI,CAAC,CAAC,CAACC,MAAM,GAAK,SAAS,CAAE;AAAA,CAC/CC,GAAG,CAAC3D,GAAG,GAAK,CACX4D,EAAE,CAAE5D,GAAG,CAAC4D,EAAE,CACVf,GAAG,CAAE7C,GAAG,CAACyD,IAAI,CAAC,CAAC,CAACZ,GAAG,EAAI,UAAU,CACjCgB,KAAK,CAAE7D,GAAG,CAACyD,IAAI,CAAC,CAAC,CAACI,KAAK,EAAI,EAAE,CAC7BC,IAAI,CAAE9D,GAAG,CAACyD,IAAI,CAAC,CAAC,CAACK,IAAI,EAAI,EAC3B,CAAC,CAAC,CAAC,CAEL3B,iBAAiB,CAACoB,SAAS,CAAC,CAC5BQ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAET,SAAS,CAACU,MAAM,CAAC,CACxD,CAAE,MAAO/C,KAAK,CAAE,CACd6C,OAAO,CAAC7C,KAAK,CAAC,6CAA6C,CAAEA,KAAK,CAAC,CACnEC,QAAQ,CAAC,4CAA4C,CAAC,CACxD,CACF,CAAC,CAED,KAAM,CAAA+C,UAAU,CAAGA,CAACN,EAAU,CAAEO,KAAa,CAAEC,KAAU,GAAK,CAC5D;AACA,GAAIR,EAAE,GAAK,gBAAgB,CAAE,CAC3BS,oBAAoB,CAACF,KAAK,CAAEC,KAAK,CAAC,CAClC,OACF,CAEA;AACAvD,QAAQ,CAACyD,IAAI,EACXA,IAAI,CAACX,GAAG,CAACf,IAAI,EACXA,IAAI,CAACgB,EAAE,GAAKA,EAAE,CACV,CAAE,GAAGhB,IAAI,CAAE,CAACuB,KAAK,EAAGC,KAAM,CAAC,CAC3BxB,IACN,CACF,CAAC,CACH,CAAC,CAED,KAAM,CAAAyB,oBAAoB,CAAGA,CAACF,KAAa,CAAEC,KAAU,GAAK,CAC1D3C,WAAW,CAAC6C,IAAI,EAAI,CAClB,KAAM,CAAAC,OAAO,CAAG,CAAE,IAAID,IAAI,EAAI,CAAC,CAAC,CAAE,CAAC,CAEnC,GAAIH,KAAK,CAACK,UAAU,CAAC,aAAa,CAAC,CAAE,CACnC,KAAM,CAAAC,OAAO,CAAGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACnCH,OAAO,CAACI,UAAU,CAAG,CACnB,IAAIJ,OAAO,CAACI,UAAU,EAAI,CACxBC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,KAAK,CACZC,QAAQ,CAAE,KAAK,CACfC,SAAS,CAAE,KAAK,CAChBrB,GAAG,CAAE,KAAK,CACVsB,cAAc,CAAE,KAAK,CACrBC,UAAU,CAAE,KACd,CAAC,CAAC,CACF,CAACT,OAAO,EAAGL,KACb,CAAC,CACH,CAAC,IAAM,CACL;AACA,KAAM,CAAAe,SAAS,CAAG,CAAC,KAAK,CAAE,aAAa,CAAE,MAAM,CAAE,QAAQ,CAAE,gBAAgB,CAAU,CACrF,KAAM,CAAAC,UAAU,CAAGjB,KAAiC,CAEpD,GAAIgB,SAAS,CAACrC,QAAQ,CAACsC,UAAU,CAAC,CAAE,CACjCb,OAAO,CAASa,UAAU,CAAC,CAAGhB,KAAK,CACtC,CACF,CAEA,MAAO,CAAAG,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAc,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACFpE,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd;AACA,KAAM,CAAAmE,cAAc,CAAG1E,KAAK,CAAC+C,GAAG,CAACf,IAAI,EAAIR,YAAY,CAACmD,WAAW,CAAC3C,IAAI,CAACgB,EAAE,CAAEhB,IAAI,CAAC,CAAC,CAEjF;AACA,GAAIpB,QAAQ,EAAIA,QAAQ,CAACqB,GAAG,CAAE,CAC5B;AACA,GAAI,CAACrB,QAAQ,CAACqB,GAAG,CAAE,CACjB1B,QAAQ,CAAC,oCAAoC,CAAC,CAC9CF,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA;AACA,KAAM,CAAAuE,aAAsE,CAAG,CAC7E3C,GAAG,CAAErB,QAAQ,CAACqB,GAAG,CACjBE,WAAW,CAAEvB,QAAQ,CAACuB,WAAW,EAAI,EAAE,CACvCC,IAAI,CAAExB,QAAQ,CAACwB,IAAI,EAAI,EAAE,CACzByC,MAAM,CAAEjE,QAAQ,CAACiE,MAAM,GAAKC,SAAS,CAAGlE,QAAQ,CAACiE,MAAM,CAAG,IAAI,CAC9Dd,UAAU,CAAEnD,QAAQ,CAACmD,UAAU,EAAI,CACjCC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,KAAK,CACZC,QAAQ,CAAE,KAAK,CACfC,SAAS,CAAE,KAAK,CAChBrB,GAAG,CAAE,KAAK,CACVsB,cAAc,CAAE,KAAK,CACrBC,UAAU,CAAE,KACd,CAAC,CACDS,cAAc,CAAEnE,QAAQ,CAACmE,cAAc,EAAI,EAC7C,CAAC,CAED,KAAM,CAAAvD,YAAY,CAACwD,QAAQ,CAACJ,aAAa,CAAC,CAC5C,CAEA;AACA,KAAM,CAAAK,OAAO,CAACC,GAAG,CAACR,cAAc,CAAC,CAEjC;AACAjE,WAAW,CAAC,KAAK,CAAC,CAClBE,eAAe,CAAC,CAAC,CAAC,CAAC,CACnBE,WAAW,CAAC,IAAI,CAAC,CACjBE,gBAAgB,CAAC,EAAE,CAAC,CAEpB;AACA,KAAM,CAAAW,UAAU,CAAC,CAAC,CACpB,CAAE,MAAOc,GAAG,CAAE,CACZjC,QAAQ,CAAC,gDAAgD,CAAC,CAC5D,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAA8E,gBAAgB,CAAGA,CAAA,GAAM,CAC7B1E,WAAW,CAAC,KAAK,CAAC,CAClBE,eAAe,CAAC,CAAC,CAAC,CAAC,CACnBE,WAAW,CAAC,IAAI,CAAC,CACjBE,gBAAgB,CAAC,EAAE,CAAC,CACtB,CAAC,CAED,KAAM,CAAAqE,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CAACC,MAAM,CAACC,OAAO,CAAC,sCAAsCxE,aAAa,CAACuC,MAAM,UAAU,CAAC,CAAE,CACzF,OACF,CAEA,GAAI,CACFhD,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAgF,cAAc,CAAGzE,aAAa,CAACiC,GAAG,CAACC,EAAE,EAAIxB,YAAY,CAACgE,WAAW,CAACxC,EAAE,CAAC,CAAC,CAC5E,KAAM,CAAAiC,OAAO,CAACC,GAAG,CAACK,cAAc,CAAC,CAEjC9E,WAAW,CAAC,KAAK,CAAC,CAClBM,gBAAgB,CAAC,EAAE,CAAC,CAEpB,KAAM,CAAAW,UAAU,CAAC,CAAC,CACpB,CAAE,MAAOc,GAAG,CAAE,CACZjC,QAAQ,CAAC,yCAAyC,CAAC,CACrD,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAoF,iBAAiB,CAAIzC,EAAU,EAAK,CACxC;AACA,GAAIA,EAAE,GAAK,gBAAgB,CAAE,CAC3B,OACF,CAEAjC,gBAAgB,CAAC2C,IAAI,EACnBA,IAAI,CAACxB,QAAQ,CAACc,EAAE,CAAC,CACbU,IAAI,CAAC3B,MAAM,CAAC2D,OAAO,EAAIA,OAAO,GAAK1C,EAAE,CAAC,CACtC,CAAC,GAAGU,IAAI,CAAEV,EAAE,CAClB,CAAC,CACH,CAAC,CAED,KAAM,CAAA2C,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI7E,aAAa,CAACuC,MAAM,GAAKnD,aAAa,CAACmD,MAAM,CAAE,CACjDtC,gBAAgB,CAAC,EAAE,CAAC,CACtB,CAAC,IAAM,CACLA,gBAAgB,CAACb,aAAa,CAAC6C,GAAG,CAACf,IAAI,EAAIA,IAAI,CAACgB,EAAE,CAAC,CAAC,CACtD,CACF,CAAC,CAED,KAAM,CAAA4C,aAAa,CAAG,CAAC,GAAG1F,aAAa,CAAC,CAExC;AACA,GAAIM,QAAQ,EAAII,QAAQ,CAAE,CACxB;AACA,KAAM,CAAAiF,YAAmB,CAAG,CAC1B7C,EAAE,CAAE,gBAAgB,CAAG;AACvBf,GAAG,CAAErB,QAAQ,CAACqB,GAAG,EAAI,EAAE,CACvBE,WAAW,CAAEvB,QAAQ,CAACuB,WAAW,EAAI,EAAE,CACvCC,IAAI,CAAExB,QAAQ,CAACwB,IAAI,EAAI,EAAE,CACzByC,MAAM,CAAEjE,QAAQ,CAACiE,MAAM,GAAKC,SAAS,CAAGlE,QAAQ,CAACiE,MAAM,CAAG,IAAI,CAC9Dd,UAAU,CAAEnD,QAAQ,CAACmD,UAAU,EAAI,CACjCC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,KAAK,CACZC,QAAQ,CAAE,KAAK,CACfC,SAAS,CAAE,KAAK,CAChBrB,GAAG,CAAE,KAAK,CACVsB,cAAc,CAAE,KAAK,CACrBC,UAAU,CAAE,KACd,CAAC,CACDS,cAAc,CAAEnE,QAAQ,CAACmE,cAAc,EAAI,EAAE,CAC7Ce,YAAY,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACtCC,gBAAgB,CAAE,GAAI,CAAAF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAC3C,CAAC,CAED;AACA;AACCH,YAAY,CAASK,YAAY,CAAG,EAAE,CAEvC;AACAN,aAAa,CAACO,OAAO,CAACN,YAAY,CAAC,CACrC,CAEA,KAAM,CAAAO,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF/F,UAAU,CAAC,IAAI,CAAC,CAChB,OAAQe,cAAc,EACpB,IAAK,UAAU,CACb,KAAM,CAAA6D,OAAO,CAACC,GAAG,CACfpE,aAAa,CAACiC,GAAG,CAACC,EAAE,EAAIxB,YAAY,CAACmD,WAAW,CAAC3B,EAAE,CAAE,CAAE6B,MAAM,CAAE,IAAK,CAAC,CAAC,CACxE,CAAC,CACD,MACF,IAAK,YAAY,CACf,KAAM,CAAAI,OAAO,CAACC,GAAG,CACfpE,aAAa,CAACiC,GAAG,CAACC,EAAE,EAAIxB,YAAY,CAACmD,WAAW,CAAC3B,EAAE,CAAE,CAAE6B,MAAM,CAAE,KAAM,CAAC,CAAC,CACzE,CAAC,CACD,MACF,IAAK,QAAQ,CACX,KAAM,CAAAI,OAAO,CAACC,GAAG,CACfpE,aAAa,CAACiC,GAAG,CAACC,EAAE,EAAIxB,YAAY,CAACgE,WAAW,CAACxC,EAAE,CAAC,CACtD,CAAC,CACD,MACJ,CAEA,KAAM,CAAAtB,UAAU,CAAC,CAAC,CAClBX,gBAAgB,CAAC,EAAE,CAAC,CACpBI,cAAc,CAAC,SAAS,CAAC,CAC3B,CAAE,MAAOqB,GAAG,CAAE,CACZjC,QAAQ,CAAC,kCAAkC,CAAC,CAC9C,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAgG,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF,KAAM,CAAAC,UAAU,CAAG,KAAM,CAAA9E,YAAY,CAAC+E,WAAW,CAACzF,aAAa,CAAC,CAChE,KAAM,CAAA0F,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CAAE,CAAEM,IAAI,CAAE,kBAAmB,CAAC,CAAC,CAC1F,KAAM,CAAAC,GAAG,CAAGxB,MAAM,CAACyB,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC,CAC5C,KAAM,CAAAQ,CAAC,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACrCF,CAAC,CAACG,IAAI,CAAGN,GAAG,CACZG,CAAC,CAACI,QAAQ,CAAG,mBAAmB,CAChCJ,CAAC,CAACK,KAAK,CAAC,CAAC,CACThC,MAAM,CAACyB,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC,CACjC,CAAE,MAAOrE,GAAG,CAAE,CACZjC,QAAQ,CAAC,yCAAyC,CAAC,CACrD,CACF,CAAC,CAED,KAAM,CAAAgH,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAI,CAAC/G,QAAQ,CAAE,MAAO,KAAI,CAE1B,mBACEZ,KAAA,QAAK4H,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B/H,IAAA,OAAA+H,QAAA,CAAI,0BAAwB,CAAI,CAAC,CAChCvG,WAAW,GAAK,SAAS,eACxBtB,KAAA,QAAK4H,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B/H,IAAA,WACE8H,SAAS,CAAC,mBAAmB,CAC7BE,OAAO,CAAEA,CAAA,GAAMvG,cAAc,CAAC,MAAM,CAAE,CACtCwG,QAAQ,CAAE7G,aAAa,CAACuC,MAAM,GAAK,CAAE,CAAAoE,QAAA,CACtC,kBAED,CAAQ,CAAC,cACT/H,IAAA,WACE8H,SAAS,CAAC,mBAAmB,CAC7BE,OAAO,CAAEA,CAAA,GAAMvG,cAAc,CAAC,QAAQ,CAAE,CACxCwG,QAAQ,CAAE7G,aAAa,CAACuC,MAAM,GAAK,CAAE,CAAAoE,QAAA,CACtC,UAED,CAAQ,CAAC,EACN,CACN,CAEAvG,WAAW,GAAK,MAAM,eACrBtB,KAAA,QAAA6H,QAAA,eACE7H,KAAA,WACE4D,KAAK,CAAEpC,cAAe,CACtBwG,QAAQ,CAAGC,CAAC,EAAKxG,iBAAiB,CAACwG,CAAC,CAACC,MAAM,CAACtE,KAAY,CAAE,CAC1DuE,KAAK,CAAC,qCAAkC,CAAAN,QAAA,eAExC/H,IAAA,WAAQ8D,KAAK,CAAC,UAAU,CAAAiE,QAAA,CAAC,SAAO,CAAQ,CAAC,cACzC/H,IAAA,WAAQ8D,KAAK,CAAC,YAAY,CAAAiE,QAAA,CAAC,eAAU,CAAQ,CAAC,cAC9C/H,IAAA,WAAQ8D,KAAK,CAAC,QAAQ,CAAAiE,QAAA,CAAC,WAAS,CAAQ,CAAC,EACnC,CAAC,cACT/H,IAAA,WACE8H,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEtB,gBAAiB,CAAAqB,QAAA,CAC3B,WAED,CAAQ,CAAC,cACT/H,IAAA,WACE8H,SAAS,CAAC,mBAAmB,CAC7BE,OAAO,CAAEA,CAAA,GAAMvG,cAAc,CAAC,SAAS,CAAE,CAAAsG,QAAA,CAC1C,SAED,CAAQ,CAAC,EACN,CACN,CAEAvG,WAAW,GAAK,QAAQ,eACvBtB,KAAA,QAAA6H,QAAA,eACE/H,IAAA,WACE8H,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAErB,iBAAkB,CAAAoB,QAAA,CAC5B,yBAED,CAAQ,CAAC,cACT/H,IAAA,WACE8H,SAAS,CAAC,mBAAmB,CAC7BE,OAAO,CAAEA,CAAA,GAAMvG,cAAc,CAAC,SAAS,CAAE,CAAAsG,QAAA,CAC1C,SAED,CAAQ,CAAC,EACN,CACN,EACE,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAO,qBAAqB,CAAG,KAAO,CAAAtC,OAAe,EAAK,CACvD,GAAI,CACF;AACA,KAAM,CAAAuC,IAAI,CAAG1I,OAAO,CAAC,CAAC,CACtB,KAAM,CAAA2I,WAAW,CAAGD,IAAI,CAACC,WAAW,CAEpC,GAAI,CAACA,WAAW,EAAI,CAACA,WAAW,CAACC,GAAG,CAAE,CACpCC,KAAK,CAAC,sDAAsD,CAAC,CAC7D,OACF,CAEA;AACA,KAAM,CAAAC,QAAQ,CAAGpJ,UAAU,CAACO,EAAE,CAAE,OAAO,CAAC,CACxC,KAAM,CAAA8I,SAAS,CAAGjJ,KAAK,CAACgJ,QAAQ,CAAE/I,KAAK,CAAC,KAAK,CAAE,IAAI,CAAE4I,WAAW,CAACC,GAAG,CAAC,CAAC,CACtE,KAAM,CAAAI,aAAa,CAAG,KAAM,CAAArJ,OAAO,CAACoJ,SAAS,CAAC,CAE9C,GAAIC,aAAa,CAACC,KAAK,CAAE,CACvBJ,KAAK,CAAC,8CAA8C,CAAC,CACrD,OACF,CAEA,KAAM,CAAAK,OAAO,CAAGF,aAAa,CAAC3F,IAAI,CAAC,CAAC,CAAC,CACrC,KAAM,CAAAzD,SAAS,CAACC,GAAG,CAACI,EAAE,CAAE,OAAO,CAAEiJ,OAAO,CAACzF,EAAE,CAAC,CAAE,CAC5C0F,cAAc,CAAEhD,OAAO,CACvBiD,WAAW,CAAE,GAAI,CAAA5C,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACtC,CAAC,CAAC,CAEF;AACAoC,KAAK,CAAC,kDAAkD,CAAC,CAEzD;AACAQ,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAEnD,OAAO,CAAC,CACjD,CAAE,MAAOpF,KAAK,CAAE,CACd;AACA6C,OAAO,CAAC7C,KAAK,CAAC,sDAAsD,CAAEA,KAAK,CAAC,CAC5EC,QAAQ,CAAC,2CAA2C,CAAC,CACrD6H,KAAK,CAAC,2CAA2C,CAAC,CACpD,CACF,CAAC,CAED;AACA,KAAM,CAAAU,eAAuC,CAAG,CAC9C9E,SAAS,CAAE,iBAAiB,CAC5BC,QAAQ,CAAE,UAAU,CACpBC,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,UAAU,CACpBC,SAAS,CAAE,WAAW,CACtBrB,GAAG,CAAE,OAAO,CACZsB,cAAc,CAAE,sBAAsB,CACtCC,UAAU,CAAE,gBACd,CAAC,CAED;AACA,KAAM,CAAAyE,OAAO,CAAG,CACd,CACEhB,KAAK,CAAE,WAAW,CAClBiB,SAAS,CAAE,IAAI,CACfC,KAAK,CAAE,EAAE,CACTC,MAAM,CAAGlG,EAAU,eACjBtD,IAAA,CAACvB,QAAQ,EACPgL,OAAO,CAAErI,aAAa,CAACoB,QAAQ,CAACc,EAAE,CAAE,CACpC4E,QAAQ,CAAEA,CAAA,GAAMnC,iBAAiB,CAACzC,EAAE,CAAE,CACtC,aAAY,sBAAsBA,EAAE,EAAG,CACxC,CAEL,CAAC,CACD,CACE+E,KAAK,CAAE,KAAK,CACZiB,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAEA,CAACjH,GAAW,CAAEmH,MAAa,gBACjC1J,IAAA,CAACpB,KAAK,EACJkF,KAAK,CAAEvB,GAAI,CACX2F,QAAQ,CAAGC,CAAC,EAAKvE,UAAU,CAAC8F,MAAM,CAACpG,EAAE,CAAE,KAAK,CAAE6E,CAAC,CAACC,MAAM,CAACtE,KAAK,CAAE,CAC9D,aAAW,iBAAiB,CAC7B,CAEL,CAAC,CACD,CACEuE,KAAK,CAAE,aAAa,CACpBiB,SAAS,CAAE,aAAa,CACxBC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAEA,CAAC/G,WAAmB,CAAEiH,MAAa,gBACzC1J,IAAA,CAACpB,KAAK,EACJkF,KAAK,CAAErB,WAAY,CACnByF,QAAQ,CAAGC,CAAC,EAAKvE,UAAU,CAAC8F,MAAM,CAACpG,EAAE,CAAE,aAAa,CAAE6E,CAAC,CAACC,MAAM,CAACtE,KAAK,CAAE,CACtE,aAAW,yBAAyB,CACrC,CAEL,CAAC,CACD,CACEuE,KAAK,CAAE,MAAM,CACbiB,SAAS,CAAE,MAAM,CACjBC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAEA,CAAC9G,IAAY,CAAEgH,MAAa,gBAClC1J,IAAA,CAACpB,KAAK,EACJkF,KAAK,CAAEpB,IAAK,CACZwF,QAAQ,CAAGC,CAAC,EAAKvE,UAAU,CAAC8F,MAAM,CAACpG,EAAE,CAAE,MAAM,CAAE6E,CAAC,CAACC,MAAM,CAACtE,KAAK,CAAE,CAC/D,aAAW,kBAAkB,CAC9B,CAEL,CAAC,CACD,CACEuE,KAAK,CAAE,QAAQ,CACfiB,SAAS,CAAE,QAAQ,CACnBC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAEA,CAACrE,MAAe,CAAEuE,MAAa,gBACrC1J,IAAA,CAACrB,MAAM,EACL8K,OAAO,CAAEtE,MAAO,CAChB+C,QAAQ,CAAGuB,OAAO,EAAK7F,UAAU,CAAC8F,MAAM,CAACpG,EAAE,CAAE,QAAQ,CAAEmG,OAAO,CAAE,CAChE,aAAW,oBAAoB,CAChC,CAEL,CAAC,CACD,CACEpB,KAAK,CAAE,OAAO,CACdiB,SAAS,CAAE,YAAY,CACvBC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,QAAAA,CAAA,KAAC,CAAAnF,UAAmC,CAAAsF,SAAA,CAAAhG,MAAA,IAAAgG,SAAA,MAAAvE,SAAA,CAAAuE,SAAA,IAAG,CAAC,CAAC,IAAE,CAAAD,MAAa,CAAAC,SAAA,CAAAhG,MAAA,GAAAgG,SAAA,IAAAvE,SAAA,oBAC9DpF,IAAA,QAAK8H,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CACnCjH,QAAQ,cACPd,IAAA,QAAK4J,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAM,CAAEC,GAAG,CAAE,KAAM,CAAE,CAAAhC,QAAA,CAC3DiC,MAAM,CAACC,OAAO,CAAC5F,UAAU,CAAC,CAAChB,GAAG,CAAC6G,IAAA,MAAC,CAACC,IAAI,CAAEC,SAAS,CAAC,CAAAF,IAAA,oBAChDlK,IAAA,CAACvB,QAAQ,EAEPgL,OAAO,CAAE,CAAC,CAACW,SAAU,CACrBlC,QAAQ,CAAGC,CAAC,EAAKvE,UAAU,CACzB8F,MAAM,CAACpG,EAAE,CACT,cAAc6G,IAAI,EAAE,CACpBhC,CAAC,CAACC,MAAM,CAACqB,OACX,CAAE,CACFG,KAAK,CAAE,CAAES,WAAW,CAAE,KAAK,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAAvC,QAAA,cAEnD/H,IAAA,SAAM4J,KAAK,CAAE,CAAEW,QAAQ,CAAE,QAAS,CAAE,CAAAxC,QAAA,CAAEqB,eAAe,CAACe,IAAI,CAAC,EAAIA,IAAI,CAAO,CAAC,EATtEA,IAUG,CAAC,EACZ,CAAC,CACC,CAAC,cAENjK,KAAA,QAAK0J,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAM,CAAEC,GAAG,CAAE,KAAM,CAAE,CAAAhC,QAAA,EAC3DiC,MAAM,CAACC,OAAO,CAAC5F,UAAU,CAAC,CAAChC,MAAM,CAACmI,KAAA,MAAC,CAACC,CAAC,CAAEL,SAAS,CAAC,CAAAI,KAAA,OAAK,CAAAJ,SAAS,GAAC,CAAC/G,GAAG,CAACqH,KAAA,MAAC,CAACP,IAAI,CAAC,CAAAO,KAAA,oBAC3E1K,IAAA,CAACnB,GAAG,EAAC8L,KAAK,CAAC,MAAM,CAAYf,KAAK,CAAE,CAAEgB,MAAM,CAAE,KAAM,CAAE,CAAA7C,QAAA,CACnDqB,eAAe,CAACe,IAAI,CAAC,EAAIA,IAAI,EADTA,IAElB,CAAC,EACP,CAAC,CACD,CAACH,MAAM,CAACa,MAAM,CAACxG,UAAU,EAAI,CAAC,CAAC,CAAC,CAACyG,IAAI,CAACC,OAAO,CAAC,eAC7C/K,IAAA,SAAM4J,KAAK,CAAE,CAAEe,KAAK,CAAE,MAAM,CAAEK,SAAS,CAAE,QAAS,CAAE,CAAAjD,QAAA,CAAC,gBAAW,CAAM,CACvE,EACE,CACN,CACE,CAAC,EAEV,CAAC,CACD,CACEM,KAAK,CAAE,cAAc,CACrBiB,SAAS,CAAE,cAAc,CACzBC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,QAAAA,CAAA,KAAC,CAAAhD,YAAsB,CAAAmD,SAAA,CAAAhG,MAAA,IAAAgG,SAAA,MAAAvE,SAAA,CAAAuE,SAAA,IAAG,EAAE,IAAE,CAAAD,MAAa,CAAAC,SAAA,CAAAhG,MAAA,GAAAgG,SAAA,IAAAvE,SAAA,oBACjDpF,IAAA,QAAK8H,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC/BjH,QAAQ,cACPd,IAAA,CAACtB,MAAM,EACLuM,IAAI,CAAC,UAAU,CACfrB,KAAK,CAAE,CAAEL,KAAK,CAAE,MAAO,CAAE,CACzB2B,WAAW,CAAC,2BAA2B,CACvCpH,KAAK,CAAE0C,YAAY,EAAI,EAAG,CAC1B0B,QAAQ,CAAGiD,QAAQ,EAAKC,qBAAqB,CAAC1B,MAAM,CAACpG,EAAE,CAAE6H,QAAQ,CAAE,CACnEE,gBAAgB,CAAC,UAAU,CAC3BC,YAAY,CAAEA,CAACC,KAAK,CAAEC,MAAM,QAAAC,aAAA,OAC1B,CAAC,CAAAD,MAAM,SAANA,MAAM,kBAAAC,aAAA,CAAND,MAAM,CAAEE,KAAK,UAAAD,aAAA,iBAAbA,aAAA,CAAeE,QAAQ,CAAC,CAAC,CAACxJ,WAAW,CAAC,CAAC,GAAI,EAAE,EAAEK,QAAQ,CAAC+I,KAAK,CAACpJ,WAAW,CAAC,CAAC,CAAC,EAC9E,CACDyJ,OAAO,CAAEhK,cAAc,CAACyB,GAAG,CAACwI,IAAI,GAAK,CACnC/H,KAAK,CAAE+H,IAAI,CAACvI,EAAE,CACdoI,KAAK,CAAEG,IAAI,CAACtJ,GAAG,CAAG,GAAGsJ,IAAI,CAACtJ,GAAG,KAAKsJ,IAAI,CAACtI,KAAK,GAAG,CAAGsI,IAAI,CAACtI,KACzD,CAAC,CAAC,CAAE,CACL,CAAC,cAEFvD,IAAA,QAAA+H,QAAA,CACGvB,YAAY,EAAIA,YAAY,CAAC7C,MAAM,CAAG,CAAC,cACtCzD,KAAA,QAAK0J,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEiC,aAAa,CAAE,QAAQ,CAAE/B,GAAG,CAAE,KAAM,CAAE,CAAAhC,QAAA,EAClEvB,YAAY,CAACuF,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC1I,GAAG,CAAC2I,MAAM,EAAI,CACtC,KAAM,CAAAH,IAAI,CAAGjK,cAAc,CAACqK,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5I,EAAE,GAAK0I,MAAM,CAAC,CACtD,mBACEhM,IAAA,CAACnB,GAAG,EACFsN,IAAI,cAAEnM,IAAA,CAACX,MAAM,EAACuK,KAAK,CAAE,CAAES,WAAW,CAAE,KAAK,CAAE+B,aAAa,CAAE,QAAS,CAAE,CAAE,CAAE,CACzEzB,KAAK,CAAC,OAAO,CAAA5C,QAAA,CAGZ8D,IAAI,CAAGA,IAAI,CAACtJ,GAAG,EAAIsJ,IAAI,CAACtI,KAAK,CAAG,qBAAqB,EAFjDyI,MAGF,CAAC,CAEV,CAAC,CAAC,CACDxF,YAAY,CAAC7C,MAAM,CAAG,CAAC,eACtB3D,IAAA,CAAClB,OAAO,EAACuJ,KAAK,CAAE7B,YAAY,CAACuF,KAAK,CAAC,CAAC,CAAC,CAAC1I,GAAG,CAAC2I,MAAM,EAAI,CAClD,KAAM,CAAAH,IAAI,CAAGjK,cAAc,CAACqK,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5I,EAAE,GAAK0I,MAAM,CAAC,CACtD,MAAO,CAAAH,IAAI,CAAGA,IAAI,CAACtJ,GAAG,EAAIsJ,IAAI,CAACtI,KAAK,CAAG,qBAAqB,CAC9D,CAAC,CAAC,CAAC8I,IAAI,CAAC,IAAI,CAAE,CAAAtE,QAAA,cACZ/H,IAAA,CAACnB,GAAG,EAAC8L,KAAK,CAAC,MAAM,CAAA5C,QAAA,CAAE,IAAIvB,YAAY,CAAC7C,MAAM,CAAG,CAAC,SAAS,CAAM,CAAC,CACvD,CACV,EACE,CAAC,cAEN3D,IAAA,SAAM4J,KAAK,CAAE,CAAEe,KAAK,CAAE,MAAM,CAAEK,SAAS,CAAE,QAAS,CAAE,CAAAjD,QAAA,CAAC,mBAAiB,CAAM,CAC7E,CACE,CACN,CACE,CAAC,EAEV,CAAC,CACF,CAED;AACA,KAAM,CAAAqD,qBAAqB,CAAG,KAAAA,CAAOpF,OAAe,CAAEsG,OAAiB,GAAK,CAC1E,GAAI,CACF7I,OAAO,CAACC,GAAG,CAAC,2CAA2CsC,OAAO,GAAG,CAAEsG,OAAO,CAAC,CAE3E;AACA,GAAItG,OAAO,GAAK,gBAAgB,CAAE,CAChC7E,WAAW,CAAC6C,IAAI,GAAK,CACnB,GAAGA,IAAK,CACRwC,YAAY,CAAE8F,OAChB,CAAC,CAAC,CAAC,CACH,OACF,CAEA;AACA/L,QAAQ,CAACyD,IAAI,EACXA,IAAI,CAACX,GAAG,CAACf,IAAI,EACXA,IAAI,CAACgB,EAAE,GAAK0C,OAAO,CACf,CAAE,GAAG1D,IAAI,CAAEkE,YAAY,CAAE8F,OAAQ,CAAC,CAClChK,IACN,CACF,CAAC,CAED;AACA;AACF,CAAE,MAAO1B,KAAK,CAAE,CACd6C,OAAO,CAAC7C,KAAK,CAAC,iDAAiD,CAAEA,KAAK,CAAC,CACvEC,QAAQ,CAAC,gDAAgD,CAAC,CAC5D,CACF,CAAC,CAED,GAAIH,OAAO,CAAE,CACX,mBAAOV,IAAA,QAAK8H,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,yBAAuB,CAAK,CAAC,CAC/D,CAEA,mBACE7H,KAAA,QAAK4H,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B7H,KAAA,QAAK4H,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtC/H,IAAA,OAAA+H,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1B/H,IAAA,QAAK8H,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5B,CAACjH,QAAQ,cACRZ,KAAA,CAAAE,SAAA,EAAA2H,QAAA,eACE7H,KAAA,WACE4H,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAMjH,WAAW,CAAC,IAAI,CAAE,CACjC6I,KAAK,CAAE,CACL2C,eAAe,CAAE,SAAS,CAC1B5B,KAAK,CAAE,OAAO,CACd6B,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjB9C,OAAO,CAAE,MAAM,CACf+C,UAAU,CAAE,QAAQ,CACpB7C,GAAG,CAAE,KAAK,CACV8C,UAAU,CAAE,GAAG,CACfC,UAAU,CAAE,eAAe,CAC3BC,SAAS,CAAE,2BACb,CAAE,CAAAhF,QAAA,eAEF/H,IAAA,CAACjB,MAAM,GAAE,CAAC,YACZ,EAAQ,CAAC,cACTmB,KAAA,WACE4H,SAAS,CAAC,mBAAmB,CAC7BE,OAAO,CAAEA,CAAA,GAAM,CACbjH,WAAW,CAAC,IAAI,CAAC,CACjBI,WAAW,CAAC,CACVoB,GAAG,CAAE,EAAE,CACPE,WAAW,CAAE,EAAE,CACfC,IAAI,CAAE,EAAE,CACRyC,MAAM,CAAE,IAAI,CACZd,UAAU,CAAE,CACVC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,KAAK,CACZC,QAAQ,CAAE,KAAK,CACfC,SAAS,CAAE,KAAK,CAChBrB,GAAG,CAAE,KAAK,CACVsB,cAAc,CAAE,KAAK,CACrBC,UAAU,CAAE,KACd,CAAC,CACDS,cAAc,CAAE,EAClB,CAAC,CAAC,CACJ,CAAE,CACFuE,KAAK,CAAE,CACL2C,eAAe,CAAE,SAAS,CAC1B5B,KAAK,CAAE,OAAO,CACd6B,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjB9C,OAAO,CAAE,MAAM,CACf+C,UAAU,CAAE,QAAQ,CACpB7C,GAAG,CAAE,KAAK,CACV8C,UAAU,CAAE,GAAG,CACfG,UAAU,CAAE,MAAM,CAClBF,UAAU,CAAE,eAAe,CAC3BC,SAAS,CAAE,2BACb,CAAE,CAAAhF,QAAA,eAEF/H,IAAA,CAAChB,MAAM,GAAE,CAAC,WACZ,EAAQ,CAAC,EACT,CAAC,cAEHkB,KAAA,CAAAE,SAAA,EAAA2H,QAAA,eACE7H,KAAA,WACE4H,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEjD,iBAAkB,CAC3B6E,KAAK,CAAE,CACL2C,eAAe,CAAE,SAAS,CAC1B5B,KAAK,CAAE,OAAO,CACd6B,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjB9C,OAAO,CAAE,MAAM,CACf+C,UAAU,CAAE,QAAQ,CACpB7C,GAAG,CAAE,KAAK,CACV8C,UAAU,CAAE,GAAG,CACfC,UAAU,CAAE,eAAe,CAC3BC,SAAS,CAAE,2BACb,CAAE,CAAAhF,QAAA,eAEF/H,IAAA,CAACf,MAAM,GAAE,CAAC,eACZ,EAAQ,CAAC,cACTiB,KAAA,WACE4H,SAAS,CAAC,mBAAmB,CAC7BE,OAAO,CAAEvC,gBAAiB,CAC1BmE,KAAK,CAAE,CACL2C,eAAe,CAAE,SAAS,CAC1B5B,KAAK,CAAE,OAAO,CACd6B,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjB9C,OAAO,CAAE,MAAM,CACf+C,UAAU,CAAE,QAAQ,CACpB7C,GAAG,CAAE,KAAK,CACV8C,UAAU,CAAE,GAAG,CACfG,UAAU,CAAE,MAAM,CAClBF,UAAU,CAAE,eAAe,CAC3BC,SAAS,CAAE,2BACb,CAAE,CAAAhF,QAAA,eAEF/H,IAAA,CAACd,OAAO,GAAE,CAAC,WACb,EAAQ,CAAC,CACRkC,aAAa,CAACuC,MAAM,CAAG,CAAC,eACvBzD,KAAA,WACE4H,SAAS,CAAC,gBAAgB,CAC1BE,OAAO,CAAEtC,oBAAqB,CAC9BkE,KAAK,CAAE,CACL2C,eAAe,CAAE,SAAS,CAC1B5B,KAAK,CAAE,OAAO,CACd6B,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjB9C,OAAO,CAAE,MAAM,CACf+C,UAAU,CAAE,QAAQ,CACpB7C,GAAG,CAAE,KAAK,CACV8C,UAAU,CAAE,GAAG,CACfG,UAAU,CAAE,MAAM,CAClBF,UAAU,CAAE,eAAe,CAC3BC,SAAS,CAAE,2BACb,CAAE,CAAAhF,QAAA,eAEF/H,IAAA,CAACb,OAAO,GAAE,CAAC,eAAY,CAACiC,aAAa,CAACuC,MAAM,CAAC,GAC/C,EAAQ,CACT,EACD,CACH,CACE,CAAC,EACH,CAAC,CAELkE,kBAAkB,CAAC,CAAC,cAErB3H,KAAA,QAAK4H,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvB7H,KAAA,QAAK4H,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB/H,IAAA,UACEkH,IAAI,CAAC,MAAM,CACXgE,WAAW,CAAC,yBAAyB,CACrCpH,KAAK,CAAExC,WAAY,CACnB4G,QAAQ,CAAEC,CAAC,EAAI5G,cAAc,CAAC4G,CAAC,CAACC,MAAM,CAACtE,KAAK,CAAE,CAC9CgE,SAAS,CAAC,cAAc,CACzB,CAAC,CACDxG,WAAW,eACVtB,IAAA,WACE8H,SAAS,CAAC,cAAc,CACxBE,OAAO,CAAEA,CAAA,GAAMzG,cAAc,CAAC,EAAE,CAAE,CAAAwG,QAAA,CACnC,QAED,CAAQ,CACT,EACE,CAAC,cAEN/H,IAAA,QAAK8H,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5B,CAACjH,QAAQ,cACRd,IAAA,CAAAI,SAAA,GAEE,CAAC,cAEHJ,IAAA,CAAAI,SAAA,EAAA2H,QAAA,CACG3G,aAAa,CAACuC,MAAM,CAAG,CAAC,eACvBzD,KAAA,WACE4H,SAAS,CAAC,6BAA6B,CACvCE,OAAO,CAAEtC,oBAAqB,CAC9BkE,KAAK,CAAE,CACL2C,eAAe,CAAE,SAAS,CAC1B5B,KAAK,CAAE,OAAO,CACd6B,OAAO,CAAE,UAAU,CACnBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjB9C,OAAO,CAAE,MAAM,CACf+C,UAAU,CAAE,QAAQ,CACpB7C,GAAG,CAAE,KAAK,CACV8C,UAAU,CAAE,MAAM,CAClBC,UAAU,CAAE,eAAe,CAC3BC,SAAS,CAAE,2BACb,CAAE,CAAAhF,QAAA,eAEF/H,IAAA,CAACb,OAAO,GAAE,CAAC,eAAY,CAACiC,aAAa,CAACuC,MAAM,CAAC,GAC/C,EAAQ,CACT,CACD,CACH,CACE,CAAC,EACH,CAAC,cAENzD,KAAA,QAAK4H,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpC/H,IAAA,QAAK8H,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3B7H,KAAA,MAAA6H,QAAA,EAAIvH,aAAa,CAACmD,MAAM,CAAC,8BAAsB,CAACrC,WAAW,CAAG,uBAAuBA,WAAW,GAAG,CAAG,EAAE,EAAI,CAAC,CAC1G,CAAC,cAENtB,IAAA,CAACxB,KAAK,EACJ6K,OAAO,CAAEA,OAAQ,CACjB4D,UAAU,CAAE/G,aAAc,CAC1BxF,OAAO,CAAEA,OAAQ,CACjBwM,MAAM,CAAE,CAAEC,CAAC,CAAE,IAAK,CAAE,CACpBC,YAAY,CAAE,CACZC,eAAe,CAAEjM,aAAa,CAC9B8G,QAAQ,CAAGoF,IAAI,EAAK,CAClB,KAAM,CAAAC,UAAU,CAAGD,IAAI,CAACjK,GAAG,CAACmK,GAAG,EAAIA,GAAG,CAAC7B,QAAQ,CAAC,CAAC,CAAC,CAClDtK,gBAAgB,CAACkM,UAAU,CAAC,CAC9B,CACF,CAAE,CACFE,UAAU,CAAE,CACVC,QAAQ,CAAE,EAAE,CACZC,eAAe,CAAE,IACnB,CAAE,CACFC,MAAM,CAAC,IAAI,CACXC,YAAY,CAAGnE,MAAM,EAAK,CACxB,MAAO,CAAAA,MAAM,CAACpG,EAAE,GAAK,gBAAgB,CAAG,eAAe,CAAG,EAAE,CAC9D,CAAE,CACH,CAAC,EACC,CAAC,CAELxC,QAAQ,eACPd,IAAA,QAAK8H,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CACnC3G,aAAa,CAACuC,MAAM,GAAK,CAAC,eACzBzD,KAAA,WACE4H,SAAS,CAAC,oBAAoB,CAC9BE,OAAO,CAAEA,CAAA,GAAMM,qBAAqB,CAAClH,aAAa,CAAC,CAAC,CAAC,CAAE,CACvDwI,KAAK,CAAE,CACL2C,eAAe,CAAE,SAAS,CAC1B5B,KAAK,CAAE,OAAO,CACd6B,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjB9C,OAAO,CAAE,MAAM,CACf+C,UAAU,CAAE,QAAQ,CACpB7C,GAAG,CAAE,KAAK,CACV8C,UAAU,CAAE,GAAG,CACfiB,SAAS,CAAE,MAAM,CACjBhB,UAAU,CAAE,eAAe,CAC3BC,SAAS,CAAE,2BACb,CAAE,CAAAhF,QAAA,eAEF/H,IAAA,CAACZ,aAAa,GAAE,CAAC,wCACnB,EAAQ,CACT,CACE,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAiB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}