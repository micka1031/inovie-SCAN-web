{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n// Ant Design 5.x utilise une méthode différente pour les styles\nimport App from './App';\nimport { AuthProvider } from './contexts/AuthContext';\n\n// Gestionnaire d'erreurs global\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleGlobalError = event => {\n  console.error('Erreur globale non gérée:', event.error);\n  // Vous pouvez ajouter ici une logique pour afficher un message d'erreur à l'utilisateur\n  // ou envoyer l'erreur à un service de suivi des erreurs\n};\n\n// Ajouter le gestionnaire d'erreurs\nwindow.addEventListener('error', handleGlobalError);\n\n// Gestionnaire pour les rejets de promesses non gérés\nwindow.addEventListener('unhandledrejection', event => {\n  console.error('Promesse rejetée non gérée:', event.reason);\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","AuthProvider","jsxDEV","_jsxDEV","handleGlobalError","event","console","error","window","addEventListener","reason","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n// Ant Design 5.x utilise une méthode différente pour les styles\nimport App from './App';\nimport { AuthProvider } from './contexts/AuthContext';\n\n// Gestionnaire d'erreurs global\nconst handleGlobalError = (event: ErrorEvent) => {\n  console.error('Erreur globale non gérée:', event.error);\n  // Vous pouvez ajouter ici une logique pour afficher un message d'erreur à l'utilisateur\n  // ou envoyer l'erreur à un service de suivi des erreurs\n};\n\n// Ajouter le gestionnaire d'erreurs\nwindow.addEventListener('error', handleGlobalError);\n\n// Gestionnaire pour les rejets de promesses non gérés\nwindow.addEventListener('unhandledrejection', (event) => {\n  console.error('Promesse rejetée non gérée:', event.reason);\n});\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB;AACA,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,YAAY,QAAQ,wBAAwB;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAIC,KAAiB,IAAK;EAC/CC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,KAAK,CAACE,KAAK,CAAC;EACvD;EACA;AACF,CAAC;;AAED;AACAC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEL,iBAAiB,CAAC;;AAEnD;AACAI,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,EAAGJ,KAAK,IAAK;EACvDC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,KAAK,CAACK,MAAM,CAAC;AAC5D,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAGZ,QAAQ,CAACa,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAEDH,IAAI,CAACI,MAAM,cACTZ,OAAA,CAACL,KAAK,CAACkB,UAAU;EAAAC,QAAA,eACfd,OAAA,CAACF,YAAY;IAAAgB,QAAA,eACXd,OAAA,CAACH,GAAG;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}