{"ast":null,"code":"import React,{useState,useEffect}from'react';import{sendPasswordResetEmail}from'firebase/auth';import{collection,query,where,getDocs}from'firebase/firestore';import{auth,db}from'../config/firebase';import logoInovie from'../assets/logo-inovie.png';// import * as LogoIcons from '../assets/inovie-logo.js';\nimport'./LoginScreen.css';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginScreen=()=>{const[identifier,setIdentifier]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState(null);const[loading,setLoading]=useState(false);const[welcomeMessage,setWelcomeMessage]=useState('');const[infoMessage,setInfoMessage]=useState('');const[isNewUserLogin,setIsNewUserLogin]=useState(false);const[isPasswordReset,setIsPasswordReset]=useState(false);const[showForgotPassword,setShowForgotPassword]=useState(false);const[resetEmail,setResetEmail]=useState('');const[resetEmailSent,setResetEmailSent]=useState(false);const[isSubmitted,setIsSubmitted]=useState(false);const navigate=useNavigate();const{login,currentUser}=useAuth();// Effet pour rediriger automatiquement si l'utilisateur est connect√©\nuseEffect(()=>{if(currentUser&&isSubmitted){console.log(\"Redirection automatique vers / car utilisateur connect√©:\",currentUser);navigate('/');}},[currentUser,isSubmitted,navigate]);useEffect(()=>{// R√©cup√©rer les param√®tres de l'URL\nconst params=new URLSearchParams(window.location.search);const email=params.get('email');const isNewUser=params.get('newUser')==='true';const isReset=params.get('reset')==='true';const nom=params.get('nom');const role=params.get('role');console.log('üîç Param√®tres URL d√©tect√©s:',{email,isNewUser,isReset,nom,role,fullUrl:window.location.href});// Pr√©-remplir l'email s'il est pr√©sent dans l'URL\nif(email){setIdentifier(email);console.log('üìù Email pr√©-rempli:',email);}// Afficher un message appropri√© selon le sc√©nario\nif(isNewUser&&nom){setIsNewUserLogin(true);const welcomeMsg=`Bienvenue ${nom} ! Votre compte a √©t√© cr√©√© avec succ√®s. Veuillez vous connecter avec le mot de passe que vous venez de d√©finir.`;setWelcomeMessage(welcomeMsg);setInfoMessage(\"Si vous n'avez pas encore d√©fini votre mot de passe via l'email, vous pouvez √©galement utiliser le mot de passe temporaire fourni par votre administrateur.\");console.log('‚ú® Message de bienvenue affich√© pour nouvel utilisateur:',welcomeMsg);}else if(isReset){setIsPasswordReset(true);const resetMsg=\"Votre mot de passe a √©t√© r√©initialis√© avec succ√®s !\";setWelcomeMessage(resetMsg);setInfoMessage(\"Vous pouvez maintenant vous connecter avec votre nouveau mot de passe.\");console.log('üîÑ Message de r√©initialisation affich√©:',resetMsg);}else{console.log('‚ÑπÔ∏è Aucun message sp√©cial √† afficher');}},[]);// Fonction pour trouver l'email d'un utilisateur √† partir de son identifiant\nconst findEmailByIdentifier=async userIdentifier=>{try{// Si l'identifiant contient d√©j√† un @, c'est probablement un email\nif(userIdentifier.includes('@')){console.log(`üìß Identifiant contient d√©j√† un @ - utilisation directe: ${userIdentifier}`);return userIdentifier;}console.log(`üîç Recherche de l'utilisateur avec l'identifiant exact: \"${userIdentifier}\"`);// R√©cup√©rer tous les utilisateurs pour d√©boguer\nconst allUsersRef=collection(db,'users');const allUsersSnapshot=await getDocs(allUsersRef);console.log(`üìä Nombre total d'utilisateurs dans Firestore: ${allUsersSnapshot.size}`);// Afficher les premiers utilisateurs pour d√©boguer\nconst sampleUsers=allUsersSnapshot.docs.slice(0,3).map(doc=>{const data=doc.data();return{id:doc.id,identifiant:data.identifiant,email:data.email};});console.log('üìã √âchantillon d\\'utilisateurs:',sampleUsers);// Rechercher l'utilisateur dans Firestore par son identifiant (recherche exacte)\nconst usersRef=collection(db,'users');const q=query(usersRef,where('identifiant','==',userIdentifier));const querySnapshot=await getDocs(q);// Si aucun r√©sultat, essayer avec une recherche insensible √† la casse\nif(querySnapshot.empty){console.log(`‚ö†Ô∏è Aucun utilisateur trouv√© avec l'identifiant exact: \"${userIdentifier}\"`);console.log(`üîÑ Recherche manuelle insensible √† la casse...`);// Recherche manuelle insensible √† la casse\nconst userIdentifierLower=userIdentifier.toLowerCase();// Parcourir tous les utilisateurs pour trouver une correspondance insensible √† la casse\nfor(const doc of allUsersSnapshot.docs){const userData=doc.data();if(userData.identifiant&&userData.identifiant.toLowerCase()===userIdentifierLower){console.log(`‚úÖ Utilisateur trouv√© avec correspondance insensible √† la casse: \"${userData.identifiant}\"`);if(userData.email){console.log(`üìß Email trouv√©: ${userData.email}`);return userData.email;}}}// Si toujours pas trouv√©, essayer avec @inovie.fr\nconsole.log(`‚ö†Ô∏è Aucune correspondance trouv√©e, essai avec @inovie.fr`);const emailWithDomain=`${userIdentifier}@inovie.fr`;console.log(`üìß Email construit: ${emailWithDomain}`);return emailWithDomain;}// R√©cup√©rer l'email du premier utilisateur trouv√©\nconst userDoc=querySnapshot.docs[0];const userData=userDoc.data();const email=userData.email;console.log(`‚úÖ Utilisateur trouv√©: \"${userIdentifier}\" -> \"${email}\"`);console.log(`üìä Donn√©es compl√®tes:`,userData);return email;}catch(error){console.error('‚ùå Erreur lors de la recherche de l\\'utilisateur:',error);// En cas d'erreur, essayer avec @inovie.fr comme solution de secours\nconst emailWithDomain=`${userIdentifier}@inovie.fr`;console.log(`üîÑ Solution de secours apr√®s erreur: ${emailWithDomain}`);return emailWithDomain;}};const forceRedirection=()=>{console.log(\"For√ßage de la redirection...\");navigate('/');};const handleLogin=async e=>{e.preventDefault();// √âviter les soumissions multiples\nif(loading||isSubmitted){console.log(\"Soumission d√©j√† en cours, ignor√©e\");return;}setError(null);setLoading(true);setIsSubmitted(true);console.log(\"D√©but de la tentative de connexion\");try{// Trouver l'email correspondant √† l'identifiant\nconst email=await findEmailByIdentifier(identifier);if(!email){setError('Identifiant non reconnu');setLoading(false);setIsSubmitted(false);return;}console.log(`Email identifi√©: ${email}, tentative de connexion...`);// Utiliser la fonction login du contexte d'authentification\nconst user=await login(email,password);console.log(\"Login r√©ussi, utilisateur:\",user);// HACK: Forcer la redirection apr√®s un court d√©lai si elle n'est pas automatique\nsetTimeout(forceRedirection,300);}catch(error){console.error('Erreur de connexion:',error);setIsSubmitted(false);// V√©rifier si c'est un probl√®me de mot de passe temporaire\ntry{const usersRef=collection(db,'users');const email=await findEmailByIdentifier(identifier);if(email){const q=query(usersRef,where('email','==',email));const querySnapshot=await getDocs(q);if(!querySnapshot.empty){const userData=querySnapshot.docs[0].data();// Si l'utilisateur a un mot de passe temporaire et qu'il correspond\nif(userData.tempPassword&&userData.tempPassword===password){console.log('‚úÖ Mot de passe temporaire valide, mais connexion Firebase impossible');setError('Votre mot de passe temporaire est correct, mais une erreur technique emp√™che la connexion. Veuillez contacter l\\'administrateur.');setLoading(false);return;}}}}catch(err){console.error(\"Erreur lors de la v√©rification du mot de passe temporaire:\",err);}// Sinon, afficher l'erreur standard\nconst errorMessage=getErrorMessage(error.code);setError(errorMessage);}finally{setLoading(false);}};const getErrorMessage=errorCode=>{if(errorCode==='auth/invalid-credential'||errorCode==='auth/wrong-password'||errorCode==='auth/user-not-found'){return'Identifiant ou mot de passe incorrect. V√©rifiez vos informations et r√©essayez.';}else if(errorCode==='auth/too-many-requests'){return'Trop de tentatives de connexion. Veuillez r√©essayer plus tard ou contactez votre administrateur.';}else if(errorCode==='auth/user-disabled'){return'Ce compte a √©t√© d√©sactiv√©. Veuillez contacter votre administrateur.';}else if(errorCode==='auth/invalid-email'){return'Format d\\'identifiant invalide. Veuillez r√©essayer avec votre identifiant Inovie.';}else{return`Une erreur s'est produite lors de la connexion. Veuillez r√©essayer.`;}};// Fonction pour g√©rer la r√©initialisation du mot de passe\nconst handleResetPassword=async e=>{e.preventDefault();setLoading(true);setError(null);try{console.log('üîÑ D√©but de la r√©initialisation du mot de passe');// Utiliser l'email saisi dans le pop-up ou l'identifiant du formulaire de connexion\nconst emailToReset=resetEmail||(await findEmailByIdentifier(identifier));console.log('üìß Email √† r√©initialiser:',emailToReset);if(!emailToReset){console.error('‚ùå Aucun email fourni');setError('Veuillez saisir une adresse email valide.');setLoading(false);return;}// Envoyer l'email de r√©initialisation\nawait sendPasswordResetEmail(auth,emailToReset);console.log('‚úÖ Email de r√©initialisation envoy√© avec succ√®s');// Afficher un message de succ√®s\nsetResetEmailSent(true);setResetEmail('');alert(`Un email de r√©initialisation a √©t√© envoy√© √† ${emailToReset}. Veuillez v√©rifier votre bo√Æte de r√©ception et suivre les instructions.`);// Apr√®s 5 secondes, fermer le pop-up\nsetTimeout(()=>{setShowForgotPassword(false);setResetEmailSent(false);},5000);}catch(error){console.error('‚ùå Erreur lors de la r√©initialisation:',error);console.error('D√©tails:',{code:error.code,message:error.message,stack:error.stack});let errorMessage='Une erreur est survenue lors de la r√©initialisation du mot de passe.';switch(error.code){case'auth/invalid-email':errorMessage='Format d\\'email invalide.';break;case'auth/user-not-found':errorMessage='Aucun compte associ√© √† cet email.';break;case'auth/too-many-requests':errorMessage='Trop de tentatives. Veuillez r√©essayer plus tard.';break;default:errorMessage=`Erreur: ${error.message}`;}setError(errorMessage);alert(errorMessage);}finally{setLoading(false);}};// Fonction pour ouvrir Outlook Web avec les param√®tres appropri√©s\nconst openOutlookMail=function(to){let subject=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';let body=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';// URL pour Outlook Web Access (OWA)\nconst outlookWebUrl=`https://outlook.office.com/mail/deeplink/compose?to=${encodeURIComponent(to)}&subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;// Ouvrir dans un nouvel onglet\nwindow.open(outlookWebUrl,'_blank');};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-content\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoInovie,alt:\"Groupe Inovie\",className:\"header-logo\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"login-title\",style:{textTransform:'none',color:'#263471'},children:\"inovie SCAN\"}),welcomeMessage&&/*#__PURE__*/_jsx(\"div\",{className:`welcome-message ${isNewUserLogin?'welcome-message-new-user':''} ${isPasswordReset?'welcome-message-reset':''}`,children:welcomeMessage}),infoMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"info-message\",children:infoMessage}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"login-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"identifier\",children:\"Identifiant\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"identifier\",value:identifier,onChange:e=>setIdentifier(e.target.value),required:true,autoFocus:!identifier// Ne pas prendre le focus si l'identifiant est d√©j√† rempli\n,placeholder:\"Votre identifiant\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Mot de passe\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,autoFocus:!!identifier// Prendre le focus si l'identifiant est d√©j√† rempli\n,placeholder:\"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",disabled:loading,children:loading?'Connexion en cours...':'Se connecter'})]}),/*#__PURE__*/_jsxs(\"footer\",{className:\"login-footer\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Pour vous connecter, utilisez votre identifiant Inovie\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"a\",{href:\"#\",onClick:e=>{e.preventDefault();// Cr√©ation manuelle du message pour l'assistance\nconst messageAssistance=\"Bonjour,\"+\"\\n\\n\"+\"Je vous contacte au sujet de l'application Inovie SCAN.\"+\"\\n\\n\"+\"Mon identifiant : \"+(identifier||\"[√Ä compl√©ter]\")+\"\\n\\n\"+\"Description du probl√®me : [Veuillez d√©crire votre probl√®me ici]\"+\"\\n\\n\"+\"Merci pour votre aide.\"+\"\\n\\n\"+\"Cordialement.\";openOutlookMail('mickael.volle@inovie.fr','Demande d\\'assistance - Application Inovie SCAN',messageAssistance);},children:\"Contacter l'administrateur\"}),' | ',/*#__PURE__*/_jsx(\"a\",{href:\"#\",onClick:e=>{e.preventDefault();setShowForgotPassword(true);},children:\"Mot de passe oubli\\xE9 ?\"})]})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"version\",children:\"version 1.0 | \\xA9 2025 inovie SCAN\"}),showForgotPassword&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-title\",children:\"R\\xE9initialisation de mot de passe\"}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>{setShowForgotPassword(false);setResetEmailSent(false);setResetEmail('');setError(null);},children:\"\\xD7\"})]}),resetEmailSent?/*#__PURE__*/_jsxs(\"div\",{className:\"reset-success\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Un email de r\\xE9initialisation a \\xE9t\\xE9 envoy\\xE9 \\xE0 l'adresse indiqu\\xE9e.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Veuillez v\\xE9rifier votre bo\\xEEte de r\\xE9ception et suivre les instructions pour r\\xE9initialiser votre mot de passe.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Cette fen\\xEAtre se fermera automatiquement dans quelques secondes...\"})]}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleResetPassword,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"reset-email\",children:\"Adresse email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"reset-email\",value:resetEmail,onChange:e=>setResetEmail(e.target.value),placeholder:\"Votre adresse email\",required:true,autoFocus:true}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text\",children:\"Saisissez l'adresse email associ\\xE9e \\xE0 votre compte pour recevoir un lien de r\\xE9initialisation.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"button button-secondary\",onClick:()=>{setShowForgotPassword(false);setResetEmail('');setError(null);},children:\"Annuler\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button button-primary\",disabled:loading,children:loading?'Envoi en cours...':'Envoyer le lien'})]})]})]})})]});};export default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","sendPasswordResetEmail","collection","query","where","getDocs","auth","db","logoInovie","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","LoginScreen","identifier","setIdentifier","password","setPassword","error","setError","loading","setLoading","welcomeMessage","setWelcomeMessage","infoMessage","setInfoMessage","isNewUserLogin","setIsNewUserLogin","isPasswordReset","setIsPasswordReset","showForgotPassword","setShowForgotPassword","resetEmail","setResetEmail","resetEmailSent","setResetEmailSent","isSubmitted","setIsSubmitted","navigate","login","currentUser","console","log","params","URLSearchParams","window","location","search","email","get","isNewUser","isReset","nom","role","fullUrl","href","welcomeMsg","resetMsg","findEmailByIdentifier","userIdentifier","includes","allUsersRef","allUsersSnapshot","size","sampleUsers","docs","slice","map","doc","data","id","identifiant","usersRef","q","querySnapshot","empty","userIdentifierLower","toLowerCase","userData","emailWithDomain","userDoc","forceRedirection","handleLogin","e","preventDefault","user","setTimeout","tempPassword","err","errorMessage","getErrorMessage","code","errorCode","handleResetPassword","emailToReset","alert","message","stack","openOutlookMail","to","subject","arguments","length","undefined","body","outlookWebUrl","encodeURIComponent","open","className","children","src","alt","style","textTransform","color","onSubmit","htmlFor","type","value","onChange","target","required","autoFocus","placeholder","disabled","onClick","messageAssistance"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/LoginScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { signInWithEmailAndPassword, sendPasswordResetEmail } from 'firebase/auth';\nimport { collection, query, where, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { auth, db, PRODUCTION_URL, ALLOWED_DOMAINS, actionCodeSettings } from '../config/firebase';\nimport logoInovie from '../assets/logo-inovie.png';\n// import * as LogoIcons from '../assets/inovie-logo.js';\nimport './LoginScreen.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst LoginScreen: React.FC = () => {\n  const [identifier, setIdentifier] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [welcomeMessage, setWelcomeMessage] = useState<string>('');\n  const [infoMessage, setInfoMessage] = useState<string>('');\n  const [isNewUserLogin, setIsNewUserLogin] = useState<boolean>(false);\n  const [isPasswordReset, setIsPasswordReset] = useState<boolean>(false);\n  const [showForgotPassword, setShowForgotPassword] = useState<boolean>(false);\n  const [resetEmail, setResetEmail] = useState<string>('');\n  const [resetEmailSent, setResetEmailSent] = useState<boolean>(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate();\n  const { login, currentUser } = useAuth();\n\n  // Effet pour rediriger automatiquement si l'utilisateur est connect√©\n  useEffect(() => {\n    if (currentUser && isSubmitted) {\n      console.log(\"Redirection automatique vers / car utilisateur connect√©:\", currentUser);\n      navigate('/');\n    }\n  }, [currentUser, isSubmitted, navigate]);\n\n  useEffect(() => {\n    // R√©cup√©rer les param√®tres de l'URL\n    const params = new URLSearchParams(window.location.search);\n    const email = params.get('email');\n    const isNewUser = params.get('newUser') === 'true';\n    const isReset = params.get('reset') === 'true';\n    const nom = params.get('nom');\n    const role = params.get('role');\n\n    console.log('üîç Param√®tres URL d√©tect√©s:', {\n      email,\n      isNewUser,\n      isReset,\n      nom,\n      role,\n      fullUrl: window.location.href\n    });\n\n    // Pr√©-remplir l'email s'il est pr√©sent dans l'URL\n    if (email) {\n      setIdentifier(email);\n      console.log('üìù Email pr√©-rempli:', email);\n    }\n\n    // Afficher un message appropri√© selon le sc√©nario\n    if (isNewUser && nom) {\n      setIsNewUserLogin(true);\n      const welcomeMsg = `Bienvenue ${nom} ! Votre compte a √©t√© cr√©√© avec succ√®s. Veuillez vous connecter avec le mot de passe que vous venez de d√©finir.`;\n      setWelcomeMessage(welcomeMsg);\n      setInfoMessage(\"Si vous n'avez pas encore d√©fini votre mot de passe via l'email, vous pouvez √©galement utiliser le mot de passe temporaire fourni par votre administrateur.\");\n      console.log('‚ú® Message de bienvenue affich√© pour nouvel utilisateur:', welcomeMsg);\n    } else if (isReset) {\n      setIsPasswordReset(true);\n      const resetMsg = \"Votre mot de passe a √©t√© r√©initialis√© avec succ√®s !\";\n      setWelcomeMessage(resetMsg);\n      setInfoMessage(\"Vous pouvez maintenant vous connecter avec votre nouveau mot de passe.\");\n      console.log('üîÑ Message de r√©initialisation affich√©:', resetMsg);\n    } else {\n      console.log('‚ÑπÔ∏è Aucun message sp√©cial √† afficher');\n    }\n  }, []);\n\n  // Fonction pour trouver l'email d'un utilisateur √† partir de son identifiant\n  const findEmailByIdentifier = async (userIdentifier: string): Promise<string | null> => {\n    try {\n      // Si l'identifiant contient d√©j√† un @, c'est probablement un email\n      if (userIdentifier.includes('@')) {\n        console.log(`üìß Identifiant contient d√©j√† un @ - utilisation directe: ${userIdentifier}`);\n        return userIdentifier;\n      }\n      \n      console.log(`üîç Recherche de l'utilisateur avec l'identifiant exact: \"${userIdentifier}\"`);\n      \n      // R√©cup√©rer tous les utilisateurs pour d√©boguer\n      const allUsersRef = collection(db, 'users');\n      const allUsersSnapshot = await getDocs(allUsersRef);\n      console.log(`üìä Nombre total d'utilisateurs dans Firestore: ${allUsersSnapshot.size}`);\n      \n      // Afficher les premiers utilisateurs pour d√©boguer\n      const sampleUsers = allUsersSnapshot.docs.slice(0, 3).map(doc => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          identifiant: data.identifiant,\n          email: data.email\n        };\n      });\n      console.log('üìã √âchantillon d\\'utilisateurs:', sampleUsers);\n      \n      // Rechercher l'utilisateur dans Firestore par son identifiant (recherche exacte)\n      const usersRef = collection(db, 'users');\n      const q = query(usersRef, where('identifiant', '==', userIdentifier));\n      const querySnapshot = await getDocs(q);\n      \n      // Si aucun r√©sultat, essayer avec une recherche insensible √† la casse\n      if (querySnapshot.empty) {\n        console.log(`‚ö†Ô∏è Aucun utilisateur trouv√© avec l'identifiant exact: \"${userIdentifier}\"`);\n        console.log(`üîÑ Recherche manuelle insensible √† la casse...`);\n        \n        // Recherche manuelle insensible √† la casse\n        const userIdentifierLower = userIdentifier.toLowerCase();\n        \n        // Parcourir tous les utilisateurs pour trouver une correspondance insensible √† la casse\n        for (const doc of allUsersSnapshot.docs) {\n          const userData = doc.data();\n          if (userData.identifiant && userData.identifiant.toLowerCase() === userIdentifierLower) {\n            console.log(`‚úÖ Utilisateur trouv√© avec correspondance insensible √† la casse: \"${userData.identifiant}\"`);\n            if (userData.email) {\n              console.log(`üìß Email trouv√©: ${userData.email}`);\n              return userData.email;\n            }\n          }\n        }\n        \n        // Si toujours pas trouv√©, essayer avec @inovie.fr\n        console.log(`‚ö†Ô∏è Aucune correspondance trouv√©e, essai avec @inovie.fr`);\n        const emailWithDomain = `${userIdentifier}@inovie.fr`;\n        console.log(`üìß Email construit: ${emailWithDomain}`);\n        return emailWithDomain;\n      }\n      \n      // R√©cup√©rer l'email du premier utilisateur trouv√©\n      const userDoc = querySnapshot.docs[0];\n      const userData = userDoc.data();\n      const email = userData.email;\n      \n      console.log(`‚úÖ Utilisateur trouv√©: \"${userIdentifier}\" -> \"${email}\"`);\n      console.log(`üìä Donn√©es compl√®tes:`, userData);\n      \n      return email;\n    } catch (error) {\n      console.error('‚ùå Erreur lors de la recherche de l\\'utilisateur:', error);\n      // En cas d'erreur, essayer avec @inovie.fr comme solution de secours\n      const emailWithDomain = `${userIdentifier}@inovie.fr`;\n      console.log(`üîÑ Solution de secours apr√®s erreur: ${emailWithDomain}`);\n      return emailWithDomain;\n    }\n  };\n\n  const forceRedirection = () => {\n    console.log(\"For√ßage de la redirection...\");\n    navigate('/');\n  };\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // √âviter les soumissions multiples\n    if (loading || isSubmitted) {\n      console.log(\"Soumission d√©j√† en cours, ignor√©e\");\n      return;\n    }\n    \n    setError(null);\n    setLoading(true);\n    setIsSubmitted(true);\n    \n    console.log(\"D√©but de la tentative de connexion\");\n\n    try {\n      // Trouver l'email correspondant √† l'identifiant\n      const email = await findEmailByIdentifier(identifier);\n      \n      if (!email) {\n        setError('Identifiant non reconnu');\n        setLoading(false);\n        setIsSubmitted(false);\n        return;\n      }\n\n      console.log(`Email identifi√©: ${email}, tentative de connexion...`);\n\n      // Utiliser la fonction login du contexte d'authentification\n      const user = await login(email, password);\n      console.log(\"Login r√©ussi, utilisateur:\", user);\n      \n      // HACK: Forcer la redirection apr√®s un court d√©lai si elle n'est pas automatique\n      setTimeout(forceRedirection, 300);\n      \n    } catch (error: any) {\n      console.error('Erreur de connexion:', error);\n      setIsSubmitted(false);\n      \n      // V√©rifier si c'est un probl√®me de mot de passe temporaire\n      try {\n        const usersRef = collection(db, 'users');\n        const email = await findEmailByIdentifier(identifier);\n        if (email) {\n          const q = query(usersRef, where('email', '==', email));\n          const querySnapshot = await getDocs(q);\n          \n          if (!querySnapshot.empty) {\n            const userData = querySnapshot.docs[0].data();\n            \n            // Si l'utilisateur a un mot de passe temporaire et qu'il correspond\n            if (userData.tempPassword && userData.tempPassword === password) {\n              console.log('‚úÖ Mot de passe temporaire valide, mais connexion Firebase impossible');\n              setError('Votre mot de passe temporaire est correct, mais une erreur technique emp√™che la connexion. Veuillez contacter l\\'administrateur.');\n              setLoading(false);\n              return;\n            }\n          }\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la v√©rification du mot de passe temporaire:\", err);\n      }\n      \n      // Sinon, afficher l'erreur standard\n      const errorMessage = getErrorMessage(error.code);\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getErrorMessage = (errorCode: string) => {\n    if (errorCode === 'auth/invalid-credential' || errorCode === 'auth/wrong-password' || errorCode === 'auth/user-not-found') {\n      return 'Identifiant ou mot de passe incorrect. V√©rifiez vos informations et r√©essayez.';\n    } else if (errorCode === 'auth/too-many-requests') {\n      return 'Trop de tentatives de connexion. Veuillez r√©essayer plus tard ou contactez votre administrateur.';\n    } else if (errorCode === 'auth/user-disabled') {\n      return 'Ce compte a √©t√© d√©sactiv√©. Veuillez contacter votre administrateur.';\n    } else if (errorCode === 'auth/invalid-email') {\n      return 'Format d\\'identifiant invalide. Veuillez r√©essayer avec votre identifiant Inovie.';\n    } else {\n      return `Une erreur s'est produite lors de la connexion. Veuillez r√©essayer.`;\n    }\n  };\n\n  // Fonction pour g√©rer la r√©initialisation du mot de passe\n  const handleResetPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log('üîÑ D√©but de la r√©initialisation du mot de passe');\n      \n      // Utiliser l'email saisi dans le pop-up ou l'identifiant du formulaire de connexion\n      const emailToReset = resetEmail || await findEmailByIdentifier(identifier);\n      \n      console.log('üìß Email √† r√©initialiser:', emailToReset);\n      \n      if (!emailToReset) {\n        console.error('‚ùå Aucun email fourni');\n        setError('Veuillez saisir une adresse email valide.');\n        setLoading(false);\n        return;\n      }\n      \n      // Envoyer l'email de r√©initialisation\n      await sendPasswordResetEmail(auth, emailToReset);\n      console.log('‚úÖ Email de r√©initialisation envoy√© avec succ√®s');\n      \n      // Afficher un message de succ√®s\n      setResetEmailSent(true);\n      setResetEmail('');\n      alert(`Un email de r√©initialisation a √©t√© envoy√© √† ${emailToReset}. Veuillez v√©rifier votre bo√Æte de r√©ception et suivre les instructions.`);\n      \n      // Apr√®s 5 secondes, fermer le pop-up\n      setTimeout(() => {\n        setShowForgotPassword(false);\n        setResetEmailSent(false);\n      }, 5000);\n      \n    } catch (error: any) {\n      console.error('‚ùå Erreur lors de la r√©initialisation:', error);\n      console.error('D√©tails:', {\n        code: error.code,\n        message: error.message,\n        stack: error.stack\n      });\n      \n      let errorMessage = 'Une erreur est survenue lors de la r√©initialisation du mot de passe.';\n      \n      switch (error.code) {\n        case 'auth/invalid-email':\n          errorMessage = 'Format d\\'email invalide.';\n          break;\n        case 'auth/user-not-found':\n          errorMessage = 'Aucun compte associ√© √† cet email.';\n          break;\n        case 'auth/too-many-requests':\n          errorMessage = 'Trop de tentatives. Veuillez r√©essayer plus tard.';\n          break;\n        default:\n          errorMessage = `Erreur: ${error.message}`;\n      }\n      \n      setError(errorMessage);\n      alert(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour ouvrir Outlook Web avec les param√®tres appropri√©s\n  const openOutlookMail = (to: string, subject: string = '', body: string = '') => {\n    // URL pour Outlook Web Access (OWA)\n    const outlookWebUrl = `https://outlook.office.com/mail/deeplink/compose?to=${encodeURIComponent(to)}&subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    \n    // Ouvrir dans un nouvel onglet\n    window.open(outlookWebUrl, '_blank');\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-content\">\n        <img \n          src={logoInovie}\n          alt=\"Groupe Inovie\" \n          className=\"header-logo\"\n        />\n        <h2 className=\"login-title\" style={{ textTransform: 'none', color: '#263471' }}>inovie SCAN</h2>\n        \n        {welcomeMessage && (\n          <div className={`welcome-message ${isNewUserLogin ? 'welcome-message-new-user' : ''} ${isPasswordReset ? 'welcome-message-reset' : ''}`}>\n            {welcomeMessage}\n          </div>\n        )}\n        \n        {infoMessage && (\n          <div className=\"info-message\">\n            {infoMessage}\n          </div>\n        )}\n        \n        {error && <div className=\"error-message\">{error}</div>}\n        \n        <form onSubmit={handleLogin} className=\"login-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"identifier\">Identifiant</label>\n            <input\n              type=\"text\"\n              id=\"identifier\"\n              value={identifier}\n              onChange={(e) => setIdentifier(e.target.value)}\n              required\n              autoFocus={!identifier} // Ne pas prendre le focus si l'identifiant est d√©j√† rempli\n              placeholder=\"Votre identifiant\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Mot de passe</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              autoFocus={!!identifier} // Prendre le focus si l'identifiant est d√©j√† rempli\n              placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"login-button\"\n            disabled={loading}\n          >\n            {loading ? 'Connexion en cours...' : 'Se connecter'}\n          </button>\n        </form>\n\n        <footer className=\"login-footer\">\n          <p>Pour vous connecter, utilisez votre identifiant Inovie</p>\n          <p>\n            <a \n              href=\"#\" \n              onClick={(e) => {\n                e.preventDefault();\n                // Cr√©ation manuelle du message pour l'assistance\n                const messageAssistance = \"Bonjour,\" + \n                  \"\\n\\n\" + \n                  \"Je vous contacte au sujet de l'application Inovie SCAN.\" + \n                  \"\\n\\n\" + \n                  \"Mon identifiant : \" + (identifier || \"[√Ä compl√©ter]\") + \n                  \"\\n\\n\" + \n                  \"Description du probl√®me : [Veuillez d√©crire votre probl√®me ici]\" + \n                  \"\\n\\n\" + \n                  \"Merci pour votre aide.\" + \n                  \"\\n\\n\" + \n                  \"Cordialement.\";\n                \n                openOutlookMail(\n                  'mickael.volle@inovie.fr',\n                  'Demande d\\'assistance - Application Inovie SCAN',\n                  messageAssistance\n                );\n              }}\n            >\n              Contacter l'administrateur\n            </a>\n            {' | '}\n            <a \n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowForgotPassword(true);\n              }}\n            >\n              Mot de passe oubli√© ?\n            </a>\n          </p>\n        </footer>\n      </div>\n      <p className=\"version\">version 1.0 | ¬© 2025 inovie SCAN</p>\n      \n      {/* Pop-up de r√©initialisation de mot de passe */}\n      {showForgotPassword && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h3 className=\"modal-title\">R√©initialisation de mot de passe</h3>\n              <button \n                className=\"modal-close\" \n                onClick={() => {\n                  setShowForgotPassword(false);\n                  setResetEmailSent(false);\n                  setResetEmail('');\n                  setError(null);\n                }}\n              >\n                &times;\n              </button>\n            </div>\n            \n            {resetEmailSent ? (\n              <div className=\"reset-success\">\n                <p>Un email de r√©initialisation a √©t√© envoy√© √† l'adresse indiqu√©e.</p>\n                <p>Veuillez v√©rifier votre bo√Æte de r√©ception et suivre les instructions pour r√©initialiser votre mot de passe.</p>\n                <p>Cette fen√™tre se fermera automatiquement dans quelques secondes...</p>\n              </div>\n            ) : (\n              <form onSubmit={handleResetPassword}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"reset-email\">Adresse email</label>\n                  <input\n                    type=\"email\"\n                    id=\"reset-email\"\n                    value={resetEmail}\n                    onChange={(e) => setResetEmail(e.target.value)}\n                    placeholder=\"Votre adresse email\"\n                    required\n                    autoFocus\n                  />\n                  <small className=\"form-text\">\n                    Saisissez l'adresse email associ√©e √† votre compte pour recevoir un lien de r√©initialisation.\n                  </small>\n                </div>\n                \n                <div className=\"modal-footer\">\n                  <button \n                    type=\"button\" \n                    className=\"button button-secondary\"\n                    onClick={() => {\n                      setShowForgotPassword(false);\n                      setResetEmail('');\n                      setError(null);\n                    }}\n                  >\n                    Annuler\n                  </button>\n                  <button \n                    type=\"submit\" \n                    className=\"button button-primary\"\n                    disabled={loading}\n                  >\n                    {loading ? 'Envoi en cours...' : 'Envoyer le lien'}\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}