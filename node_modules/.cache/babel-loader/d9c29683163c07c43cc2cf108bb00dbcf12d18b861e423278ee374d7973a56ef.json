{"ast":null,"code":"import React,{useState,useEffect}from'react';import{collection,getDocs,updateDoc,deleteDoc,doc,getDoc,addDoc}from'firebase/firestore';import{sendPasswordResetEmail}from'firebase/auth';import{db,auth,PRODUCTION_URL}from'../config/firebase';import'./UserManagement.css';import{createUserWithoutSignOut}from'../services/userService';import{RoleService}from'../services/RoleService';import{useAuth}from'../contexts/AuthContext';import ProtectedRoute from'./ProtectedRoute';import{PAGES}from'../utils/pageAccessUtils';import PoleSelector from'./PoleSelector';import{usePoles}from'../services/PoleService';import PoleFilter from'./PoleFilter';// Étendre l'interface User importée\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UserManagement=()=>{const[users,setUsers]=useState([]);const[roles,setRoles]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[editMode,setEditMode]=useState(false);const[editingUsers,setEditingUsers]=useState({});const[newUser,setNewUser]=useState(null);const[selectedUsers,setSelectedUsers]=useState([]);const[isAdmin,setIsAdmin]=useState(false);const[update,setUpdate]=useState(0);// État pour la recherche rapide\nconst[quickSearch,setQuickSearch]=useState('');const[filteredUsers,setFilteredUsers]=useState([]);// Ajouter un état pour le filtre par pôle\nconst[selectedPole,setSelectedPole]=useState('');const roleService=RoleService.getInstance();const{currentUser,hasPermission}=useAuth();const{poles}=usePoles();useEffect(()=>{const initialize=async()=>{try{const[fetchedRoles]=await Promise.all([roleService.getRoles(),fetchUsers()]);setRoles(fetchedRoles);}catch(err){setError('Erreur lors de l\\'initialisation');}};initialize();checkAdminStatus();},[]);// Initialiser les utilisateurs filtrés au chargement\nuseEffect(()=>{setFilteredUsers(users);},[users]);// Effet pour filtrer les utilisateurs en fonction de la recherche rapide et du pôle sélectionné\nuseEffect(()=>{let results=users;// Filtrer par pôle si un pôle est sélectionné\nif(selectedPole){results=results.filter(user=>user.pole===selectedPole);}// Ensuite, filtrer par recherche rapide\nif(quickSearch.trim()){const searchTerm=quickSearch.toLowerCase().trim();results=results.filter(user=>{return(user.nom||'').toLowerCase().includes(searchTerm)||(user.email||'').toLowerCase().includes(searchTerm)||(user.identifiant||'').toLowerCase().includes(searchTerm)||(user.role||'').toLowerCase().includes(searchTerm)||(user.pole||'').toLowerCase().includes(searchTerm);});}setFilteredUsers(results);},[quickSearch,users,selectedPole]);useEffect(()=>{console.log('🔐 Permissions de l\\'utilisateur courant:',{user:currentUser,hasUsersViewPermission:hasPermission('users.view'),hasUsersCreatePermission:hasPermission('users.create'),hasUsersEditPermission:hasPermission('users.edit'),hasUsersDeletePermission:hasPermission('users.delete'),userRole:currentUser===null||currentUser===void 0?void 0:currentUser.role,userPermissions:currentUser===null||currentUser===void 0?void 0:currentUser.permissions});// Vérifier si l'utilisateur a accès à la page de gestion des utilisateurs\nconst canAccessUserManagement=hasPermission('users.view')||(currentUser===null||currentUser===void 0?void 0:currentUser.role)==='Administrateur';console.log('🚪 Accès à la gestion des utilisateurs:',canAccessUserManagement);},[currentUser]);const fetchUsers=async()=>{try{const usersCollection=collection(db,'users');const usersSnapshot=await getDocs(usersCollection);const usersList=usersSnapshot.docs.map(doc=>{const data=doc.data();// S'assurer que l'UID est défini pour tous les utilisateurs\nif(!data.uid&&data.identifiant){// Si l'UID n'est pas défini mais que l'identifiant existe, utiliser l'identifiant comme UID\ndata.uid=data.identifiant;}return{id:doc.id,...data};});setUsers(usersList);setLoading(false);}catch(err){setError('Erreur lors du chargement des utilisateurs');setLoading(false);}};const checkAdminStatus=()=>{const currentUser=auth.currentUser;setIsAdmin((currentUser===null||currentUser===void 0?void 0:currentUser.email)==='mickael.volle@inovie.fr');};const handleResetPassword=async email=>{console.log('🔐 Début de handleResetPassword');console.log('Email reçu:',email);setError(null);try{if(!email||email.trim()===''){console.error('❌ Email invalide');setError('L\\'email est invalide');return;}console.log('🔍 Tentative d\\'envoi de l\\'email de réinitialisation');const currentUser=auth.currentUser;if(!currentUser||!currentUser.email){console.error('❌ Aucun utilisateur connecté ou email non disponible');setError('Vous devez être connecté pour effectuer cette action');return;}const adminEmail=currentUser.email;console.log('📧 Email de l\\'administrateur connecté:',adminEmail);console.log('📧 Email de l\\'utilisateur à réinitialiser:',email);// Configuration personnalisée pour l'email de réinitialisation Firebase\nconst resetActionCodeSettings={url:PRODUCTION_URL+`/login?email=${encodeURIComponent(email)}&reset=true`,handleCodeInApp:true};console.log('📝 URL de redirection configurée:',resetActionCodeSettings.url);// Envoyer l'email de réinitialisation Firebase\nawait sendPasswordResetEmail(auth,email,resetActionCodeSettings);console.log('📧 Email de réinitialisation Firebase envoyé avec succès');console.log('✅ Processus de réinitialisation de mot de passe terminé avec succès');alert(`\n            ✅ Réinitialisation de mot de passe effectuée !\n            \n            Un email de réinitialisation a été envoyé à ${email}.\n            \n            L'utilisateur pourra :\n            1. Cliquer sur le lien dans l'email pour définir son mot de passe\n            2. Utiliser la fonction \"Mot de passe oublié\" sur la page de connexion\n            \n            ATTENTION : Le lien dans l'email est valable pendant 1 heure seulement.\n        `.trim());}catch(error){console.error('❌ ERREUR COMPLETE lors de la réinitialisation du mot de passe:',error);console.error('Détails de l\\'erreur:',{name:error.name,code:error.code,message:error.message,stack:error.stack});let errorMessage='Une erreur est survenue';switch(error.code){case'auth/invalid-email':errorMessage='Format d\\'email invalide';break;case'auth/user-not-found':errorMessage='Aucun utilisateur trouvé avec cet email';break;case'auth/missing-email':errorMessage='Aucun email n\\'a été fourni';break;case'auth/too-many-requests':errorMessage='Trop de tentatives. Veuillez réessayer plus tard.';break;default:errorMessage=`Impossible d'envoyer l'email de réinitialisation : ${error.message}`;}console.error('❌ Message d\\'erreur:',errorMessage);setError(errorMessage);alert(errorMessage);}};const toggleEditMode=()=>{if(!editMode){// Si on entre en mode édition, initialiser l'état d'édition avec les utilisateurs actuels\nconsole.log(\"Entrée en mode édition\");const initialEditState={};users.forEach(user=>{initialEditState[user.id]={...user};});setEditingUsers(initialEditState);setNewUser(null);// Activer le mode édition\nsetEditMode(true);}else{// Si on quitte le mode édition, demander confirmation\nif(window.confirm(\"Voulez-vous enregistrer les modifications ?\")){console.log(\"Sauvegarde des modifications avant de quitter le mode édition\");// Sauvegarder les modifications et quitter le mode édition après la sauvegarde\nsaveAllChanges().then(()=>{// Désélectionner tout et quitter le mode édition\nsetSelectedUsers([]);setNewUser(null);setEditMode(false);}).catch(error=>{console.error(\"Erreur lors de la sauvegarde:\",error);// Laisser l'utilisateur en mode édition en cas d'erreur\nalert(\"Une erreur est survenue lors de la sauvegarde. Veuillez réessayer.\");});}else{console.log(\"Annulation des modifications et sortie du mode édition\");// Annuler les modifications et quitter le mode édition\nsetEditingUsers({});setNewUser(null);setSelectedUsers([]);setEditMode(false);}}};// Fonction utilitaire pour créer un utilisateur par défaut\nconst createDefaultUser=()=>({identifiant:'',email:'',nom:'',role:'Utilisateur',pole:'',statut:'Actif',permissions:[]});// Fonction pour convertir un objet partiel en User complet\nconst toFullUser=partialUser=>{if(!partialUser){return createDefaultUser();}return{...createDefaultUser(),...partialUser,nom:partialUser.nom||'',email:partialUser.email||'',role:partialUser.role||'Utilisateur',pole:partialUser.pole||'',statut:partialUser.statut||'Actif',identifiant:partialUser.identifiant||'',permissions:partialUser.permissions||[]};};// Modifier handleNewUserChange pour utiliser toFullUser\nconst handleNewUserChange=(field,value)=>{setNewUser(prev=>{const currentUser=toFullUser(prev);return{...currentUser,[field]:value};});};// Modifier handleAddUser pour gérer les types\nconst handleAddUser=async()=>{// Vérifier que newUser n'est pas null\nif(!newUser){console.error('Aucun nouvel utilisateur à ajouter');return;}// Convertir le nouvel utilisateur en objet User complet\nconst userDraft=toFullUser(newUser);try{// Vérifier que les champs requis sont remplis\nif(!userDraft.nom||!userDraft.email||!userDraft.role){console.error('Tous les champs requis doivent être remplis');return;}// Trouver le rôle sélectionné et ses permissions\nconst selectedRole=roles.find(r=>r.name===userDraft.role);if(!selectedRole){console.error('Rôle non trouvé');return;}// Créer l'utilisateur avec les permissions du rôle\nconst userToAdd={...userDraft,permissions:selectedRole.permissions,dateCreation:new Date().toISOString(),dateModification:new Date().toISOString()};// Ajouter l'utilisateur à Firestore\nconst userRef=await addDoc(collection(db,'users'),userToAdd);// Réinitialiser le formulaire\nsetNewUser(null);setUsers(prevUsers=>[...prevUsers,{...userToAdd,id:userRef.id}]);}catch(error){console.error('Erreur lors de l\\'ajout de l\\'utilisateur:',error);}};const handleEditChange=async(userId,field,value)=>{if(!userId)return;setEditingUsers(prev=>{const currentUser=prev[userId]||{...(users.find(u=>u.id===userId)||{})};// Si le champ modifié est le rôle, récupérer les permissions associées\nif(field==='role'){const selectedRole=roles.find(r=>r.name===value);return{...prev,[userId]:{...currentUser,[field]:value,permissions:(selectedRole===null||selectedRole===void 0?void 0:selectedRole.permissions)||[]}};}return{...prev,[userId]:{...currentUser,[field]:value}};});};const getStatusClass=statut=>{if(!statut)return'';switch(statut.toLowerCase()){case'actif':return'livré';case'inactif':return'en-cours';default:return'';}};const handleUserSelect=userId=>{setSelectedUsers(prev=>prev.includes(userId)?prev.filter(id=>id!==userId):[...prev,userId]);};const handleDeleteSelected=async()=>{try{// Vérifier s'il y a des utilisateurs sélectionnés\nif(selectedUsers.length===0){alert('❌ Aucun utilisateur sélectionné');return;}// Demander confirmation avant de supprimer\nif(!window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedUsers.length} utilisateur(s) ?\n      \n⚠️ ATTENTION: Les utilisateurs seront supprimés uniquement de la base de données Firestore, mais PAS de Firebase Authentication.\nPour une suppression complète, contactez l'administrateur système.`)){return;}// Récupérer les utilisateurs sélectionnés\nconst selectedUsersList=users.filter(user=>selectedUsers.includes(user.id));console.log(`🔄 Tentative de suppression de ${selectedUsers.length} utilisateurs de Firestore`);// Supprimer les utilisateurs de Firestore uniquement\nconst deletePromises=selectedUsers.map(userId=>deleteDoc(doc(db,'users',userId)));// Attendre que toutes les suppressions soient terminées\nawait Promise.all(deletePromises);// Mettre à jour l'état local\nconst updatedUsers=users.filter(user=>!selectedUsers.includes(user.id));setUsers(updatedUsers);setSelectedUsers([]);// Afficher un message de succès avec un avertissement\nalert(`\n        ✅ ${selectedUsers.length} utilisateur(s) supprimé(s) de la base de données Firestore avec succès.\n        \n        ⚠️ IMPORTANT: Les comptes utilisateurs n'ont PAS été supprimés de Firebase Authentication.\n        Si nécessaire, ces comptes devront être supprimés manuellement par un administrateur\n        depuis la console Firebase.\n      `.trim());}catch(error){console.error('❌ Erreur lors de la suppression des utilisateurs:',error);setError('Erreur lors de la suppression des utilisateurs');alert('❌ Erreur lors de la suppression des utilisateurs');}};const saveAllChanges=async()=>{try{setLoading(true);const batch=[];// Sauvegarder les modifications d'utilisateurs existants\nfor(const userId in editingUsers){if(Object.prototype.hasOwnProperty.call(editingUsers,userId)){const user=editingUsers[userId];// Empêcher la promotion d'un utilisateur au rôle d'Administrateur\nconst adminRole=roles.find(r=>r.name==='Administrateur');if(user.role==='Administrateur'&&adminRole&&user.id){// Vérifier si l'utilisateur n'est pas déjà dans les permissions d'admin\nif(!adminRole.permissions.includes(user.id)){// Si l'utilisateur n'était pas déjà Administrateur, réinitialiser au rôle précédent\nconst originalUser=users.find(u=>u.id===userId);if(originalUser&&originalUser.role!=='Administrateur'){user.role=originalUser.role;console.warn(`Tentative non autorisée de promotion au rôle d'Administrateur pour l'utilisateur ${user.nom||user.email}`);alert(`Le rôle \"Administrateur\" ne peut pas être attribué via cette interface. L'utilisateur ${user.nom||user.email} conservera son rôle ${user.role}.`);}}}if(!user.dateModification){user.dateModification=new Date().toISOString();}const userRef=doc(db,'users',userId);// Créer un objet avec uniquement les champs modifiables\nconst{id,uid,...updateData}=user;batch.push(updateDoc(userRef,updateData));}}// Ajouter le nouvel utilisateur si présent\nlet newUserPromise=null;if(newUser){console.log(\"Préparation de l'ajout d'un nouvel utilisateur:\",newUser);// Vérifier que tous les champs obligatoires sont remplis\nif(!newUser.email||!newUser.nom){console.warn(\"Champs obligatoires manquants pour le nouvel utilisateur\");// Ne pas bloquer la sauvegarde si le nouvel utilisateur est incomplet\nsetNewUser(null);}else{// Empêcher l'attribution du rôle Administrateur à un nouvel utilisateur\nif(newUser.role==='Administrateur'){console.warn(\"Tentative non autorisée d'attribution du rôle Administrateur à un nouvel utilisateur\");newUser.role='Utilisateur';// Assigner un rôle par défaut\nalert('Le rôle \"Administrateur\" ne peut pas être attribué via cette interface. Le nouvel utilisateur sera créé avec le rôle \"Utilisateur\".');}newUserPromise=(async()=>{try{// Préparer les données de l'utilisateur avec des valeurs par défaut sûres\nconst userToSave={identifiant:newUser.identifiant||'',email:newUser.email||'',nom:newUser.nom||'',role:newUser.role||'Utilisateur',pole:newUser.pole||'',statut:newUser.statut||'Actif',permissions:newUser.permissions||[]};// Appeler notre service pour créer l'utilisateur\nconst result=await createUserWithoutSignOut(userToSave);if(result.success){console.log(`Nouvel utilisateur ajouté avec l'ID: ${result.docId}`);return result.docId;}else{throw result.error||new Error('La création de l\\'utilisateur a échoué');}}catch(error){console.error(`Erreur lors de l'ajout du nouvel utilisateur:`,error);throw error;}})();}}// Attendre que toutes les opérations soient terminées\nconst updateResults=await Promise.allSettled(batch);const newUserResults=newUserPromise?await Promise.allSettled([newUserPromise]):[];const results=[...updateResults,...newUserResults];// Vérifier les résultats\nconst fulfilled=results.filter(result=>result.status==='fulfilled').length;const rejected=results.filter(result=>result.status==='rejected').length;console.log(`Opérations terminées: ${fulfilled} réussies, ${rejected} échouées`);if(rejected>0){console.warn(\"Certaines opérations ont échoué. Voir les erreurs ci-dessus.\");}// Rafraîchir les données\nawait fetchUsers();// Réinitialiser les états\nsetEditingUsers({});setNewUser(null);// Désactiver le mode édition après sauvegarde réussie\nsetEditMode(false);setSelectedUsers([]);if(rejected>0){alert(`Modifications partiellement enregistrées. ${rejected} opérations ont échoué.`);}else{alert(`Modifications enregistrées avec succès. ${Object.keys(editingUsers).length} utilisateur(s) mis à jour.`);}}catch(error){console.error('Erreur lors de la sauvegarde:',error);setError('Erreur lors de la sauvegarde');alert('Erreur lors de la sauvegarde des modifications. Veuillez réessayer.');throw error;}finally{setLoading(false);}};const testFirebaseConnection=async()=>{try{// Test minimal de connexion\nconst testDocRef=doc(db,'_test','connection');const timestamp=await getDoc(testDocRef);console.log('✅ Connexion Firebase réussie');}catch(error){console.error('❌ Erreur de connexion Firebase:',error);}};console.log('🌍 Environnement actuel:',{nodeEnv:process.env.NODE_ENV,isDevelopment:process.env.NODE_ENV==='development'});const addNewUserRow=()=>{// Forcer l'activation du mode édition\nif(!editMode){setEditMode(true);}// Initialiser un nouvel utilisateur temporaire\nsetNewUser({id:`temp-${Date.now()}`,nom:'',email:'',role:roles.length>0?roles[0].name:'Utilisateur',pole:'',statut:'Actif',identifiant:'',permissions:[]});// Forcer la mise à jour du composant\nsetUpdate(prev=>prev+1);// Ajouter un délai pour permettre le rendu\nsetTimeout(()=>{const firstInput=document.querySelector('.user-management-table .new-user-row input');if(firstInput){firstInput.focus();}},100);};// Modification de la méthode de confirmation d'annulation\nconst handleCancelEdit=()=>{if(window.confirm(\"Êtes-vous sûr de vouloir annuler toutes les modifications ?\")){setEditingUsers({});setNewUser(null);setSelectedUsers([]);setEditMode(false);}};// Fonction pour convertir ID de pôle en nom\nconst getPoleNameById=poleId=>{if(!poleId)return'-';const pole=poles.find(p=>p.id===poleId);return pole?pole.nom:poleId;};// Fonction pour gérer le changement de pôle\nconst handlePoleChange=pole=>{setSelectedPole(pole);};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Chargement des utilisateurs...\"})]});}return/*#__PURE__*/_jsx(ProtectedRoute,{userRole:(currentUser===null||currentUser===void 0?void 0:currentUser.role)||'',allowedRoles:['admin','manager'],requiredPermissions:['users.view'],pageName:PAGES.USER_MANAGEMENT,roles:roles,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Gestion des utilisateurs\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sticky-header-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:editMode?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button button-save\",onClick:saveAllChanges,disabled:loading||selectedUsers.length===0&&!newUser,style:{backgroundColor:'#4CAF50',// Vert\ncolor:'white',fontWeight:'bold'},title:\"Enregistrer les modifications\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),\" Enr. \",selectedUsers.length>0||newUser?`(${selectedUsers.length}${newUser?`+1`:''})`:'']}),/*#__PURE__*/_jsxs(\"button\",{className:\"button button-secondary\",onClick:handleCancelEdit,style:{marginLeft:'5px'},disabled:loading,title:\"Annuler les modifications\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),\" Annuler\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:addNewUserRow,style:{marginLeft:'5px',backgroundColor:'#FF9800',// Orange\ncolor:'white',fontWeight:'bold'},disabled:loading,title:\"Ajouter un nouvel utilisateur\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\" Ajouter\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button button-danger\",onClick:handleDeleteSelected,disabled:selectedUsers.length===0||loading,style:{marginLeft:'5px',backgroundColor:'#f44336',color:'white',fontWeight:'bold'},title:\"Supprimer les utilisateurs s\\xE9lectionn\\xE9s\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash-alt\"}),\" Sup. (\",selectedUsers.length,\")\"]})]}):/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:toggleEditMode,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),\" Modifier\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-search-container\",style:{marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"quick-search-input\",placeholder:\"Recherche rapide...\",value:quickSearch,onChange:e=>setQuickSearch(e.target.value),disabled:loading}),/*#__PURE__*/_jsx(\"div\",{className:\"pole-filter\",children:/*#__PURE__*/_jsx(PoleFilter,{onPoleChange:handlePoleChange,selectedPole:selectedPole,label:\"Filtrer par p\\xF4le\",className:\"pole-filter-component\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"users-table-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"results-info\",children:/*#__PURE__*/_jsxs(\"p\",{children:[filteredUsers.length,\" r\\xE9sultat(s) trouv\\xE9(s)\",quickSearch?` pour la recherche \"${quickSearch}\"`:'']})}),/*#__PURE__*/_jsxs(\"table\",{className:`data-table user-management-table ${editMode?'editing':''}`,style:{fontSize:'0.8rem'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:'50px'},children:editMode?'Sélection':''}),/*#__PURE__*/_jsx(\"th\",{children:\"Nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"UID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"R\\xF4le\"}),/*#__PURE__*/_jsx(\"th\",{children:\"P\\xF4le\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Statut\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[editMode&&newUser&&/*#__PURE__*/_jsxs(\"tr\",{className:\"new-user-row\",children:[/*#__PURE__*/_jsx(\"td\",{style:{display:'none'}}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newUser.nom||'',onChange:e=>handleNewUserChange('nom',e.target.value),className:\"inline-edit-input\",placeholder:\"Nom\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:newUser.email||'',onChange:e=>handleNewUserChange('email',e.target.value),className:\"inline-edit-input\",placeholder:\"Email\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newUser.identifiant||'',onChange:e=>handleNewUserChange('identifiant',e.target.value),className:\"inline-edit-input\",placeholder:\"Identifiant\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:newUser.role||'',onChange:e=>handleNewUserChange('role',e.target.value),className:\"inline-edit-select\",title:\"R\\xF4le de l'utilisateur\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner un r\\xF4le\"}),roles.filter(role=>role.name!=='Administrateur').map(role=>/*#__PURE__*/_jsx(\"option\",{value:role.name,children:role.name},role.id))]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(PoleSelector,{value:newUser.pole||'',onChange:value=>handleNewUserChange('pole',value),placeholder:\"S\\xE9lectionner un p\\xF4le\",style:{width:'100%'},showSearch:true,allowClear:true,title:\"P\\xF4le de l'utilisateur\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:newUser.statut||'Actif',onChange:e=>handleNewUserChange('statut',e.target.value),className:\"inline-edit-select\",title:\"Statut de l'utilisateur\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Actif\",children:\"Actif\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Inactif\",children:\"Inactif\"})]})}),/*#__PURE__*/_jsx(\"td\",{})]},newUser.id),filteredUsers.map(user=>{var _editingUsers,_editingUsers2,_editingUsers3,_roles$find,_editingUsers4;return/*#__PURE__*/_jsxs(\"tr\",{className:selectedUsers.includes(user.id)?'selected-row':'',children:[editMode&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedUsers.includes(user.id),onChange:()=>handleUserSelect(user.id),title:\"S\\xE9lectionner cet utilisateur\",\"aria-label\":\"S\\xE9lectionner cet utilisateur\"})}),/*#__PURE__*/_jsx(\"td\",{children:editMode?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:((_editingUsers=editingUsers[user.id])===null||_editingUsers===void 0?void 0:_editingUsers.nom)||user.nom,onChange:e=>handleEditChange(user.id,'nom',e.target.value),className:\"inline-edit-input\",title:\"Nom de l'utilisateur\",\"aria-label\":\"Modifier le nom de l'utilisateur\",placeholder:\"Nom\"}):user.nom}),/*#__PURE__*/_jsx(\"td\",{children:editMode?/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:((_editingUsers2=editingUsers[user.id])===null||_editingUsers2===void 0?void 0:_editingUsers2.email)||user.email,onChange:e=>handleEditChange(user.id,'email',e.target.value),className:\"inline-edit-input\",title:\"Email de l'utilisateur\",\"aria-label\":\"Modifier l'email de l'utilisateur\",placeholder:\"Email\"}):user.email}),/*#__PURE__*/_jsx(\"td\",{children:editMode?/*#__PURE__*/_jsx(\"span\",{className:\"uid-display\",children:user.email==='mickael.volle@inovie.fr'?'admin-mickael-volle':user.identifiant==='admin'?'admin-system':user.uid||user.identifiant||'Non disponible'}):/*#__PURE__*/_jsx(\"span\",{className:\"uid-display\",children:user.email==='mickael.volle@inovie.fr'?'admin-mickael-volle':user.identifiant==='admin'?'admin-system':user.uid||user.identifiant||'Non disponible'})}),/*#__PURE__*/_jsx(\"td\",{children:editMode?/*#__PURE__*/_jsx(\"select\",{value:((_editingUsers3=editingUsers[user.id])===null||_editingUsers3===void 0?void 0:_editingUsers3.role)||user.role,onChange:e=>handleEditChange(user.id,'role',e.target.value),className:\"inline-edit-select\",title:\"R\\xF4le de l'utilisateur\",\"aria-label\":\"Modifier le r\\xF4le de l'utilisateur\",disabled:user.email==='mickael.volle@inovie.fr',children:roles.filter(role=>{// Montrer le rôle Administrateur seulement si l'utilisateur l'a déjà\nif(role.name==='Administrateur'){return user.role==='Administrateur';}return true;}).map(role=>/*#__PURE__*/_jsx(\"option\",{value:role.name,children:role.name},role.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"role-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"role-name\",children:user.role}),/*#__PURE__*/_jsx(\"span\",{className:\"role-description\",children:(_roles$find=roles.find(r=>r.name===user.role))===null||_roles$find===void 0?void 0:_roles$find.description})]})}),/*#__PURE__*/_jsx(\"td\",{children:editMode?/*#__PURE__*/_jsx(PoleSelector,{value:((_editingUsers4=editingUsers[user.id])===null||_editingUsers4===void 0?void 0:_editingUsers4.pole)||user.pole||'',onChange:value=>handleEditChange(user.id,'pole',value),placeholder:\"S\\xE9lectionner un p\\xF4le\",style:{width:'100%'},showSearch:true,allowClear:true,title:\"P\\xF4le de l'utilisateur\"}):getPoleNameById(user.pole)}),/*#__PURE__*/_jsx(\"td\",{children:editingUsers[user.id]&&editMode?/*#__PURE__*/_jsxs(\"select\",{value:editingUsers[user.id].statut||'',onChange:e=>handleEditChange(user.id,'statut',e.target.value),className:\"inline-edit-select\",title:\"Statut de l'utilisateur\",\"aria-label\":\"Modifier le statut de l'utilisateur\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Actif\",children:\"Actif\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Inactif\",children:\"Inactif\"})]}):/*#__PURE__*/_jsx(\"span\",{className:getStatusClass(user.statut),children:user.statut||'Non défini'})}),/*#__PURE__*/_jsx(\"td\",{children:editMode&&/*#__PURE__*/_jsxs(\"button\",{className:\"reset-password-button\",onClick:()=>handleResetPassword(user.email),title:\"R\\xE9initialiser le mot de passe de l'utilisateur\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-key\"}),\" R\\xE9initialiser mot de passe\"]})})]},user.id);})]})]})]})]})});};export default UserManagement;","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","updateDoc","deleteDoc","doc","getDoc","addDoc","sendPasswordResetEmail","db","auth","PRODUCTION_URL","createUserWithoutSignOut","RoleService","useAuth","ProtectedRoute","PAGES","PoleSelector","usePoles","PoleFilter","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UserManagement","users","setUsers","roles","setRoles","loading","setLoading","error","setError","editMode","setEditMode","editingUsers","setEditingUsers","newUser","setNewUser","selectedUsers","setSelectedUsers","isAdmin","setIsAdmin","update","setUpdate","quickSearch","setQuickSearch","filteredUsers","setFilteredUsers","selectedPole","setSelectedPole","roleService","getInstance","currentUser","hasPermission","poles","initialize","fetchedRoles","Promise","all","getRoles","fetchUsers","err","checkAdminStatus","results","filter","user","pole","trim","searchTerm","toLowerCase","nom","includes","email","identifiant","role","console","log","hasUsersViewPermission","hasUsersCreatePermission","hasUsersEditPermission","hasUsersDeletePermission","userRole","userPermissions","permissions","canAccessUserManagement","usersCollection","usersSnapshot","usersList","docs","map","data","uid","id","handleResetPassword","adminEmail","resetActionCodeSettings","url","encodeURIComponent","handleCodeInApp","alert","name","code","message","stack","errorMessage","toggleEditMode","initialEditState","forEach","window","confirm","saveAllChanges","then","catch","createDefaultUser","statut","toFullUser","partialUser","handleNewUserChange","field","value","prev","handleAddUser","userDraft","selectedRole","find","r","userToAdd","dateCreation","Date","toISOString","dateModification","userRef","prevUsers","handleEditChange","userId","u","getStatusClass","handleUserSelect","handleDeleteSelected","length","selectedUsersList","deletePromises","updatedUsers","batch","Object","prototype","hasOwnProperty","call","adminRole","originalUser","warn","updateData","push","newUserPromise","userToSave","result","success","docId","Error","updateResults","allSettled","newUserResults","fulfilled","status","rejected","keys","testFirebaseConnection","testDocRef","timestamp","nodeEnv","process","env","NODE_ENV","isDevelopment","addNewUserRow","now","setTimeout","firstInput","document","querySelector","focus","handleCancelEdit","getPoleNameById","poleId","p","handlePoleChange","className","children","allowedRoles","requiredPermissions","pageName","USER_MANAGEMENT","onClick","disabled","style","backgroundColor","color","fontWeight","title","marginLeft","marginTop","type","placeholder","onChange","e","target","onPoleChange","label","fontSize","width","display","showSearch","allowClear","_editingUsers","_editingUsers2","_editingUsers3","_roles$find","_editingUsers4","checked","description"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/UserManagement.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { collection, getDocs, updateDoc, deleteDoc, doc, getDoc, addDoc } from 'firebase/firestore';\r\nimport { sendPasswordResetEmail } from 'firebase/auth';\r\nimport { db, auth, PRODUCTION_URL } from '../config/firebase';\r\nimport './UserManagement.css';\r\nimport { createUserWithoutSignOut } from '../services/userService';\r\nimport { RoleService } from '../services/RoleService';\r\nimport { Role } from '../types/roles';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport { PAGES } from '../utils/pageAccessUtils';\r\nimport { roles } from '../services/RoleService';\r\nimport { User as ImportedUser } from '../types/User';\r\nimport { Role as ImportedRole } from '../types/roles';\r\nimport { RolePermissions } from '../utils/permissions';\r\nimport { UserRole } from '../types/roles';\r\nimport PoleSelector from './PoleSelector';\r\nimport { usePoles } from '../services/PoleService';\r\nimport PoleFilter from './PoleFilter';\r\n\r\n// Étendre l'interface User importée\r\ntype User = ImportedUser & {\r\n  dateCreation?: string;\r\n  dateModification?: string;\r\n};\r\n\r\nconst UserManagement: React.FC = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editingUsers, setEditingUsers] = useState<{[key: string]: User}>({});\r\n  const [newUser, setNewUser] = useState<User | null>(null);\r\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [update, setUpdate] = useState(0);\r\n  \r\n  // État pour la recherche rapide\r\n  const [quickSearch, setQuickSearch] = useState<string>('');\r\n  const [filteredUsers, setFilteredUsers] = useState<User[]>([]);\r\n\r\n  // Ajouter un état pour le filtre par pôle\r\n  const [selectedPole, setSelectedPole] = useState<string>('');\r\n\r\n  const roleService = RoleService.getInstance();\r\n  const { currentUser, hasPermission } = useAuth();\r\n  const { poles } = usePoles();\r\n\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      try {\r\n        const [fetchedRoles] = await Promise.all([\r\n          roleService.getRoles(),\r\n          fetchUsers()\r\n        ]);\r\n        setRoles(fetchedRoles);\r\n      } catch (err) {\r\n        setError('Erreur lors de l\\'initialisation');\r\n      }\r\n    };\r\n\r\n    initialize();\r\n    checkAdminStatus();\r\n  }, []);\r\n  \r\n  // Initialiser les utilisateurs filtrés au chargement\r\n  useEffect(() => {\r\n    setFilteredUsers(users);\r\n  }, [users]);\r\n\r\n  // Effet pour filtrer les utilisateurs en fonction de la recherche rapide et du pôle sélectionné\r\n  useEffect(() => {\r\n    let results = users;\r\n\r\n    // Filtrer par pôle si un pôle est sélectionné\r\n    if (selectedPole) {\r\n      results = results.filter(user => user.pole === selectedPole);\r\n    }\r\n\r\n    // Ensuite, filtrer par recherche rapide\r\n    if (quickSearch.trim()) {\r\n      const searchTerm = quickSearch.toLowerCase().trim();\r\n      results = results.filter(user => {\r\n        return (\r\n          (user.nom || '').toLowerCase().includes(searchTerm) ||\r\n          (user.email || '').toLowerCase().includes(searchTerm) ||\r\n          (user.identifiant || '').toLowerCase().includes(searchTerm) ||\r\n          (user.role || '').toLowerCase().includes(searchTerm) ||\r\n          (user.pole || '').toLowerCase().includes(searchTerm)\r\n        );\r\n      });\r\n    }\r\n\r\n    setFilteredUsers(results);\r\n  }, [quickSearch, users, selectedPole]);\r\n\r\n  useEffect(() => {\r\n    console.log('🔐 Permissions de l\\'utilisateur courant:', {\r\n      user: currentUser,\r\n      hasUsersViewPermission: hasPermission('users.view'),\r\n      hasUsersCreatePermission: hasPermission('users.create'),\r\n      hasUsersEditPermission: hasPermission('users.edit'),\r\n      hasUsersDeletePermission: hasPermission('users.delete'),\r\n      userRole: currentUser?.role,\r\n      userPermissions: currentUser?.permissions\r\n    });\r\n\r\n    // Vérifier si l'utilisateur a accès à la page de gestion des utilisateurs\r\n    const canAccessUserManagement = \r\n      hasPermission('users.view') || \r\n      currentUser?.role === 'Administrateur';\r\n\r\n    console.log('🚪 Accès à la gestion des utilisateurs:', canAccessUserManagement);\r\n  }, [currentUser]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const usersCollection = collection(db, 'users');\r\n      const usersSnapshot = await getDocs(usersCollection);\r\n      const usersList = usersSnapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        // S'assurer que l'UID est défini pour tous les utilisateurs\r\n        if (!data.uid && data.identifiant) {\r\n          // Si l'UID n'est pas défini mais que l'identifiant existe, utiliser l'identifiant comme UID\r\n          data.uid = data.identifiant;\r\n        }\r\n        return {\r\n          id: doc.id,\r\n          ...data\r\n        } as User;\r\n      });\r\n      \r\n      setUsers(usersList);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Erreur lors du chargement des utilisateurs');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const checkAdminStatus = () => {\r\n    const currentUser = auth.currentUser;\r\n    setIsAdmin(currentUser?.email === 'mickael.volle@inovie.fr');\r\n  };\r\n\r\n  const handleResetPassword = async (email: string) => {\r\n    console.log('🔐 Début de handleResetPassword');\r\n    console.log('Email reçu:', email);\r\n\r\n    setError(null);\r\n\r\n    try {\r\n        if (!email || email.trim() === '') {\r\n            console.error('❌ Email invalide');\r\n            setError('L\\'email est invalide');\r\n            return;\r\n        }\r\n\r\n        console.log('🔍 Tentative d\\'envoi de l\\'email de réinitialisation');\r\n        \r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser || !currentUser.email) {\r\n            console.error('❌ Aucun utilisateur connecté ou email non disponible');\r\n            setError('Vous devez être connecté pour effectuer cette action');\r\n            return;\r\n        }\r\n        \r\n        const adminEmail = currentUser.email;\r\n        console.log('📧 Email de l\\'administrateur connecté:', adminEmail);\r\n        console.log('📧 Email de l\\'utilisateur à réinitialiser:', email);\r\n        \r\n        // Configuration personnalisée pour l'email de réinitialisation Firebase\r\n        const resetActionCodeSettings = {\r\n            url: PRODUCTION_URL + `/login?email=${encodeURIComponent(email)}&reset=true`,\r\n            handleCodeInApp: true\r\n        };\r\n        \r\n        console.log('📝 URL de redirection configurée:', resetActionCodeSettings.url);\r\n        \r\n        // Envoyer l'email de réinitialisation Firebase\r\n        await sendPasswordResetEmail(auth, email, resetActionCodeSettings);\r\n        console.log('📧 Email de réinitialisation Firebase envoyé avec succès');\r\n        \r\n        console.log('✅ Processus de réinitialisation de mot de passe terminé avec succès');\r\n        alert(`\r\n            ✅ Réinitialisation de mot de passe effectuée !\r\n            \r\n            Un email de réinitialisation a été envoyé à ${email}.\r\n            \r\n            L'utilisateur pourra :\r\n            1. Cliquer sur le lien dans l'email pour définir son mot de passe\r\n            2. Utiliser la fonction \"Mot de passe oublié\" sur la page de connexion\r\n            \r\n            ATTENTION : Le lien dans l'email est valable pendant 1 heure seulement.\r\n        `.trim());\r\n    } catch (error: any) {\r\n        console.error('❌ ERREUR COMPLETE lors de la réinitialisation du mot de passe:', error);\r\n        \r\n        console.error('Détails de l\\'erreur:', {\r\n            name: error.name,\r\n            code: error.code,\r\n            message: error.message,\r\n            stack: error.stack\r\n        });\r\n        \r\n        let errorMessage = 'Une erreur est survenue';\r\n        switch (error.code) {\r\n            case 'auth/invalid-email':\r\n                errorMessage = 'Format d\\'email invalide';\r\n                break;\r\n            case 'auth/user-not-found':\r\n                errorMessage = 'Aucun utilisateur trouvé avec cet email';\r\n                break;\r\n            case 'auth/missing-email':\r\n                errorMessage = 'Aucun email n\\'a été fourni';\r\n                break;\r\n            case 'auth/too-many-requests':\r\n                errorMessage = 'Trop de tentatives. Veuillez réessayer plus tard.';\r\n                break;\r\n            default:\r\n                errorMessage = `Impossible d'envoyer l'email de réinitialisation : ${error.message}`;\r\n        }\r\n        \r\n        console.error('❌ Message d\\'erreur:', errorMessage);\r\n        setError(errorMessage);\r\n        \r\n        alert(errorMessage);\r\n    }\r\n};\r\n\r\n  const toggleEditMode = () => {\r\n    if (!editMode) {\r\n      // Si on entre en mode édition, initialiser l'état d'édition avec les utilisateurs actuels\r\n      console.log(\"Entrée en mode édition\");\r\n      const initialEditState: {[key: string]: User} = {};\r\n      users.forEach(user => {\r\n        initialEditState[user.id!] = {...user};\r\n      });\r\n      setEditingUsers(initialEditState);\r\n      setNewUser(null);\r\n      // Activer le mode édition\r\n      setEditMode(true);\r\n    } else {\r\n      // Si on quitte le mode édition, demander confirmation\r\n      if (window.confirm(\"Voulez-vous enregistrer les modifications ?\")) {\r\n        console.log(\"Sauvegarde des modifications avant de quitter le mode édition\");\r\n        // Sauvegarder les modifications et quitter le mode édition après la sauvegarde\r\n        saveAllChanges()\r\n          .then(() => {\r\n            // Désélectionner tout et quitter le mode édition\r\n            setSelectedUsers([]);\r\n            setNewUser(null);\r\n            setEditMode(false);\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Erreur lors de la sauvegarde:\", error);\r\n            // Laisser l'utilisateur en mode édition en cas d'erreur\r\n            alert(\"Une erreur est survenue lors de la sauvegarde. Veuillez réessayer.\");\r\n          });\r\n      } else {\r\n        console.log(\"Annulation des modifications et sortie du mode édition\");\r\n        // Annuler les modifications et quitter le mode édition\r\n        setEditingUsers({});\r\n        setNewUser(null);\r\n        setSelectedUsers([]);\r\n        setEditMode(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fonction utilitaire pour créer un utilisateur par défaut\r\n  const createDefaultUser = (): User => ({\r\n    identifiant: '',\r\n    email: '',\r\n    nom: '',\r\n    role: 'Utilisateur',\r\n    pole: '',\r\n    statut: 'Actif',\r\n    permissions: []\r\n  });\r\n\r\n  // Fonction pour convertir un objet partiel en User complet\r\n  const toFullUser = (partialUser: Partial<User> | null | undefined): User => {\r\n    if (!partialUser) {\r\n      return createDefaultUser();\r\n    }\r\n\r\n    return {\r\n      ...createDefaultUser(),\r\n      ...partialUser,\r\n      nom: partialUser.nom || '',\r\n      email: partialUser.email || '',\r\n      role: partialUser.role || 'Utilisateur',\r\n      pole: partialUser.pole || '',\r\n      statut: partialUser.statut || 'Actif',\r\n      identifiant: partialUser.identifiant || '',\r\n      permissions: partialUser.permissions || []\r\n    };\r\n  };\r\n\r\n  // Modifier handleNewUserChange pour utiliser toFullUser\r\n  const handleNewUserChange = (field: keyof User, value: string) => {\r\n    setNewUser(prev => {\r\n      const currentUser = toFullUser(prev);\r\n      return {\r\n        ...currentUser,\r\n        [field]: value\r\n      };\r\n    });\r\n  };\r\n\r\n  // Modifier handleAddUser pour gérer les types\r\n  const handleAddUser = async () => {\r\n    // Vérifier que newUser n'est pas null\r\n    if (!newUser) {\r\n      console.error('Aucun nouvel utilisateur à ajouter');\r\n      return;\r\n    }\r\n\r\n    // Convertir le nouvel utilisateur en objet User complet\r\n    const userDraft = toFullUser(newUser);\r\n\r\n    try {\r\n      // Vérifier que les champs requis sont remplis\r\n      if (!userDraft.nom || !userDraft.email || !userDraft.role) {\r\n        console.error('Tous les champs requis doivent être remplis');\r\n        return;\r\n      }\r\n\r\n      // Trouver le rôle sélectionné et ses permissions\r\n      const selectedRole = roles.find(r => r.name === userDraft.role);\r\n      if (!selectedRole) {\r\n        console.error('Rôle non trouvé');\r\n        return;\r\n      }\r\n\r\n      // Créer l'utilisateur avec les permissions du rôle\r\n      const userToAdd: User = {\r\n        ...userDraft,\r\n        permissions: selectedRole.permissions,\r\n        dateCreation: new Date().toISOString(),\r\n        dateModification: new Date().toISOString()\r\n      };\r\n\r\n      // Ajouter l'utilisateur à Firestore\r\n      const userRef = await addDoc(collection(db, 'users'), userToAdd);\r\n\r\n      // Réinitialiser le formulaire\r\n      setNewUser(null);\r\n      setUsers(prevUsers => [...prevUsers, { ...userToAdd, id: userRef.id }]);\r\n\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'ajout de l\\'utilisateur:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditChange = async (userId: string, field: keyof User, value: string) => {\r\n    if (!userId) return;\r\n    \r\n    setEditingUsers(prev => {\r\n      const currentUser = prev[userId] || { ...users.find(u => u.id === userId) || {} };\r\n      \r\n      // Si le champ modifié est le rôle, récupérer les permissions associées\r\n      if (field === 'role') {\r\n        const selectedRole = roles.find(r => r.name === value);\r\n        return {\r\n          ...prev,\r\n          [userId]: {\r\n            ...currentUser,\r\n            [field]: value,\r\n            permissions: selectedRole?.permissions || []\r\n          }\r\n        };\r\n      }\r\n      \r\n      return {\r\n        ...prev,\r\n        [userId]: {\r\n          ...currentUser,\r\n          [field]: value\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const getStatusClass = (statut: string | undefined) => {\r\n    if (!statut) return '';\r\n    \r\n    switch (statut.toLowerCase()) {\r\n      case 'actif':\r\n        return 'livré';\r\n      case 'inactif':\r\n        return 'en-cours';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const handleUserSelect = (userId: string) => {\r\n    setSelectedUsers(prev => \r\n      prev.includes(userId) \r\n        ? prev.filter(id => id !== userId) \r\n        : [...prev, userId]\r\n    );\r\n  };\r\n\r\n  const handleDeleteSelected = async () => {\r\n    try {\r\n      // Vérifier s'il y a des utilisateurs sélectionnés\r\n      if (selectedUsers.length === 0) {\r\n        alert('❌ Aucun utilisateur sélectionné');\r\n        return;\r\n      }\r\n      \r\n      // Demander confirmation avant de supprimer\r\n      if (!window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedUsers.length} utilisateur(s) ?\r\n      \r\n⚠️ ATTENTION: Les utilisateurs seront supprimés uniquement de la base de données Firestore, mais PAS de Firebase Authentication.\r\nPour une suppression complète, contactez l'administrateur système.`)) {\r\n        return;\r\n      }\r\n      \r\n      // Récupérer les utilisateurs sélectionnés\r\n      const selectedUsersList = users.filter(user => selectedUsers.includes(user.id!));\r\n      \r\n      console.log(`🔄 Tentative de suppression de ${selectedUsers.length} utilisateurs de Firestore`);\r\n      \r\n      // Supprimer les utilisateurs de Firestore uniquement\r\n      const deletePromises = selectedUsers.map(userId => \r\n        deleteDoc(doc(db, 'users', userId))\r\n      );\r\n      \r\n      // Attendre que toutes les suppressions soient terminées\r\n      await Promise.all(deletePromises);\r\n      \r\n      // Mettre à jour l'état local\r\n      const updatedUsers = users.filter(user => !selectedUsers.includes(user.id!));\r\n      setUsers(updatedUsers);\r\n      setSelectedUsers([]);\r\n      \r\n      // Afficher un message de succès avec un avertissement\r\n      alert(`\r\n        ✅ ${selectedUsers.length} utilisateur(s) supprimé(s) de la base de données Firestore avec succès.\r\n        \r\n        ⚠️ IMPORTANT: Les comptes utilisateurs n'ont PAS été supprimés de Firebase Authentication.\r\n        Si nécessaire, ces comptes devront être supprimés manuellement par un administrateur\r\n        depuis la console Firebase.\r\n      `.trim());\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Erreur lors de la suppression des utilisateurs:', error);\r\n      setError('Erreur lors de la suppression des utilisateurs');\r\n      alert('❌ Erreur lors de la suppression des utilisateurs');\r\n    }\r\n  };\r\n\r\n  const saveAllChanges = async (): Promise<void> => {\r\n    try {\r\n      setLoading(true);\r\n      const batch: Promise<any>[] = [];\r\n\r\n      // Sauvegarder les modifications d'utilisateurs existants\r\n      for (const userId in editingUsers) {\r\n        if (Object.prototype.hasOwnProperty.call(editingUsers, userId)) {\r\n          const user = editingUsers[userId];\r\n          \r\n          // Empêcher la promotion d'un utilisateur au rôle d'Administrateur\r\n          const adminRole = roles.find(r => r.name === 'Administrateur');\r\n          if (user.role === 'Administrateur' && adminRole && user.id) {\r\n            // Vérifier si l'utilisateur n'est pas déjà dans les permissions d'admin\r\n            if (!adminRole.permissions.includes(user.id)) {\r\n              // Si l'utilisateur n'était pas déjà Administrateur, réinitialiser au rôle précédent\r\n              const originalUser = users.find(u => u.id === userId);\r\n              if (originalUser && originalUser.role !== 'Administrateur') {\r\n                user.role = originalUser.role;\r\n                console.warn(`Tentative non autorisée de promotion au rôle d'Administrateur pour l'utilisateur ${user.nom || user.email}`);\r\n                alert(`Le rôle \"Administrateur\" ne peut pas être attribué via cette interface. L'utilisateur ${user.nom || user.email} conservera son rôle ${user.role}.`);\r\n              }\r\n            }\r\n          }\r\n          \r\n          if (!user.dateModification) {\r\n            user.dateModification = new Date().toISOString();\r\n          }\r\n          \r\n          const userRef = doc(db, 'users', userId);\r\n          \r\n          // Créer un objet avec uniquement les champs modifiables\r\n          const { id, uid, ...updateData } = user;\r\n          batch.push(updateDoc(userRef, updateData));\r\n        }\r\n      }\r\n      \r\n      // Ajouter le nouvel utilisateur si présent\r\n      let newUserPromise: Promise<any> | null = null;\r\n      if (newUser) {\r\n        console.log(\"Préparation de l'ajout d'un nouvel utilisateur:\", newUser);\r\n        \r\n        // Vérifier que tous les champs obligatoires sont remplis\r\n        if (!newUser.email || !newUser.nom) {\r\n          console.warn(\"Champs obligatoires manquants pour le nouvel utilisateur\");\r\n          // Ne pas bloquer la sauvegarde si le nouvel utilisateur est incomplet\r\n          setNewUser(null);\r\n        } else {\r\n          // Empêcher l'attribution du rôle Administrateur à un nouvel utilisateur\r\n          if (newUser.role === 'Administrateur') {\r\n            console.warn(\"Tentative non autorisée d'attribution du rôle Administrateur à un nouvel utilisateur\");\r\n            newUser.role = 'Utilisateur'; // Assigner un rôle par défaut\r\n            alert('Le rôle \"Administrateur\" ne peut pas être attribué via cette interface. Le nouvel utilisateur sera créé avec le rôle \"Utilisateur\".');\r\n          }\r\n          \r\n          newUserPromise = (async () => {\r\n            try {\r\n              // Préparer les données de l'utilisateur avec des valeurs par défaut sûres\r\n              const userToSave: User = {\r\n                identifiant: newUser.identifiant || '',\r\n                email: newUser.email || '',\r\n                nom: newUser.nom || '',\r\n                role: newUser.role || 'Utilisateur',\r\n                pole: newUser.pole || '',\r\n                statut: newUser.statut || 'Actif',\r\n                permissions: newUser.permissions || []\r\n              };\r\n              \r\n              // Appeler notre service pour créer l'utilisateur\r\n              const result = await createUserWithoutSignOut(userToSave);\r\n              \r\n              if (result.success) {\r\n                console.log(`Nouvel utilisateur ajouté avec l'ID: ${result.docId}`);\r\n                return result.docId;\r\n              } else {\r\n                throw result.error || new Error('La création de l\\'utilisateur a échoué');\r\n              }\r\n            } catch (error) {\r\n              console.error(`Erreur lors de l'ajout du nouvel utilisateur:`, error);\r\n              throw error;\r\n            }\r\n          })();\r\n        }\r\n      }\r\n      \r\n      // Attendre que toutes les opérations soient terminées\r\n      const updateResults = await Promise.allSettled(batch);\r\n      const newUserResults = newUserPromise ? await Promise.allSettled([newUserPromise]) : [];\r\n      const results = [...updateResults, ...newUserResults];\r\n      \r\n      // Vérifier les résultats\r\n      const fulfilled = results.filter(result => result.status === 'fulfilled').length;\r\n      const rejected = results.filter(result => result.status === 'rejected').length;\r\n      \r\n      console.log(`Opérations terminées: ${fulfilled} réussies, ${rejected} échouées`);\r\n      \r\n      if (rejected > 0) {\r\n        console.warn(\"Certaines opérations ont échoué. Voir les erreurs ci-dessus.\");\r\n      }\r\n      \r\n      // Rafraîchir les données\r\n      await fetchUsers();\r\n      \r\n      // Réinitialiser les états\r\n      setEditingUsers({});\r\n      setNewUser(null);\r\n      \r\n      // Désactiver le mode édition après sauvegarde réussie\r\n      setEditMode(false);\r\n      setSelectedUsers([]);\r\n      \r\n      if (rejected > 0) {\r\n        alert(`Modifications partiellement enregistrées. ${rejected} opérations ont échoué.`);\r\n      } else {\r\n        alert(`Modifications enregistrées avec succès. ${Object.keys(editingUsers).length} utilisateur(s) mis à jour.`);\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error('Erreur lors de la sauvegarde:', error);\r\n      setError('Erreur lors de la sauvegarde');\r\n      alert('Erreur lors de la sauvegarde des modifications. Veuillez réessayer.');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const testFirebaseConnection = async () => {\r\n    try {\r\n        // Test minimal de connexion\r\n        const testDocRef = doc(db, '_test', 'connection');\r\n        const timestamp = await getDoc(testDocRef);\r\n        console.log('✅ Connexion Firebase réussie');\r\n    } catch (error) {\r\n        console.error('❌ Erreur de connexion Firebase:', error);\r\n    }\r\n  };\r\n\r\n  console.log('🌍 Environnement actuel:', {\r\n    nodeEnv: process.env.NODE_ENV,\r\n    isDevelopment: process.env.NODE_ENV === 'development'\r\n  });\r\n\r\n  const addNewUserRow = () => {\r\n    // Forcer l'activation du mode édition\r\n    if (!editMode) {\r\n      setEditMode(true);\r\n    }\r\n\r\n    // Initialiser un nouvel utilisateur temporaire\r\n    setNewUser({\r\n      id: `temp-${Date.now()}`,\r\n      nom: '',\r\n      email: '',\r\n      role: roles.length > 0 ? roles[0].name : 'Utilisateur',\r\n      pole: '',\r\n      statut: 'Actif',\r\n      identifiant: '',\r\n      permissions: []\r\n    });\r\n\r\n    // Forcer la mise à jour du composant\r\n    setUpdate(prev => prev + 1);\r\n\r\n    // Ajouter un délai pour permettre le rendu\r\n    setTimeout(() => {\r\n      const firstInput = document.querySelector('.user-management-table .new-user-row input') as HTMLInputElement;\r\n      if (firstInput) {\r\n        firstInput.focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  // Modification de la méthode de confirmation d'annulation\r\n  const handleCancelEdit = () => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir annuler toutes les modifications ?\")) {\r\n      setEditingUsers({});\r\n      setNewUser(null);\r\n      setSelectedUsers([]);\r\n      setEditMode(false);\r\n    }\r\n  };\r\n\r\n  // Fonction pour convertir ID de pôle en nom\r\n  const getPoleNameById = (poleId: string | undefined): string => {\r\n    if (!poleId) return '-';\r\n    const pole = poles.find(p => p.id === poleId);\r\n    return pole ? pole.nom : poleId;\r\n  };\r\n\r\n  // Fonction pour gérer le changement de pôle\r\n  const handlePoleChange = (pole: string) => {\r\n    setSelectedPole(pole);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Chargement des utilisateurs...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ProtectedRoute \r\n      userRole={currentUser?.role || ''} \r\n      allowedRoles={['admin', 'manager']} \r\n      requiredPermissions={['users.view']}\r\n      pageName={PAGES.USER_MANAGEMENT}\r\n      roles={roles}\r\n    >\r\n      <div>\r\n        <div className=\"section-header\">\r\n          <h2 className=\"section-title\">Gestion des utilisateurs</h2>\r\n        </div>\r\n\r\n        <div className=\"sticky-header-container\">\r\n          <div className=\"header-actions\">\r\n            {editMode ? (\r\n              <>\r\n                <button \r\n                  className=\"button button-save\" \r\n                  onClick={saveAllChanges}\r\n                  disabled={loading || (selectedUsers.length === 0 && !newUser)}\r\n                  style={{ \r\n                    backgroundColor: '#4CAF50', // Vert\r\n                    color: 'white',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                  title=\"Enregistrer les modifications\"\r\n                >\r\n                  <i className=\"fas fa-save\"></i> Enr. {selectedUsers.length > 0 || newUser ? \r\n                    `(${selectedUsers.length}${newUser ? `+1` : ''})` : \r\n                    ''}\r\n                </button>\r\n                <button \r\n                  className=\"button button-secondary\" \r\n                  onClick={handleCancelEdit}\r\n                  style={{ marginLeft: '5px' }}\r\n                  disabled={loading}\r\n                  title=\"Annuler les modifications\"\r\n                >\r\n                  <i className=\"fas fa-times\"></i> Annuler\r\n                </button>\r\n                <button \r\n                  className=\"button\" \r\n                  onClick={addNewUserRow}\r\n                  style={{ \r\n                    marginLeft: '5px',\r\n                    backgroundColor: '#FF9800', // Orange\r\n                    color: 'white',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                  disabled={loading}\r\n                  title=\"Ajouter un nouvel utilisateur\"\r\n                >\r\n                  <i className=\"fas fa-plus\"></i> Ajouter\r\n                </button>\r\n                <button \r\n                  className=\"button button-danger\" \r\n                  onClick={handleDeleteSelected}\r\n                  disabled={selectedUsers.length === 0 || loading}\r\n                  style={{ \r\n                    marginLeft: '5px',\r\n                    backgroundColor: '#f44336', \r\n                    color: 'white',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                  title=\"Supprimer les utilisateurs sélectionnés\"\r\n                >\r\n                  <i className=\"fas fa-trash-alt\"></i> Sup. ({selectedUsers.length})\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <button \r\n                className=\"button\" \r\n                onClick={toggleEditMode}\r\n              >\r\n                <i className=\"fas fa-edit\"></i> Modifier\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"quick-search-container\" style={{ marginTop: '10px' }}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"quick-search-input\"\r\n              placeholder=\"Recherche rapide...\"\r\n              value={quickSearch}\r\n              onChange={(e) => setQuickSearch(e.target.value)}\r\n              disabled={loading}\r\n            />\r\n            <div className=\"pole-filter\">\r\n              <PoleFilter\r\n                onPoleChange={handlePoleChange}\r\n                selectedPole={selectedPole}\r\n                label=\"Filtrer par pôle\"\r\n                className=\"pole-filter-component\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"users-table-container\">\r\n          <div className=\"results-info\">\r\n            <p>{filteredUsers.length} résultat(s) trouvé(s){quickSearch ? ` pour la recherche \"${quickSearch}\"` : ''}</p>\r\n          </div>\r\n          <table className={`data-table user-management-table ${editMode ? 'editing' : ''}`} style={{ fontSize: '0.8rem' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{width: '50px'}}>{editMode ? 'Sélection' : ''}</th>\r\n                <th>Nom</th>\r\n                <th>Email</th>\r\n                <th>UID</th>\r\n                <th>Rôle</th>\r\n                <th>Pôle</th>\r\n                <th>Statut</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Afficher d'abord les nouveaux utilisateurs */}\r\n              {editMode && newUser && (\r\n                <tr key={newUser.id} className=\"new-user-row\">\r\n                  <td style={{display: 'none'}}>\r\n                    {/* Cellule masquée pour maintenir l'alignement */}\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newUser.nom || ''}\r\n                      onChange={(e) => handleNewUserChange('nom', e.target.value)}\r\n                      className=\"inline-edit-input\"\r\n                      placeholder=\"Nom\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={newUser.email || ''}\r\n                      onChange={(e) => handleNewUserChange('email', e.target.value)}\r\n                      className=\"inline-edit-input\"\r\n                      placeholder=\"Email\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newUser.identifiant || ''}\r\n                      onChange={(e) => handleNewUserChange('identifiant', e.target.value)}\r\n                      className=\"inline-edit-input\"\r\n                      placeholder=\"Identifiant\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      value={newUser.role || ''}\r\n                      onChange={(e) => handleNewUserChange('role', e.target.value)}\r\n                      className=\"inline-edit-select\"\r\n                      title=\"Rôle de l'utilisateur\"\r\n                    >\r\n                      <option value=\"\">Sélectionner un rôle</option>\r\n                      {roles\r\n                        .filter(role => role.name !== 'Administrateur')\r\n                        .map(role => (\r\n                          <option key={role.id} value={role.name}>{role.name}</option>\r\n                        ))\r\n                      }\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    <PoleSelector\r\n                      value={newUser.pole || ''}\r\n                      onChange={(value) => handleNewUserChange('pole', value)}\r\n                      placeholder=\"Sélectionner un pôle\"\r\n                      style={{ width: '100%' }}\r\n                      showSearch\r\n                      allowClear\r\n                      title=\"Pôle de l'utilisateur\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      value={newUser.statut || 'Actif'}\r\n                      onChange={(e) => handleNewUserChange('statut', e.target.value)}\r\n                      className=\"inline-edit-select\"\r\n                      title=\"Statut de l'utilisateur\"\r\n                    >\r\n                      <option value=\"Actif\">Actif</option>\r\n                      <option value=\"Inactif\">Inactif</option>\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    {/* Le bouton de validation individuel a été supprimé car il est redondant avec le bouton Enregistrer du haut */}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              \r\n              {/* Ensuite afficher les utilisateurs existants */}\r\n              {filteredUsers.map((user) => (\r\n                <tr \r\n                  key={user.id} \r\n                  className={selectedUsers.includes(user.id!) ? 'selected-row' : ''}\r\n                >\r\n                  {editMode && (\r\n                    <td>\r\n                      <input \r\n                        type=\"checkbox\"\r\n                        checked={selectedUsers.includes(user.id!)}\r\n                        onChange={() => handleUserSelect(user.id!)}\r\n                        title=\"Sélectionner cet utilisateur\"\r\n                        aria-label=\"Sélectionner cet utilisateur\"\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  <td>\r\n                    {editMode ? (\r\n                      <input\r\n                        type=\"text\" \r\n                        value={editingUsers[user.id!]?.nom || user.nom}\r\n                        onChange={(e) => handleEditChange(user.id!, 'nom', e.target.value)}\r\n                        className=\"inline-edit-input\"\r\n                        title=\"Nom de l'utilisateur\"\r\n                        aria-label=\"Modifier le nom de l'utilisateur\"\r\n                        placeholder=\"Nom\"\r\n                      />\r\n                    ) : (\r\n                      user.nom\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode ? (\r\n                      <input\r\n                        type=\"email\"\r\n                        value={editingUsers[user.id!]?.email || user.email}\r\n                        onChange={(e) => handleEditChange(user.id!, 'email', e.target.value)}\r\n                        className=\"inline-edit-input\"\r\n                        title=\"Email de l'utilisateur\"\r\n                        aria-label=\"Modifier l'email de l'utilisateur\"\r\n                        placeholder=\"Email\"\r\n                      />\r\n                    ) : (\r\n                      user.email\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode ? (\r\n                      <span className=\"uid-display\">\r\n                        {user.email === 'mickael.volle@inovie.fr' ? 'admin-mickael-volle' : \r\n                         user.identifiant === 'admin' ? 'admin-system' : \r\n                         user.uid || user.identifiant || 'Non disponible'}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"uid-display\">\r\n                        {user.email === 'mickael.volle@inovie.fr' ? 'admin-mickael-volle' : \r\n                         user.identifiant === 'admin' ? 'admin-system' : \r\n                         user.uid || user.identifiant || 'Non disponible'}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode ? (\r\n                      <select\r\n                        value={editingUsers[user.id!]?.role || user.role}\r\n                        onChange={(e) => handleEditChange(user.id!, 'role', e.target.value)}\r\n                        className=\"inline-edit-select\"\r\n                        title=\"Rôle de l'utilisateur\"\r\n                        aria-label=\"Modifier le rôle de l'utilisateur\"\r\n                        disabled={user.email === 'mickael.volle@inovie.fr'}\r\n                      >\r\n                        {roles\r\n                          .filter(role => {\r\n                            // Montrer le rôle Administrateur seulement si l'utilisateur l'a déjà\r\n                            if (role.name === 'Administrateur') {\r\n                              return user.role === 'Administrateur';\r\n                            }\r\n                            return true;\r\n                          })\r\n                          .map(role => (\r\n                            <option key={role.id} value={role.name}>\r\n                              {role.name}\r\n                            </option>\r\n                          ))\r\n                        }\r\n                      </select>\r\n                    ) : (\r\n                      <div className=\"role-display\">\r\n                        <span className=\"role-name\">{user.role}</span>\r\n                        <span className=\"role-description\">\r\n                          {roles.find(r => r.name === user.role)?.description}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode ? (\r\n                      <PoleSelector\r\n                        value={editingUsers[user.id!]?.pole || user.pole || ''}\r\n                        onChange={(value) => handleEditChange(user.id!, 'pole', value)}\r\n                        placeholder=\"Sélectionner un pôle\"\r\n                        style={{ width: '100%' }}\r\n                        showSearch\r\n                        allowClear\r\n                        title=\"Pôle de l'utilisateur\"\r\n                      />\r\n                    ) : (\r\n                      getPoleNameById(user.pole)\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingUsers[user.id!] && editMode ? (\r\n                      <select\r\n                        value={editingUsers[user.id!].statut || ''}\r\n                        onChange={(e) => handleEditChange(user.id!, 'statut', e.target.value)}\r\n                        className=\"inline-edit-select\"\r\n                        title=\"Statut de l'utilisateur\"\r\n                        aria-label=\"Modifier le statut de l'utilisateur\"\r\n                      >\r\n                        <option value=\"Actif\">Actif</option>\r\n                        <option value=\"Inactif\">Inactif</option>\r\n                      </select>\r\n                    ) : (\r\n                      <span className={getStatusClass(user.statut)}>\r\n                        {user.statut || 'Non défini'}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode && (\r\n                      <button\r\n                        className=\"reset-password-button\"\r\n                        onClick={() => handleResetPassword(user.email)}\r\n                        title=\"Réinitialiser le mot de passe de l'utilisateur\"\r\n                      >\r\n                        <i className=\"fas fa-key\"></i> Réinitialiser mot de passe\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </ProtectedRoute>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}