{"ast":null,"code":"import { collection, query, where, getDocs, addDoc, updateDoc, deleteDoc, doc, getDoc } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { db } from '../config/firebase';\nimport { getStorage } from 'firebase/storage';\nclass VehicleService {\n  constructor() {\n    this.collection = collection(db, 'vehicles');\n    this.documentsCollection = collection(db, 'documents');\n    this.maintenanceCollection = collection(db, 'maintenance');\n    this.storage = getStorage();\n    this.storageBasePath = 'vehicles';\n    this.initialized = false;\n    // Données par défaut pour les véhicules\n    this.defaultVehicles = [{\n      brand: 'Renault',\n      model: 'Kangoo',\n      registrationNumber: 'GE-695-RT',\n      type: 'van',\n      status: 'active',\n      purchaseDate: '2020-01-01',\n      lastMaintenanceDate: '2023-01-15',\n      nextMaintenanceDate: '2023-07-15',\n      mileage: 45000,\n      fuelType: 'diesel',\n      capacity: 800,\n      notes: 'Véhicule utilitaire principal',\n      documents: [],\n      inspections: [],\n      maintenanceHistory: [],\n      insuranceInfo: {\n        provider: 'AXA',\n        policyNumber: 'AX123456789',\n        validFrom: '2023-01-01',\n        validUntil: '2024-01-01',\n        coverageType: 'comprehensive',\n        monthlyPremium: 120,\n        currency: 'EUR',\n        documents: []\n      },\n      technicalSpecifications: {\n        vin: 'VF1FW1AB123456789',\n        year: 2020,\n        engine: {\n          type: 'Diesel 1.5 dCi',\n          power: 85,\n          cylinderCapacity: 1461\n        },\n        transmission: 'manual',\n        weight: 1485,\n        dimensions: {\n          length: 4490,\n          width: 1830,\n          height: 1835\n        },\n        maxPayload: 650,\n        fuelConsumption: {\n          urban: 5.5,\n          extraUrban: 4.6,\n          combined: 5.0\n        },\n        emissions: {\n          co2: 131,\n          emissionStandard: 'Euro 6d'\n        },\n        tires: {\n          frontSize: '195/65 R15',\n          rearSize: '195/65 R15',\n          recommendedPressure: {\n            front: 2.5,\n            rear: 2.5\n          }\n        }\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }, {\n      brand: 'Citroën',\n      model: 'Berlingo',\n      registrationNumber: 'GI-456-AD',\n      type: 'van',\n      status: 'active',\n      purchaseDate: '2021-01-01',\n      lastMaintenanceDate: '2023-02-10',\n      nextMaintenanceDate: '2023-08-10',\n      mileage: 32500,\n      fuelType: 'diesel',\n      capacity: 800,\n      notes: 'Véhicule utilitaire secondaire',\n      documents: [],\n      inspections: [],\n      maintenanceHistory: [],\n      insuranceInfo: {\n        provider: 'MMA',\n        policyNumber: 'MM789654321',\n        validFrom: '2023-01-01',\n        validUntil: '2024-01-01',\n        coverageType: 'comprehensive',\n        monthlyPremium: 110,\n        currency: 'EUR',\n        documents: []\n      },\n      technicalSpecifications: {\n        vin: 'VF7GBHFXBEUR567890',\n        year: 2021,\n        engine: {\n          type: 'Diesel 1.5 BlueHDi',\n          power: 100,\n          cylinderCapacity: 1499\n        },\n        transmission: 'manual',\n        weight: 1532,\n        dimensions: {\n          length: 4650,\n          width: 1850,\n          height: 1860\n        },\n        maxPayload: 700,\n        fuelConsumption: {\n          urban: 5.0,\n          extraUrban: 4.2,\n          combined: 4.6\n        },\n        emissions: {\n          co2: 120,\n          emissionStandard: 'Euro 6d'\n        },\n        tires: {\n          frontSize: '205/60 R16',\n          rearSize: '205/60 R16',\n          recommendedPressure: {\n            front: 2.5,\n            rear: 2.5\n          }\n        }\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }, {\n      brand: 'Renault',\n      model: 'Clio',\n      registrationNumber: 'GL-789-BA',\n      type: 'car',\n      status: 'active',\n      purchaseDate: '2022-01-01',\n      lastMaintenanceDate: '2023-02-20',\n      nextMaintenanceDate: '2023-08-20',\n      mileage: 15800,\n      fuelType: 'petrol',\n      notes: 'Véhicule de service',\n      documents: [],\n      inspections: [],\n      maintenanceHistory: [],\n      insuranceInfo: {\n        provider: 'Generali',\n        policyNumber: 'GE567891234',\n        validFrom: '2023-01-01',\n        validUntil: '2024-01-01',\n        coverageType: 'comprehensive',\n        monthlyPremium: 90,\n        currency: 'EUR',\n        documents: []\n      },\n      technicalSpecifications: {\n        vin: 'VF1RJA00067123456',\n        year: 2022,\n        engine: {\n          type: 'Petrol 1.0 TCe',\n          power: 90,\n          cylinderCapacity: 999\n        },\n        transmission: 'manual',\n        weight: 1178,\n        dimensions: {\n          length: 4050,\n          width: 1798,\n          height: 1440\n        },\n        fuelConsumption: {\n          urban: 6.2,\n          extraUrban: 4.5,\n          combined: 5.1\n        },\n        emissions: {\n          co2: 118,\n          emissionStandard: 'Euro 6d'\n        },\n        tires: {\n          frontSize: '195/55 R16',\n          rearSize: '195/55 R16',\n          recommendedPressure: {\n            front: 2.2,\n            rear: 2.0\n          }\n        }\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }];\n  }\n  // Initialiser les véhicules par défaut\n  async initializeDefaultVehicles() {\n    try {\n      const snapshot = await getDocs(this.collection);\n      if (snapshot.empty) {\n        console.log('Initialisation des véhicules par défaut...');\n        for (const vehicle of this.defaultVehicles) {\n          await this.createVehicle(vehicle);\n        }\n        console.log('Véhicules par défaut initialisés avec succès');\n      } else {\n        console.log('La collection de véhicules n\\'est pas vide, pas d\\'initialisation nécessaire');\n      }\n    } catch (error) {\n      console.error('Erreur lors de l\\'initialisation des véhicules par défaut:', error);\n      throw error;\n    }\n  }\n\n  // Récupérer tous les véhicules avec filtres optionnels\n  async getVehicles(filters = {}) {\n    try {\n      let q = query(this.collection);\n\n      // Appliquer les filtres\n      if (filters.type) {\n        q = query(q, where('type', '==', filters.type));\n      }\n      if (filters.status) {\n        q = query(q, where('status', '==', filters.status));\n      }\n      if (filters.assignedDriver) {\n        q = query(q, where('assignedDriver', '==', filters.assignedDriver));\n      }\n\n      // Recherche par texte\n      if (filters.search) {\n        const searchTerm = filters.search.toLowerCase();\n        const snapshot = await getDocs(this.collection);\n        return snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })).filter(vehicle => vehicle.brand.toLowerCase().includes(searchTerm) || vehicle.model.toLowerCase().includes(searchTerm) || vehicle.registrationNumber.toLowerCase().includes(searchTerm));\n      }\n      const snapshot = await getDocs(q);\n      const vehicles = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n\n      // Appliquer les filtres supplémentaires en mémoire\n      return vehicles.filter(vehicle => {\n        if (filters.minMileage && vehicle.mileage < filters.minMileage) return false;\n        if (filters.maxMileage && vehicle.mileage > filters.maxMileage) return false;\n        if (filters.needsMaintenance) {\n          const nextMaintenance = new Date(vehicle.nextMaintenanceDate);\n          const today = new Date();\n          return nextMaintenance <= today;\n        }\n        if (filters.documentExpiresWithin && filters.documentExpiresWithin > 0) {\n          const today = new Date();\n          const futureDate = new Date(today);\n          futureDate.setDate(today.getDate() + filters.documentExpiresWithin);\n          return vehicle.documents.some(doc => {\n            if (doc.expiryDate) {\n              const expiryDate = new Date(doc.expiryDate);\n              return expiryDate <= futureDate && expiryDate >= today;\n            }\n            return false;\n          });\n        }\n        if (filters.lastInspectionStatus && vehicle.inspections.length > 0) {\n          // Trouver la dernière inspection\n          const lastInspection = vehicle.inspections.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())[0];\n          return lastInspection.status === filters.lastInspectionStatus;\n        }\n        return true;\n      });\n    } catch (error) {\n      console.error('Erreur lors de la récupération des véhicules:', error);\n      throw error;\n    }\n  }\n\n  // Récupérer un véhicule par son ID\n  async getVehicleById(id) {\n    try {\n      const docRef = doc(this.collection, id);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        return {\n          id: docSnap.id,\n          ...docSnap.data()\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Erreur lors de la récupération du véhicule:', error);\n      throw error;\n    }\n  }\n\n  // Créer un nouveau véhicule\n  async createVehicle(vehicle) {\n    try {\n      const docRef = await addDoc(this.collection, {\n        ...vehicle,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      });\n      return {\n        id: docRef.id,\n        ...vehicle\n      };\n    } catch (error) {\n      console.error('Erreur lors de la création du véhicule:', error);\n      throw error;\n    }\n  }\n\n  // Mettre à jour un véhicule existant\n  async updateVehicle(id, data) {\n    try {\n      const docRef = doc(this.collection, id);\n      await updateDoc(docRef, {\n        ...data,\n        updatedAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du véhicule:', error);\n      throw error;\n    }\n  }\n\n  // Supprimer un véhicule\n  async deleteVehicle(id) {\n    try {\n      const docRef = doc(this.collection, id);\n      await deleteDoc(docRef);\n    } catch (error) {\n      console.error('Erreur lors de la suppression du véhicule:', error);\n      throw error;\n    }\n  }\n\n  // ===== Gestion des documents =====\n\n  // Ajouter un document à un véhicule\n  async addDocumentToVehicle(vehicleId, document) {\n    try {\n      const docRef = await addDoc(this.documentsCollection, {\n        ...document,\n        vehicleId,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      });\n      return {\n        id: docRef.id,\n        ...document\n      };\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du document au véhicule:', error);\n      throw error;\n    }\n  }\n\n  // Mettre à jour un document\n  async updateDocument(documentId, data) {\n    try {\n      const docRef = doc(this.documentsCollection, documentId);\n      await updateDoc(docRef, {\n        ...data,\n        updatedAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du document:', error);\n      throw error;\n    }\n  }\n\n  // Supprimer un document\n  async deleteDocument(documentId) {\n    try {\n      const docRef = doc(this.documentsCollection, documentId);\n      await deleteDoc(docRef);\n    } catch (error) {\n      console.error('Erreur lors de la suppression du document:', error);\n      throw error;\n    }\n  }\n\n  // Uploader un document\n  async uploadDocument(vehicleId, file) {\n    try {\n      const timestamp = Date.now();\n      const fileName = `${vehicleId}/${timestamp}_${file.name}`;\n      const storageRef = ref(this.storage, `${this.storageBasePath}/${fileName}`);\n      await uploadBytes(storageRef, file);\n      const url = await getDownloadURL(storageRef);\n\n      // Pour les images, créer une miniature\n      let thumbnailUrl = url;\n      if (file.type.startsWith('image/')) {\n        const thumbnailRef = ref(this.storage, `${this.storageBasePath}/${vehicleId}/${timestamp}_thumb_${file.name}`);\n        // TODO: Implémenter la création de miniature\n        thumbnailUrl = url;\n      }\n      return {\n        url,\n        thumbnailUrl\n      };\n    } catch (error) {\n      console.error('Erreur lors de l\\'upload du document:', error);\n      throw error;\n    }\n  }\n\n  // ===== Gestion de la maintenance =====\n\n  // Ajouter un enregistrement de maintenance\n  async addMaintenanceRecord(vehicleId, record) {\n    try {\n      const docRef = await addDoc(this.maintenanceCollection, {\n        ...record,\n        vehicleId,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      });\n      return {\n        id: docRef.id,\n        ...record\n      };\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de l\\'enregistrement de maintenance:', error);\n      throw error;\n    }\n  }\n\n  // Mettre à jour un enregistrement de maintenance\n  async updateMaintenanceRecord(recordId, data) {\n    try {\n      const docRef = doc(this.maintenanceCollection, recordId);\n      await updateDoc(docRef, {\n        ...data,\n        updatedAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour de l\\'enregistrement de maintenance:', error);\n      throw error;\n    }\n  }\n\n  // Supprimer un enregistrement de maintenance\n  async deleteMaintenanceRecord(recordId) {\n    try {\n      const docRef = doc(this.maintenanceCollection, recordId);\n      await deleteDoc(docRef);\n    } catch (error) {\n      console.error('Erreur lors de la suppression de l\\'enregistrement de maintenance:', error);\n      throw error;\n    }\n  }\n\n  // ===== Gestion des informations d'assurance =====\n\n  // Mettre à jour les informations d'assurance\n  async updateInsuranceInfo(vehicleId, insuranceInfo) {\n    try {\n      const docRef = doc(this.collection, vehicleId);\n      await updateDoc(docRef, {\n        insuranceInfo,\n        updatedAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour des informations d\\'assurance:', error);\n      throw error;\n    }\n  }\n  async updateTechnicalSpecifications(vehicleId, specifications) {\n    try {\n      const docRef = doc(this.collection, vehicleId);\n      await updateDoc(docRef, {\n        technicalSpecifications: specifications,\n        updatedAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour des spécifications techniques:', error);\n      throw error;\n    }\n  }\n}\nexport const vehicleService = new VehicleService();","map":{"version":3,"names":["collection","query","where","getDocs","addDoc","updateDoc","deleteDoc","doc","getDoc","ref","uploadBytes","getDownloadURL","db","getStorage","VehicleService","constructor","documentsCollection","maintenanceCollection","storage","storageBasePath","initialized","defaultVehicles","brand","model","registrationNumber","type","status","purchaseDate","lastMaintenanceDate","nextMaintenanceDate","mileage","fuelType","capacity","notes","documents","inspections","maintenanceHistory","insuranceInfo","provider","policyNumber","validFrom","validUntil","coverageType","monthlyPremium","currency","technicalSpecifications","vin","year","engine","power","cylinderCapacity","transmission","weight","dimensions","length","width","height","maxPayload","fuelConsumption","urban","extraUrban","combined","emissions","co2","emissionStandard","tires","frontSize","rearSize","recommendedPressure","front","rear","createdAt","Date","toISOString","updatedAt","initializeDefaultVehicles","snapshot","empty","console","log","vehicle","createVehicle","error","getVehicles","filters","q","assignedDriver","search","searchTerm","toLowerCase","docs","map","id","data","filter","includes","vehicles","minMileage","maxMileage","needsMaintenance","nextMaintenance","today","documentExpiresWithin","futureDate","setDate","getDate","some","expiryDate","lastInspectionStatus","lastInspection","sort","a","b","date","getTime","getVehicleById","docRef","docSnap","exists","updateVehicle","deleteVehicle","addDocumentToVehicle","vehicleId","document","updateDocument","documentId","deleteDocument","uploadDocument","file","timestamp","now","fileName","name","storageRef","url","thumbnailUrl","startsWith","thumbnailRef","addMaintenanceRecord","record","updateMaintenanceRecord","recordId","deleteMaintenanceRecord","updateInsuranceInfo","updateTechnicalSpecifications","specifications","vehicleService"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/services/vehicleService.ts"],"sourcesContent":["import { Vehicle, VehicleFilters, VehicleDocument, InsuranceInfo, MaintenanceRecord, TechnicalSpecifications } from '../types/Vehicle';\r\nimport { collection, query, where, getDocs, addDoc, updateDoc, deleteDoc, doc, getDoc, orderBy, limit, startAfter, DocumentData } from 'firebase/firestore';\r\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\r\nimport { db } from '../config/firebase';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nclass VehicleService {\r\n  private collection = collection(db, 'vehicles');\r\n  private documentsCollection = collection(db, 'documents');\r\n  private maintenanceCollection = collection(db, 'maintenance');\r\n  private storage = getStorage();\r\n  private storageBasePath = 'vehicles';\r\n  private initialized = false;\r\n\r\n  // Données par défaut pour les véhicules\r\n  private defaultVehicles: Omit<Vehicle, 'id'>[] = [\r\n    {\r\n      brand: 'Renault',\r\n      model: 'Kangoo',\r\n      registrationNumber: 'GE-695-RT',\r\n      type: 'van',\r\n      status: 'active',\r\n      purchaseDate: '2020-01-01',\r\n      lastMaintenanceDate: '2023-01-15',\r\n      nextMaintenanceDate: '2023-07-15',\r\n      mileage: 45000,\r\n      fuelType: 'diesel',\r\n      capacity: 800,\r\n      notes: 'Véhicule utilitaire principal',\r\n      documents: [],\r\n      inspections: [],\r\n      maintenanceHistory: [],\r\n      insuranceInfo: {\r\n        provider: 'AXA',\r\n        policyNumber: 'AX123456789',\r\n        validFrom: '2023-01-01',\r\n        validUntil: '2024-01-01',\r\n        coverageType: 'comprehensive',\r\n        monthlyPremium: 120,\r\n        currency: 'EUR',\r\n        documents: []\r\n      },\r\n      technicalSpecifications: {\r\n        vin: 'VF1FW1AB123456789',\r\n        year: 2020,\r\n        engine: {\r\n          type: 'Diesel 1.5 dCi',\r\n          power: 85,\r\n          cylinderCapacity: 1461\r\n        },\r\n        transmission: 'manual',\r\n        weight: 1485,\r\n        dimensions: {\r\n          length: 4490,\r\n          width: 1830,\r\n          height: 1835\r\n        },\r\n        maxPayload: 650,\r\n        fuelConsumption: {\r\n          urban: 5.5,\r\n          extraUrban: 4.6,\r\n          combined: 5.0\r\n        },\r\n        emissions: {\r\n          co2: 131,\r\n          emissionStandard: 'Euro 6d'\r\n        },\r\n        tires: {\r\n          frontSize: '195/65 R15',\r\n          rearSize: '195/65 R15',\r\n          recommendedPressure: {\r\n            front: 2.5,\r\n            rear: 2.5\r\n          }\r\n        }\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    },\r\n    {\r\n      brand: 'Citroën',\r\n      model: 'Berlingo',\r\n      registrationNumber: 'GI-456-AD',\r\n      type: 'van',\r\n      status: 'active',\r\n      purchaseDate: '2021-01-01',\r\n      lastMaintenanceDate: '2023-02-10',\r\n      nextMaintenanceDate: '2023-08-10',\r\n      mileage: 32500,\r\n      fuelType: 'diesel',\r\n      capacity: 800,\r\n      notes: 'Véhicule utilitaire secondaire',\r\n      documents: [],\r\n      inspections: [],\r\n      maintenanceHistory: [],\r\n      insuranceInfo: {\r\n        provider: 'MMA',\r\n        policyNumber: 'MM789654321',\r\n        validFrom: '2023-01-01',\r\n        validUntil: '2024-01-01',\r\n        coverageType: 'comprehensive',\r\n        monthlyPremium: 110,\r\n        currency: 'EUR',\r\n        documents: []\r\n      },\r\n      technicalSpecifications: {\r\n        vin: 'VF7GBHFXBEUR567890',\r\n        year: 2021,\r\n        engine: {\r\n          type: 'Diesel 1.5 BlueHDi',\r\n          power: 100,\r\n          cylinderCapacity: 1499\r\n        },\r\n        transmission: 'manual',\r\n        weight: 1532,\r\n        dimensions: {\r\n          length: 4650,\r\n          width: 1850,\r\n          height: 1860\r\n        },\r\n        maxPayload: 700,\r\n        fuelConsumption: {\r\n          urban: 5.0,\r\n          extraUrban: 4.2,\r\n          combined: 4.6\r\n        },\r\n        emissions: {\r\n          co2: 120,\r\n          emissionStandard: 'Euro 6d'\r\n        },\r\n        tires: {\r\n          frontSize: '205/60 R16',\r\n          rearSize: '205/60 R16',\r\n          recommendedPressure: {\r\n            front: 2.5,\r\n            rear: 2.5\r\n          }\r\n        }\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    },\r\n    {\r\n      brand: 'Renault',\r\n      model: 'Clio',\r\n      registrationNumber: 'GL-789-BA',\r\n      type: 'car',\r\n      status: 'active',\r\n      purchaseDate: '2022-01-01',\r\n      lastMaintenanceDate: '2023-02-20',\r\n      nextMaintenanceDate: '2023-08-20',\r\n      mileage: 15800,\r\n      fuelType: 'petrol',\r\n      notes: 'Véhicule de service',\r\n      documents: [],\r\n      inspections: [],\r\n      maintenanceHistory: [],\r\n      insuranceInfo: {\r\n        provider: 'Generali',\r\n        policyNumber: 'GE567891234',\r\n        validFrom: '2023-01-01',\r\n        validUntil: '2024-01-01',\r\n        coverageType: 'comprehensive',\r\n        monthlyPremium: 90,\r\n        currency: 'EUR',\r\n        documents: []\r\n      },\r\n      technicalSpecifications: {\r\n        vin: 'VF1RJA00067123456',\r\n        year: 2022,\r\n        engine: {\r\n          type: 'Petrol 1.0 TCe',\r\n          power: 90,\r\n          cylinderCapacity: 999\r\n        },\r\n        transmission: 'manual',\r\n        weight: 1178,\r\n        dimensions: {\r\n          length: 4050,\r\n          width: 1798,\r\n          height: 1440\r\n        },\r\n        fuelConsumption: {\r\n          urban: 6.2,\r\n          extraUrban: 4.5,\r\n          combined: 5.1\r\n        },\r\n        emissions: {\r\n          co2: 118,\r\n          emissionStandard: 'Euro 6d'\r\n        },\r\n        tires: {\r\n          frontSize: '195/55 R16',\r\n          rearSize: '195/55 R16',\r\n          recommendedPressure: {\r\n            front: 2.2,\r\n            rear: 2.0\r\n          }\r\n        }\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    }\r\n  ];\r\n\r\n  // Initialiser les véhicules par défaut\r\n  async initializeDefaultVehicles(): Promise<void> {\r\n    try {\r\n      const snapshot = await getDocs(this.collection);\r\n      if (snapshot.empty) {\r\n        console.log('Initialisation des véhicules par défaut...');\r\n        for (const vehicle of this.defaultVehicles) {\r\n          await this.createVehicle(vehicle);\r\n        }\r\n        console.log('Véhicules par défaut initialisés avec succès');\r\n      } else {\r\n        console.log('La collection de véhicules n\\'est pas vide, pas d\\'initialisation nécessaire');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'initialisation des véhicules par défaut:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Récupérer tous les véhicules avec filtres optionnels\r\n  async getVehicles(filters: VehicleFilters = {}): Promise<Vehicle[]> {\r\n    try {\r\n      let q = query(this.collection);\r\n\r\n      // Appliquer les filtres\r\n      if (filters.type) {\r\n        q = query(q, where('type', '==', filters.type));\r\n      }\r\n      if (filters.status) {\r\n        q = query(q, where('status', '==', filters.status));\r\n      }\r\n      if (filters.assignedDriver) {\r\n        q = query(q, where('assignedDriver', '==', filters.assignedDriver));\r\n      }\r\n\r\n      // Recherche par texte\r\n      if (filters.search) {\r\n        const searchTerm = filters.search.toLowerCase();\r\n        const snapshot = await getDocs(this.collection);\r\n        return snapshot.docs\r\n          .map(doc => ({ id: doc.id, ...doc.data() } as Vehicle))\r\n          .filter(vehicle => \r\n            vehicle.brand.toLowerCase().includes(searchTerm) ||\r\n            vehicle.model.toLowerCase().includes(searchTerm) ||\r\n            vehicle.registrationNumber.toLowerCase().includes(searchTerm)\r\n          );\r\n      }\r\n\r\n      const snapshot = await getDocs(q);\r\n      const vehicles = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Vehicle));\r\n\r\n      // Appliquer les filtres supplémentaires en mémoire\r\n      return vehicles.filter(vehicle => {\r\n        if (filters.minMileage && vehicle.mileage < filters.minMileage) return false;\r\n        if (filters.maxMileage && vehicle.mileage > filters.maxMileage) return false;\r\n        if (filters.needsMaintenance) {\r\n          const nextMaintenance = new Date(vehicle.nextMaintenanceDate);\r\n          const today = new Date();\r\n          return nextMaintenance <= today;\r\n        }\r\n        if (filters.documentExpiresWithin && filters.documentExpiresWithin > 0) {\r\n          const today = new Date();\r\n          const futureDate = new Date(today);\r\n          futureDate.setDate(today.getDate() + filters.documentExpiresWithin);\r\n          \r\n          return vehicle.documents.some(doc => {\r\n            if (doc.expiryDate) {\r\n              const expiryDate = new Date(doc.expiryDate);\r\n              return expiryDate <= futureDate && expiryDate >= today;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n        if (filters.lastInspectionStatus && vehicle.inspections.length > 0) {\r\n          // Trouver la dernière inspection\r\n          const lastInspection = vehicle.inspections\r\n            .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())[0];\r\n          return lastInspection.status === filters.lastInspectionStatus;\r\n        }\r\n        return true;\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des véhicules:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Récupérer un véhicule par son ID\r\n  async getVehicleById(id: string): Promise<Vehicle | null> {\r\n    try {\r\n      const docRef = doc(this.collection, id);\r\n      const docSnap = await getDoc(docRef);\r\n      if (docSnap.exists()) {\r\n        return { id: docSnap.id, ...docSnap.data() } as Vehicle;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération du véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Créer un nouveau véhicule\r\n  async createVehicle(vehicle: Omit<Vehicle, 'id'>): Promise<Vehicle> {\r\n    try {\r\n      const docRef = await addDoc(this.collection, {\r\n        ...vehicle,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n      return { id: docRef.id, ...vehicle };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la création du véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Mettre à jour un véhicule existant\r\n  async updateVehicle(id: string, data: Partial<Vehicle>): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.collection, id);\r\n      await updateDoc(docRef, {\r\n        ...data,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour du véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Supprimer un véhicule\r\n  async deleteVehicle(id: string): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.collection, id);\r\n      await deleteDoc(docRef);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression du véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== Gestion des documents =====\r\n  \r\n  // Ajouter un document à un véhicule\r\n  async addDocumentToVehicle(vehicleId: string, document: Omit<VehicleDocument, 'id' | 'createdAt' | 'updatedAt'>): Promise<VehicleDocument> {\r\n    try {\r\n      const docRef = await addDoc(this.documentsCollection, {\r\n        ...document,\r\n        vehicleId,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n      return { id: docRef.id, ...document };\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'ajout du document au véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Mettre à jour un document\r\n  async updateDocument(documentId: string, data: Partial<VehicleDocument>): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.documentsCollection, documentId);\r\n      await updateDoc(docRef, {\r\n        ...data,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour du document:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Supprimer un document\r\n  async deleteDocument(documentId: string): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.documentsCollection, documentId);\r\n      await deleteDoc(docRef);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression du document:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Uploader un document\r\n  async uploadDocument(vehicleId: string, file: File): Promise<{ url: string; thumbnailUrl: string }> {\r\n    try {\r\n      const timestamp = Date.now();\r\n      const fileName = `${vehicleId}/${timestamp}_${file.name}`;\r\n      const storageRef = ref(this.storage, `${this.storageBasePath}/${fileName}`);\r\n      \r\n      await uploadBytes(storageRef, file);\r\n      const url = await getDownloadURL(storageRef);\r\n      \r\n      // Pour les images, créer une miniature\r\n      let thumbnailUrl = url;\r\n      if (file.type.startsWith('image/')) {\r\n        const thumbnailRef = ref(this.storage, `${this.storageBasePath}/${vehicleId}/${timestamp}_thumb_${file.name}`);\r\n        // TODO: Implémenter la création de miniature\r\n        thumbnailUrl = url;\r\n      }\r\n      \r\n      return { url, thumbnailUrl };\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'upload du document:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== Gestion de la maintenance =====\r\n  \r\n  // Ajouter un enregistrement de maintenance\r\n  async addMaintenanceRecord(vehicleId: string, record: Omit<MaintenanceRecord, 'id'>): Promise<MaintenanceRecord> {\r\n    try {\r\n      const docRef = await addDoc(this.maintenanceCollection, {\r\n        ...record,\r\n        vehicleId,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n      return { id: docRef.id, ...record };\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'ajout de l\\'enregistrement de maintenance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Mettre à jour un enregistrement de maintenance\r\n  async updateMaintenanceRecord(recordId: string, data: Partial<MaintenanceRecord>): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.maintenanceCollection, recordId);\r\n      await updateDoc(docRef, {\r\n        ...data,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour de l\\'enregistrement de maintenance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Supprimer un enregistrement de maintenance\r\n  async deleteMaintenanceRecord(recordId: string): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.maintenanceCollection, recordId);\r\n      await deleteDoc(docRef);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression de l\\'enregistrement de maintenance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== Gestion des informations d'assurance =====\r\n  \r\n  // Mettre à jour les informations d'assurance\r\n  async updateInsuranceInfo(vehicleId: string, insuranceInfo: InsuranceInfo): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.collection, vehicleId);\r\n      await updateDoc(docRef, {\r\n        insuranceInfo,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour des informations d\\'assurance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateTechnicalSpecifications(vehicleId: string, specifications: TechnicalSpecifications): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.collection, vehicleId);\r\n      await updateDoc(docRef, {\r\n        technicalSpecifications: specifications,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour des spécifications techniques:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const vehicleService = new VehicleService(); \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}