{"ast":null,"code":"import React,{useState,useEffect}from'react';import{db}from'../config/firebase';import{collection,getDocs,addDoc,updateDoc,deleteDoc,doc,query,where}from'firebase/firestore';import'./MarkerPreferences.css';// Couleurs disponibles pour les marqueurs\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AVAILABLE_COLORS=[{name:'Rouge',value:'#ff3b30'},{name:'Jaune',value:'#ffcc00'},{name:'Vert',value:'#34c759'},{name:'Cyan',value:'#00c7be'},{name:'Bleu',value:'#007aff'},{name:'Magenta',value:'#af52de'},{name:'Rose',value:'#ff2d55'},{name:'Orange',value:'#ff9500'},{name:'Violet',value:'#5856d6'},{name:'Gris',value:'#8e8e93'},{name:'Noir',value:'#000000'}];// Icônes disponibles pour les marqueurs\nconst AVAILABLE_ICONS=[{name:'Goutte d\\'eau',value:'droplet'},{name:'Cercle',value:'circle'},{name:'Carré',value:'square'},{name:'Triangle',value:'triangle'},{name:'Étoile',value:'star'},{name:'Épingle',value:'pin'}];// Types de sites disponibles\nconst SITE_TYPES=['Laboratoire','Clinique','Plateau technique','Point de collecte','Etablissement de santé','Ehpad','Vétérinaire'];const MarkerPreferences=()=>{const[preferences,setPreferences]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[editMode,setEditMode]=useState(false);const[editingPreferences,setEditingPreferences]=useState({});const[previewColors,setPreviewColors]=useState({});// États pour la sélection\nconst[selectedPreferences,setSelectedPreferences]=useState([]);const[selectAll,setSelectAll]=useState(false);useEffect(()=>{fetchPreferences();},[]);// Effet pour gérer la sélection/désélection de toutes les préférences\nuseEffect(()=>{if(selectAll){setSelectedPreferences(preferences.map(pref=>pref.id));}else if(selectedPreferences.length===preferences.length&&preferences.length>0){setSelectedPreferences([]);}},[selectAll,preferences]);const fetchPreferences=async()=>{try{setLoading(true);const preferencesRef=collection(db,'markerPreferences');const snapshot=await getDocs(preferencesRef);let preferencesData=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));// Si aucune préférence n'existe, créer les préférences par défaut\nif(preferencesData.length===0){preferencesData=await createDefaultPreferences();}else{// Vérifier et supprimer les doublons\npreferencesData=await checkAndRemoveDuplicates(preferencesData);}setPreferences(preferencesData);// Initialiser les couleurs de prévisualisation\nconst initialPreviewColors={};preferencesData.forEach(pref=>{initialPreviewColors[pref.id]=pref.color;});setPreviewColors(initialPreviewColors);}catch(error){console.error('Erreur lors de la récupération des préférences de marqueurs:',error);setError('Erreur lors de la récupération des préférences de marqueurs');}finally{setLoading(false);}};// Fonction pour vérifier et supprimer les doublons\nconst checkAndRemoveDuplicates=async preferences=>{// Regrouper les préférences par type de site\nconst groupedBySiteType={};preferences.forEach(pref=>{const siteType=pref.siteType.toLowerCase().trim();if(!groupedBySiteType[siteType]){groupedBySiteType[siteType]=[];}groupedBySiteType[siteType].push(pref);});// Identifier et supprimer les doublons\nconst duplicatesRemoved=[];const updatedPreferences=[...preferences];for(const siteType in groupedBySiteType){const prefsForType=groupedBySiteType[siteType];if(prefsForType.length>1){// Garder la première préférence et supprimer les autres\nconst[keepPref,...duplicates]=prefsForType;for(const duplicate of duplicates){try{const prefRef=doc(db,'markerPreferences',duplicate.id);await deleteDoc(prefRef);duplicatesRemoved.push(duplicate);// Retirer le doublon de la liste des préférences\nconst index=updatedPreferences.findIndex(p=>p.id===duplicate.id);if(index!==-1){updatedPreferences.splice(index,1);}}catch(error){console.error(`Erreur lors de la suppression du doublon ${duplicate.id}:`,error);}}}}if(duplicatesRemoved.length>0){console.log(`${duplicatesRemoved.length} doublons de préférences ont été supprimés.`);}return updatedPreferences;};const createDefaultPreferences=async()=>{const defaultPreferences=[{siteType:'Laboratoire',color:'#ff3b30',icon:'droplet',name:'Laboratoire'},{siteType:'Clinique',color:'#ffcc00',icon:'droplet',name:'Clinique'},{siteType:'Plateau technique',color:'#34c759',icon:'droplet',name:'Plateau technique'},{siteType:'Point de collecte',color:'#00c7be',icon:'droplet',name:'Point de collecte'},{siteType:'Etablissement de santé',color:'#007aff',icon:'droplet',name:'Établissement de santé'},{siteType:'Ehpad',color:'#af52de',icon:'droplet',name:'Ehpad'},{siteType:'Vétérinaire',color:'#ff2d55',icon:'droplet',name:'Vétérinaire'}];const createdPreferences=[];for(const pref of defaultPreferences){try{// Vérifier si une préférence pour ce type de site existe déjà\nconst preferencesRef=collection(db,'markerPreferences');const q=query(preferencesRef,where(\"siteType\",\"==\",pref.siteType));const snapshot=await getDocs(q);if(snapshot.empty){// Ajouter seulement si aucune préférence n'existe pour ce type de site\nconst docRef=await addDoc(collection(db,'markerPreferences'),pref);createdPreferences.push({id:docRef.id,...pref});}else{// Utiliser la préférence existante\nsnapshot.docs.forEach(doc=>{createdPreferences.push({id:doc.id,...doc.data()});});}}catch(error){console.error('Erreur lors de la création des préférences par défaut:',error);}}return createdPreferences;};const toggleEditMode=()=>{if(editMode){// Sortir du mode édition sans sauvegarder\nsetEditingPreferences({});setSelectedPreferences([]);setSelectAll(false);}else{// Entrer en mode édition\nconst initialEditState={};preferences.forEach(pref=>{initialEditState[pref.id]={...pref};});setEditingPreferences(initialEditState);}setEditMode(!editMode);};const handleSave=async()=>{try{setLoading(true);// Mettre à jour les préférences modifiées\nfor(const[id,pref]of Object.entries(editingPreferences)){const prefRef=doc(db,'markerPreferences',id);await updateDoc(prefRef,{color:pref.color,icon:pref.icon,name:pref.name});}// Recharger les préférences\nawait fetchPreferences();// Sortir du mode édition\nsetEditMode(false);setEditingPreferences({});setSelectedPreferences([]);setSelectAll(false);}catch(error){console.error('Erreur lors de la sauvegarde des préférences:',error);setError('Erreur lors de la sauvegarde des préférences');}finally{setLoading(false);}};const handleColorChange=(id,color)=>{setEditingPreferences({...editingPreferences,[id]:{...editingPreferences[id],color}});// Mettre à jour la prévisualisation\nsetPreviewColors({...previewColors,[id]:color});};const handleIconChange=(id,icon)=>{setEditingPreferences({...editingPreferences,[id]:{...editingPreferences[id],icon}});};const handleNameChange=(id,name)=>{setEditingPreferences({...editingPreferences,[id]:{...editingPreferences[id],name}});};// Fonction pour gérer la sélection/désélection d'une préférence\nconst togglePreferenceSelection=id=>{if(selectedPreferences.includes(id)){setSelectedPreferences(selectedPreferences.filter(prefId=>prefId!==id));// Si on désélectionne une préférence, on désactive aussi \"Tout sélectionner\"\nsetSelectAll(false);}else{setSelectedPreferences([...selectedPreferences,id]);// Si toutes les préférences sont sélectionnées, on active \"Tout sélectionner\"\nif(selectedPreferences.length+1===preferences.length){setSelectAll(true);}}};// Fonction pour gérer la sélection/désélection de toutes les préférences\nconst handleSelectAllChange=()=>{setSelectAll(!selectAll);};// Fonction pour supprimer les préférences sélectionnées\nconst handleDeleteSelected=async()=>{if(selectedPreferences.length===0){return;}// Confirmation avant suppression\nconst confirmMessage=`Êtes-vous sûr de vouloir supprimer ${selectedPreferences.length} préférence(s) de marqueur ?`;if(!window.confirm(confirmMessage)){return;}try{setLoading(true);// Supprimer les préférences sélectionnées\nfor(const prefId of selectedPreferences){const prefRef=doc(db,'markerPreferences',prefId);await deleteDoc(prefRef);}// Recharger les préférences\nawait fetchPreferences();// Réinitialiser les sélections\nsetSelectedPreferences([]);setSelectAll(false);}catch(error){console.error('Erreur lors de la suppression des préférences:',error);setError('Erreur lors de la suppression des préférences');}finally{setLoading(false);}};// Fonction pour ajouter une nouvelle préférence\nconst handleAddPreference=async()=>{try{setLoading(true);// Créer une nouvelle préférence avec des valeurs par défaut\nconst newPreference={siteType:'',color:'#007aff',icon:'droplet',name:'Nouveau type'};// Ajouter la nouvelle préférence à Firestore\nconst docRef=await addDoc(collection(db,'markerPreferences'),newPreference);// Recharger les préférences\nawait fetchPreferences();// Activer le mode édition si ce n'est pas déjà le cas\nif(!editMode){toggleEditMode();}}catch(error){console.error('Erreur lors de l\\'ajout d\\'une nouvelle préférence:',error);setError('Erreur lors de l\\'ajout d\\'une nouvelle préférence');}finally{setLoading(false);}};const renderMarkerPreview=preference=>{var _editingPreferences$p;const color=editMode?previewColors[preference.id]||preference.color:preference.color;const icon=editMode?((_editingPreferences$p=editingPreferences[preference.id])===null||_editingPreferences$p===void 0?void 0:_editingPreferences$p.icon)||preference.icon:preference.icon;let iconClass='';switch(icon){case'droplet':iconClass='fas fa-tint';break;case'circle':iconClass='fas fa-circle';break;case'square':iconClass='fas fa-square';break;case'triangle':iconClass='fas fa-triangle';break;case'star':iconClass='fas fa-star';break;case'pin':iconClass='fas fa-map-marker-alt';break;default:iconClass='fas fa-tint';}return/*#__PURE__*/_jsx(\"div\",{className:\"marker-preview\",style:{color},children:/*#__PURE__*/_jsx(\"i\",{className:iconClass})});};// Fonction pour réinitialiser les préférences aux valeurs par défaut\nconst handleResetToDefaults=async()=>{// Confirmation avant réinitialisation\nconst confirmMessage=\"Êtes-vous sûr de vouloir réinitialiser toutes les préférences de marqueurs aux valeurs par défaut ? Cette action supprimera toutes les personnalisations existantes.\";if(!window.confirm(confirmMessage)){return;}try{setLoading(true);// Supprimer toutes les préférences existantes\nconst preferencesRef=collection(db,'markerPreferences');const snapshot=await getDocs(preferencesRef);for(const doc of snapshot.docs){await deleteDoc(doc.ref);}// Créer les préférences par défaut\nawait createDefaultPreferences();// Recharger les préférences\nawait fetchPreferences();// Réinitialiser les sélections\nsetSelectedPreferences([]);setSelectAll(false);// Sortir du mode édition si actif\nif(editMode){setEditMode(false);setEditingPreferences({});}}catch(error){console.error('Erreur lors de la réinitialisation des préférences:',error);setError('Erreur lors de la réinitialisation des préférences');}finally{setLoading(false);}};if(loading&&preferences.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Chargement des pr\\xE9f\\xE9rences de marqueurs...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"marker-preferences-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"section-title\",children:[\"Pr\\xE9f\\xE9rences des marqueurs\",selectedPreferences.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"selection-count\",children:[\" (\",selectedPreferences.length,\" s\\xE9lectionn\\xE9\",selectedPreferences.length>1?'s':'',\")\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:editMode?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:handleSave,disabled:loading,style:{backgroundColor:'#4CAF50',color:'white',fontWeight:'bold'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),\" Enregistrer\"]}),selectedPreferences.length>0&&/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:handleDeleteSelected,disabled:loading,style:{backgroundColor:'#f44336',color:'white',marginLeft:'10px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),\" Supprimer (\",selectedPreferences.length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:handleAddPreference,disabled:loading,style:{backgroundColor:'#2196F3',color:'white',marginLeft:'10px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\" Ajouter\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button button-secondary\",onClick:toggleEditMode,style:{marginLeft:'10px'},disabled:loading,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),\" Annuler\"]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:toggleEditMode,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),\" Modifier\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button button-secondary\",onClick:handleResetToDefaults,disabled:loading,style:{marginLeft:'10px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-undo\"}),\" R\\xE9initialiser\"]})]})})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"preferences-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"preferences-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[editMode&&/*#__PURE__*/_jsxs(\"th\",{style:{width:'40px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectAll,onChange:handleSelectAllChange,title:\"S\\xE9lectionner/D\\xE9s\\xE9lectionner tout\",id:\"select-all-checkbox\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"select-all-checkbox\",className:\"sr-only\",children:\"S\\xE9lectionner tout\"})]}),/*#__PURE__*/_jsx(\"th\",{children:\"Aper\\xE7u\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type de site\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nom affich\\xE9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Couleur\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Ic\\xF4ne\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:preferences.length>0?preferences.map(preference=>{var _editingPreferences$p2,_editingPreferences$p3,_editingPreferences$p4,_AVAILABLE_ICONS$find;return/*#__PURE__*/_jsxs(\"tr\",{className:selectedPreferences.includes(preference.id)?'selected-row':'',onClick:editMode?()=>togglePreferenceSelection(preference.id):undefined,style:editMode?{cursor:'pointer'}:undefined,children:[editMode&&/*#__PURE__*/_jsxs(\"td\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedPreferences.includes(preference.id),onChange:()=>togglePreferenceSelection(preference.id),title:\"S\\xE9lectionner cette pr\\xE9f\\xE9rence\",id:`select-preference-${preference.id}`,onClick:e=>e.stopPropagation()}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:`select-preference-${preference.id}`,className:\"sr-only\",children:[\"S\\xE9lectionner \",preference.name]})]}),/*#__PURE__*/_jsx(\"td\",{children:renderMarkerPreview(preference)}),/*#__PURE__*/_jsx(\"td\",{children:preference.siteType}),/*#__PURE__*/_jsx(\"td\",{children:editMode?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:((_editingPreferences$p2=editingPreferences[preference.id])===null||_editingPreferences$p2===void 0?void 0:_editingPreferences$p2.name)||preference.name,onChange:e=>handleNameChange(preference.id,e.target.value),className:\"edit-input\",\"aria-label\":`Nom pour ${preference.siteType}`,placeholder:`Nom pour ${preference.siteType}`,onClick:e=>e.stopPropagation()}):preference.name}),/*#__PURE__*/_jsx(\"td\",{children:editMode?/*#__PURE__*/_jsx(\"select\",{value:((_editingPreferences$p3=editingPreferences[preference.id])===null||_editingPreferences$p3===void 0?void 0:_editingPreferences$p3.color)||preference.color,onChange:e=>handleColorChange(preference.id,e.target.value),className:\"edit-select\",style:{backgroundColor:previewColors[preference.id]||preference.color,color:'#fff'},\"aria-label\":`Couleur pour ${preference.siteType}`,title:`Sélectionner une couleur pour ${preference.siteType}`,onClick:e=>e.stopPropagation(),children:AVAILABLE_COLORS.map(color=>/*#__PURE__*/_jsx(\"option\",{value:color.value,style:{backgroundColor:color.value,color:'#fff'},children:color.name},color.value))}):/*#__PURE__*/_jsx(\"div\",{className:\"color-preview\",style:{backgroundColor:preference.color}})}),/*#__PURE__*/_jsx(\"td\",{children:editMode?/*#__PURE__*/_jsx(\"select\",{value:((_editingPreferences$p4=editingPreferences[preference.id])===null||_editingPreferences$p4===void 0?void 0:_editingPreferences$p4.icon)||preference.icon,onChange:e=>handleIconChange(preference.id,e.target.value),className:\"edit-select\",\"aria-label\":`Icône pour ${preference.siteType}`,title:`Sélectionner une icône pour ${preference.siteType}`,onClick:e=>e.stopPropagation(),children:AVAILABLE_ICONS.map(icon=>/*#__PURE__*/_jsx(\"option\",{value:icon.value,children:icon.name},icon.value))}):((_AVAILABLE_ICONS$find=AVAILABLE_ICONS.find(i=>i.value===preference.icon))===null||_AVAILABLE_ICONS$find===void 0?void 0:_AVAILABLE_ICONS$find.name)||preference.icon})]},preference.id);}):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:editMode?6:5,className:\"no-results\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"no-results-message\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-info-circle\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Aucune pr\\xE9f\\xE9rence de marqueur n'est d\\xE9finie\"})]})})})})]})}),selectedPreferences.length>0&&editMode&&/*#__PURE__*/_jsx(\"div\",{className:\"selection-actions\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:handleDeleteSelected,disabled:loading,style:{backgroundColor:'#f44336',color:'white'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),\" Supprimer les \",selectedPreferences.length,\" \\xE9l\\xE9ment\",selectedPreferences.length>1?'s':'',\" s\\xE9lectionn\\xE9\",selectedPreferences.length>1?'s':'']})}),/*#__PURE__*/_jsxs(\"div\",{className:\"preferences-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-info-circle\"}),\" Les modifications des pr\\xE9f\\xE9rences de marqueurs seront appliqu\\xE9es \\xE0 la carte apr\\xE8s l'enregistrement.\"]}),editMode?/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-lightbulb\"}),\" Astuce : Cliquez sur une ligne pour la s\\xE9lectionner rapidement.\"]}):/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-undo\"}),\" Vous pouvez r\\xE9initialiser toutes les pr\\xE9f\\xE9rences aux valeurs par d\\xE9faut en cliquant sur le bouton \\\"R\\xE9initialiser\\\".\"]})]})]});};export default MarkerPreferences;","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","query","where","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AVAILABLE_COLORS","name","value","AVAILABLE_ICONS","SITE_TYPES","MarkerPreferences","preferences","setPreferences","loading","setLoading","error","setError","editMode","setEditMode","editingPreferences","setEditingPreferences","previewColors","setPreviewColors","selectedPreferences","setSelectedPreferences","selectAll","setSelectAll","fetchPreferences","map","pref","id","length","preferencesRef","snapshot","preferencesData","docs","data","createDefaultPreferences","checkAndRemoveDuplicates","initialPreviewColors","forEach","color","console","groupedBySiteType","siteType","toLowerCase","trim","push","duplicatesRemoved","updatedPreferences","prefsForType","keepPref","duplicates","duplicate","prefRef","index","findIndex","p","splice","log","defaultPreferences","icon","createdPreferences","q","empty","docRef","toggleEditMode","initialEditState","handleSave","Object","entries","handleColorChange","handleIconChange","handleNameChange","togglePreferenceSelection","includes","filter","prefId","handleSelectAllChange","handleDeleteSelected","confirmMessage","window","confirm","handleAddPreference","newPreference","renderMarkerPreview","preference","_editingPreferences$p","iconClass","className","style","children","handleResetToDefaults","ref","onClick","disabled","backgroundColor","fontWeight","marginLeft","width","textAlign","type","checked","onChange","title","htmlFor","_editingPreferences$p2","_editingPreferences$p3","_editingPreferences$p4","_AVAILABLE_ICONS$find","undefined","cursor","e","stopPropagation","target","placeholder","find","i","colSpan"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/MarkerPreferences.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../config/firebase';\nimport { \n  collection, \n  getDocs, \n  addDoc, \n  updateDoc, \n  deleteDoc, \n  doc, \n  setDoc,\n  query,\n  where\n} from 'firebase/firestore';\nimport { MarkerPreference } from '../types';\nimport './MarkerPreferences.css';\n\n// Couleurs disponibles pour les marqueurs\nconst AVAILABLE_COLORS = [\n  { name: 'Rouge', value: '#ff3b30' },\n  { name: 'Jaune', value: '#ffcc00' },\n  { name: 'Vert', value: '#34c759' },\n  { name: 'Cyan', value: '#00c7be' },\n  { name: 'Bleu', value: '#007aff' },\n  { name: 'Magenta', value: '#af52de' },\n  { name: 'Rose', value: '#ff2d55' },\n  { name: 'Orange', value: '#ff9500' },\n  { name: 'Violet', value: '#5856d6' },\n  { name: 'Gris', value: '#8e8e93' },\n  { name: 'Noir', value: '#000000' }\n];\n\n// Icônes disponibles pour les marqueurs\nconst AVAILABLE_ICONS = [\n  { name: 'Goutte d\\'eau', value: 'droplet' },\n  { name: 'Cercle', value: 'circle' },\n  { name: 'Carré', value: 'square' },\n  { name: 'Triangle', value: 'triangle' },\n  { name: 'Étoile', value: 'star' },\n  { name: 'Épingle', value: 'pin' }\n];\n\n// Types de sites disponibles\nconst SITE_TYPES = [\n  'Laboratoire',\n  'Clinique',\n  'Plateau technique',\n  'Point de collecte',\n  'Etablissement de santé',\n  'Ehpad',\n  'Vétérinaire'\n];\n\nconst MarkerPreferences: React.FC = () => {\n  const [preferences, setPreferences] = useState<MarkerPreference[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [editMode, setEditMode] = useState(false);\n  const [editingPreferences, setEditingPreferences] = useState<{[key: string]: MarkerPreference}>({});\n  const [previewColors, setPreviewColors] = useState<{[key: string]: string}>({});\n  \n  // États pour la sélection\n  const [selectedPreferences, setSelectedPreferences] = useState<string[]>([]);\n  const [selectAll, setSelectAll] = useState(false);\n  \n  useEffect(() => {\n    fetchPreferences();\n  }, []);\n\n  // Effet pour gérer la sélection/désélection de toutes les préférences\n  useEffect(() => {\n    if (selectAll) {\n      setSelectedPreferences(preferences.map(pref => pref.id));\n    } else if (selectedPreferences.length === preferences.length && preferences.length > 0) {\n      setSelectedPreferences([]);\n    }\n  }, [selectAll, preferences]);\n\n  const fetchPreferences = async () => {\n    try {\n      setLoading(true);\n      const preferencesRef = collection(db, 'markerPreferences');\n      const snapshot = await getDocs(preferencesRef);\n      \n      let preferencesData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })) as MarkerPreference[];\n      \n      // Si aucune préférence n'existe, créer les préférences par défaut\n      if (preferencesData.length === 0) {\n        preferencesData = await createDefaultPreferences();\n      } else {\n        // Vérifier et supprimer les doublons\n        preferencesData = await checkAndRemoveDuplicates(preferencesData);\n      }\n      \n      setPreferences(preferencesData);\n      \n      // Initialiser les couleurs de prévisualisation\n      const initialPreviewColors: {[key: string]: string} = {};\n      preferencesData.forEach(pref => {\n        initialPreviewColors[pref.id] = pref.color;\n      });\n      setPreviewColors(initialPreviewColors);\n      \n    } catch (error) {\n      console.error('Erreur lors de la récupération des préférences de marqueurs:', error);\n      setError('Erreur lors de la récupération des préférences de marqueurs');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour vérifier et supprimer les doublons\n  const checkAndRemoveDuplicates = async (preferences: MarkerPreference[]): Promise<MarkerPreference[]> => {\n    // Regrouper les préférences par type de site\n    const groupedBySiteType: { [key: string]: MarkerPreference[] } = {};\n    \n    preferences.forEach(pref => {\n      const siteType = pref.siteType.toLowerCase().trim();\n      if (!groupedBySiteType[siteType]) {\n        groupedBySiteType[siteType] = [];\n      }\n      groupedBySiteType[siteType].push(pref);\n    });\n    \n    // Identifier et supprimer les doublons\n    const duplicatesRemoved = [];\n    const updatedPreferences = [...preferences];\n    \n    for (const siteType in groupedBySiteType) {\n      const prefsForType = groupedBySiteType[siteType];\n      \n      if (prefsForType.length > 1) {\n        // Garder la première préférence et supprimer les autres\n        const [keepPref, ...duplicates] = prefsForType;\n        \n        for (const duplicate of duplicates) {\n          try {\n            const prefRef = doc(db, 'markerPreferences', duplicate.id);\n            await deleteDoc(prefRef);\n            duplicatesRemoved.push(duplicate);\n            \n            // Retirer le doublon de la liste des préférences\n            const index = updatedPreferences.findIndex(p => p.id === duplicate.id);\n            if (index !== -1) {\n              updatedPreferences.splice(index, 1);\n            }\n          } catch (error) {\n            console.error(`Erreur lors de la suppression du doublon ${duplicate.id}:`, error);\n          }\n        }\n      }\n    }\n    \n    if (duplicatesRemoved.length > 0) {\n      console.log(`${duplicatesRemoved.length} doublons de préférences ont été supprimés.`);\n    }\n    \n    return updatedPreferences;\n  };\n\n  const createDefaultPreferences = async (): Promise<MarkerPreference[]> => {\n    const defaultPreferences: Partial<MarkerPreference>[] = [\n      { siteType: 'Laboratoire', color: '#ff3b30', icon: 'droplet', name: 'Laboratoire' },\n      { siteType: 'Clinique', color: '#ffcc00', icon: 'droplet', name: 'Clinique' },\n      { siteType: 'Plateau technique', color: '#34c759', icon: 'droplet', name: 'Plateau technique' },\n      { siteType: 'Point de collecte', color: '#00c7be', icon: 'droplet', name: 'Point de collecte' },\n      { siteType: 'Etablissement de santé', color: '#007aff', icon: 'droplet', name: 'Établissement de santé' },\n      { siteType: 'Ehpad', color: '#af52de', icon: 'droplet', name: 'Ehpad' },\n      { siteType: 'Vétérinaire', color: '#ff2d55', icon: 'droplet', name: 'Vétérinaire' }\n    ];\n    \n    const createdPreferences: MarkerPreference[] = [];\n    \n    for (const pref of defaultPreferences) {\n      try {\n        // Vérifier si une préférence pour ce type de site existe déjà\n        const preferencesRef = collection(db, 'markerPreferences');\n        const q = query(preferencesRef, where(\"siteType\", \"==\", pref.siteType));\n        const snapshot = await getDocs(q);\n        \n        if (snapshot.empty) {\n          // Ajouter seulement si aucune préférence n'existe pour ce type de site\n          const docRef = await addDoc(collection(db, 'markerPreferences'), pref);\n          createdPreferences.push({\n            id: docRef.id,\n            ...pref\n          } as MarkerPreference);\n        } else {\n          // Utiliser la préférence existante\n          snapshot.docs.forEach(doc => {\n            createdPreferences.push({\n              id: doc.id,\n              ...doc.data()\n            } as MarkerPreference);\n          });\n        }\n      } catch (error) {\n        console.error('Erreur lors de la création des préférences par défaut:', error);\n      }\n    }\n    \n    return createdPreferences;\n  };\n\n  const toggleEditMode = () => {\n    if (editMode) {\n      // Sortir du mode édition sans sauvegarder\n      setEditingPreferences({});\n      setSelectedPreferences([]);\n      setSelectAll(false);\n    } else {\n      // Entrer en mode édition\n      const initialEditState: {[key: string]: MarkerPreference} = {};\n      preferences.forEach(pref => {\n        initialEditState[pref.id] = { ...pref };\n      });\n      setEditingPreferences(initialEditState);\n    }\n    setEditMode(!editMode);\n  };\n\n  const handleSave = async () => {\n    try {\n      setLoading(true);\n      \n      // Mettre à jour les préférences modifiées\n      for (const [id, pref] of Object.entries(editingPreferences)) {\n        const prefRef = doc(db, 'markerPreferences', id);\n        await updateDoc(prefRef, {\n          color: pref.color,\n          icon: pref.icon,\n          name: pref.name\n        });\n      }\n      \n      // Recharger les préférences\n      await fetchPreferences();\n      \n      // Sortir du mode édition\n      setEditMode(false);\n      setEditingPreferences({});\n      setSelectedPreferences([]);\n      setSelectAll(false);\n      \n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences:', error);\n      setError('Erreur lors de la sauvegarde des préférences');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleColorChange = (id: string, color: string) => {\n    setEditingPreferences({\n      ...editingPreferences,\n      [id]: {\n        ...editingPreferences[id],\n        color\n      }\n    });\n    \n    // Mettre à jour la prévisualisation\n    setPreviewColors({\n      ...previewColors,\n      [id]: color\n    });\n  };\n\n  const handleIconChange = (id: string, icon: string) => {\n    setEditingPreferences({\n      ...editingPreferences,\n      [id]: {\n        ...editingPreferences[id],\n        icon\n      }\n    });\n  };\n\n  const handleNameChange = (id: string, name: string) => {\n    setEditingPreferences({\n      ...editingPreferences,\n      [id]: {\n        ...editingPreferences[id],\n        name\n      }\n    });\n  };\n\n  // Fonction pour gérer la sélection/désélection d'une préférence\n  const togglePreferenceSelection = (id: string) => {\n    if (selectedPreferences.includes(id)) {\n      setSelectedPreferences(selectedPreferences.filter(prefId => prefId !== id));\n      // Si on désélectionne une préférence, on désactive aussi \"Tout sélectionner\"\n      setSelectAll(false);\n    } else {\n      setSelectedPreferences([...selectedPreferences, id]);\n      // Si toutes les préférences sont sélectionnées, on active \"Tout sélectionner\"\n      if (selectedPreferences.length + 1 === preferences.length) {\n        setSelectAll(true);\n      }\n    }\n  };\n\n  // Fonction pour gérer la sélection/désélection de toutes les préférences\n  const handleSelectAllChange = () => {\n    setSelectAll(!selectAll);\n  };\n\n  // Fonction pour supprimer les préférences sélectionnées\n  const handleDeleteSelected = async () => {\n    if (selectedPreferences.length === 0) {\n      return;\n    }\n\n    // Confirmation avant suppression\n    const confirmMessage = `Êtes-vous sûr de vouloir supprimer ${selectedPreferences.length} préférence(s) de marqueur ?`;\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Supprimer les préférences sélectionnées\n      for (const prefId of selectedPreferences) {\n        const prefRef = doc(db, 'markerPreferences', prefId);\n        await deleteDoc(prefRef);\n      }\n      \n      // Recharger les préférences\n      await fetchPreferences();\n      \n      // Réinitialiser les sélections\n      setSelectedPreferences([]);\n      setSelectAll(false);\n      \n    } catch (error) {\n      console.error('Erreur lors de la suppression des préférences:', error);\n      setError('Erreur lors de la suppression des préférences');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour ajouter une nouvelle préférence\n  const handleAddPreference = async () => {\n    try {\n      setLoading(true);\n      \n      // Créer une nouvelle préférence avec des valeurs par défaut\n      const newPreference: Partial<MarkerPreference> = {\n        siteType: '',\n        color: '#007aff',\n        icon: 'droplet',\n        name: 'Nouveau type'\n      };\n      \n      // Ajouter la nouvelle préférence à Firestore\n      const docRef = await addDoc(collection(db, 'markerPreferences'), newPreference);\n      \n      // Recharger les préférences\n      await fetchPreferences();\n      \n      // Activer le mode édition si ce n'est pas déjà le cas\n      if (!editMode) {\n        toggleEditMode();\n      }\n      \n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout d\\'une nouvelle préférence:', error);\n      setError('Erreur lors de l\\'ajout d\\'une nouvelle préférence');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderMarkerPreview = (preference: MarkerPreference) => {\n    const color = editMode \n      ? previewColors[preference.id] || preference.color\n      : preference.color;\n    \n    const icon = editMode \n      ? editingPreferences[preference.id]?.icon || preference.icon\n      : preference.icon;\n    \n    let iconClass = '';\n    \n    switch (icon) {\n      case 'droplet':\n        iconClass = 'fas fa-tint';\n        break;\n      case 'circle':\n        iconClass = 'fas fa-circle';\n        break;\n      case 'square':\n        iconClass = 'fas fa-square';\n        break;\n      case 'triangle':\n        iconClass = 'fas fa-triangle';\n        break;\n      case 'star':\n        iconClass = 'fas fa-star';\n        break;\n      case 'pin':\n        iconClass = 'fas fa-map-marker-alt';\n        break;\n      default:\n        iconClass = 'fas fa-tint';\n    }\n    \n    return (\n      <div className=\"marker-preview\" style={{ color }}>\n        <i className={iconClass}></i>\n      </div>\n    );\n  };\n\n  // Fonction pour réinitialiser les préférences aux valeurs par défaut\n  const handleResetToDefaults = async () => {\n    // Confirmation avant réinitialisation\n    const confirmMessage = \"Êtes-vous sûr de vouloir réinitialiser toutes les préférences de marqueurs aux valeurs par défaut ? Cette action supprimera toutes les personnalisations existantes.\";\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Supprimer toutes les préférences existantes\n      const preferencesRef = collection(db, 'markerPreferences');\n      const snapshot = await getDocs(preferencesRef);\n      \n      for (const doc of snapshot.docs) {\n        await deleteDoc(doc.ref);\n      }\n      \n      // Créer les préférences par défaut\n      await createDefaultPreferences();\n      \n      // Recharger les préférences\n      await fetchPreferences();\n      \n      // Réinitialiser les sélections\n      setSelectedPreferences([]);\n      setSelectAll(false);\n      \n      // Sortir du mode édition si actif\n      if (editMode) {\n        setEditMode(false);\n        setEditingPreferences({});\n      }\n      \n    } catch (error) {\n      console.error('Erreur lors de la réinitialisation des préférences:', error);\n      setError('Erreur lors de la réinitialisation des préférences');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading && preferences.length === 0) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Chargement des préférences de marqueurs...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"marker-preferences-container\">\n      <div className=\"section-header\">\n        <h2 className=\"section-title\">\n          Préférences des marqueurs\n          {selectedPreferences.length > 0 && (\n            <span className=\"selection-count\"> ({selectedPreferences.length} sélectionné{selectedPreferences.length > 1 ? 's' : ''})</span>\n          )}\n        </h2>\n        <div className=\"header-actions\">\n          {editMode ? (\n            <>\n              <button \n                className=\"button\" \n                onClick={handleSave}\n                disabled={loading}\n                style={{ \n                  backgroundColor: '#4CAF50',\n                  color: 'white',\n                  fontWeight: 'bold'\n                }}\n              >\n                <i className=\"fas fa-save\"></i> Enregistrer\n              </button>\n              {selectedPreferences.length > 0 && (\n                <button \n                  className=\"button\" \n                  onClick={handleDeleteSelected}\n                  disabled={loading}\n                  style={{ \n                    backgroundColor: '#f44336',\n                    color: 'white',\n                    marginLeft: '10px'\n                  }}\n                >\n                  <i className=\"fas fa-trash\"></i> Supprimer ({selectedPreferences.length})\n                </button>\n              )}\n              <button \n                className=\"button\" \n                onClick={handleAddPreference}\n                disabled={loading}\n                style={{ \n                  backgroundColor: '#2196F3',\n                  color: 'white',\n                  marginLeft: '10px'\n                }}\n              >\n                <i className=\"fas fa-plus\"></i> Ajouter\n              </button>\n              <button \n                className=\"button button-secondary\" \n                onClick={toggleEditMode}\n                style={{ marginLeft: '10px' }}\n                disabled={loading}\n              >\n                <i className=\"fas fa-times\"></i> Annuler\n              </button>\n            </>\n          ) : (\n            <>\n              <button \n                className=\"button\" \n                onClick={toggleEditMode}\n              >\n                <i className=\"fas fa-edit\"></i> Modifier\n              </button>\n              <button \n                className=\"button button-secondary\" \n                onClick={handleResetToDefaults}\n                disabled={loading}\n                style={{ marginLeft: '10px' }}\n              >\n                <i className=\"fas fa-undo\"></i> Réinitialiser\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <div className=\"preferences-table-container\">\n        <table className=\"preferences-table\">\n          <thead>\n            <tr>\n              {editMode && (\n                <th style={{ width: '40px', textAlign: 'center' }}>\n                  <input \n                    type=\"checkbox\" \n                    checked={selectAll}\n                    onChange={handleSelectAllChange}\n                    title=\"Sélectionner/Désélectionner tout\"\n                    id=\"select-all-checkbox\"\n                  />\n                  <label htmlFor=\"select-all-checkbox\" className=\"sr-only\">Sélectionner tout</label>\n                </th>\n              )}\n              <th>Aperçu</th>\n              <th>Type de site</th>\n              <th>Nom affiché</th>\n              <th>Couleur</th>\n              <th>Icône</th>\n            </tr>\n          </thead>\n          <tbody>\n            {preferences.length > 0 ? (\n              preferences.map(preference => (\n                <tr \n                  key={preference.id}\n                  className={selectedPreferences.includes(preference.id) ? 'selected-row' : ''}\n                  onClick={editMode ? () => togglePreferenceSelection(preference.id) : undefined}\n                  style={editMode ? { cursor: 'pointer' } : undefined}\n                >\n                  {editMode && (\n                    <td style={{ textAlign: 'center' }}>\n                      <input \n                        type=\"checkbox\" \n                        checked={selectedPreferences.includes(preference.id)} \n                        onChange={() => togglePreferenceSelection(preference.id)}\n                        title=\"Sélectionner cette préférence\"\n                        id={`select-preference-${preference.id}`}\n                        onClick={(e) => e.stopPropagation()}\n                      />\n                      <label htmlFor={`select-preference-${preference.id}`} className=\"sr-only\">\n                        Sélectionner {preference.name}\n                      </label>\n                    </td>\n                  )}\n                  <td>{renderMarkerPreview(preference)}</td>\n                  <td>{preference.siteType}</td>\n                  <td>\n                    {editMode ? (\n                      <input\n                        type=\"text\"\n                        value={editingPreferences[preference.id]?.name || preference.name}\n                        onChange={(e) => handleNameChange(preference.id, e.target.value)}\n                        className=\"edit-input\"\n                        aria-label={`Nom pour ${preference.siteType}`}\n                        placeholder={`Nom pour ${preference.siteType}`}\n                        onClick={(e) => e.stopPropagation()}\n                      />\n                    ) : (\n                      preference.name\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <select\n                        value={editingPreferences[preference.id]?.color || preference.color}\n                        onChange={(e) => handleColorChange(preference.id, e.target.value)}\n                        className=\"edit-select\"\n                        style={{ backgroundColor: previewColors[preference.id] || preference.color, color: '#fff' }}\n                        aria-label={`Couleur pour ${preference.siteType}`}\n                        title={`Sélectionner une couleur pour ${preference.siteType}`}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        {AVAILABLE_COLORS.map(color => (\n                          <option \n                            key={color.value} \n                            value={color.value}\n                            style={{ backgroundColor: color.value, color: '#fff' }}\n                          >\n                            {color.name}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <div className=\"color-preview\" style={{ backgroundColor: preference.color }}></div>\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <select\n                        value={editingPreferences[preference.id]?.icon || preference.icon}\n                        onChange={(e) => handleIconChange(preference.id, e.target.value)}\n                        className=\"edit-select\"\n                        aria-label={`Icône pour ${preference.siteType}`}\n                        title={`Sélectionner une icône pour ${preference.siteType}`}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        {AVAILABLE_ICONS.map(icon => (\n                          <option key={icon.value} value={icon.value}>\n                            {icon.name}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      AVAILABLE_ICONS.find(i => i.value === preference.icon)?.name || preference.icon\n                    )}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={editMode ? 6 : 5} className=\"no-results\">\n                  <div className=\"no-results-message\">\n                    <i className=\"fas fa-info-circle\"></i>\n                    <p>Aucune préférence de marqueur n'est définie</p>\n                  </div>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      \n      {selectedPreferences.length > 0 && editMode && (\n        <div className=\"selection-actions\">\n          <button \n            className=\"button\" \n            onClick={handleDeleteSelected}\n            disabled={loading}\n            style={{ \n              backgroundColor: '#f44336',\n              color: 'white'\n            }}\n          >\n            <i className=\"fas fa-trash\"></i> Supprimer les {selectedPreferences.length} élément{selectedPreferences.length > 1 ? 's' : ''} sélectionné{selectedPreferences.length > 1 ? 's' : ''}\n          </button>\n        </div>\n      )}\n      \n      <div className=\"preferences-info\">\n        <p>\n          <i className=\"fas fa-info-circle\"></i> Les modifications des préférences de marqueurs seront appliquées à la carte après l'enregistrement.\n        </p>\n        {editMode ? (\n          <p>\n            <i className=\"fas fa-lightbulb\"></i> Astuce : Cliquez sur une ligne pour la sélectionner rapidement.\n          </p>\n        ) : (\n          <p>\n            <i className=\"fas fa-undo\"></i> Vous pouvez réinitialiser toutes les préférences aux valeurs par défaut en cliquant sur le bouton \"Réinitialiser\".\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MarkerPreferences; \r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,EAAE,KAAQ,oBAAoB,CACvC,OACEC,UAAU,CACVC,OAAO,CACPC,MAAM,CACNC,SAAS,CACTC,SAAS,CACTC,GAAG,CAEHC,KAAK,CACLC,KAAK,KACA,oBAAoB,CAE3B,MAAO,yBAAyB,CAEhC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,KAAM,CAAAC,gBAAgB,CAAG,CACvB,CAAEC,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAE,SAAU,CAAC,CACnC,CAAED,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAE,SAAU,CAAC,CACnC,CAAED,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAC,CAClC,CAAED,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAC,CAClC,CAAED,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAC,CAClC,CAAED,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,SAAU,CAAC,CACrC,CAAED,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAC,CAClC,CAAED,IAAI,CAAE,QAAQ,CAAEC,KAAK,CAAE,SAAU,CAAC,CACpC,CAAED,IAAI,CAAE,QAAQ,CAAEC,KAAK,CAAE,SAAU,CAAC,CACpC,CAAED,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAC,CAClC,CAAED,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAC,CACnC,CAED;AACA,KAAM,CAAAC,eAAe,CAAG,CACtB,CAAEF,IAAI,CAAE,eAAe,CAAEC,KAAK,CAAE,SAAU,CAAC,CAC3C,CAAED,IAAI,CAAE,QAAQ,CAAEC,KAAK,CAAE,QAAS,CAAC,CACnC,CAAED,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAE,QAAS,CAAC,CAClC,CAAED,IAAI,CAAE,UAAU,CAAEC,KAAK,CAAE,UAAW,CAAC,CACvC,CAAED,IAAI,CAAE,QAAQ,CAAEC,KAAK,CAAE,MAAO,CAAC,CACjC,CAAED,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,KAAM,CAAC,CAClC,CAED;AACA,KAAM,CAAAE,UAAU,CAAG,CACjB,aAAa,CACb,UAAU,CACV,mBAAmB,CACnB,mBAAmB,CACnB,wBAAwB,CACxB,OAAO,CACP,aAAa,CACd,CAED,KAAM,CAAAC,iBAA2B,CAAGA,CAAA,GAAM,CACxC,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGxB,QAAQ,CAAqB,EAAE,CAAC,CACtE,KAAM,CAACyB,OAAO,CAAEC,UAAU,CAAC,CAAG1B,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC2B,KAAK,CAAEC,QAAQ,CAAC,CAAG5B,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAAC6B,QAAQ,CAAEC,WAAW,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAC+B,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGhC,QAAQ,CAAoC,CAAC,CAAC,CAAC,CACnG,KAAM,CAACiC,aAAa,CAAEC,gBAAgB,CAAC,CAAGlC,QAAQ,CAA0B,CAAC,CAAC,CAAC,CAE/E;AACA,KAAM,CAACmC,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGpC,QAAQ,CAAW,EAAE,CAAC,CAC5E,KAAM,CAACqC,SAAS,CAAEC,YAAY,CAAC,CAAGtC,QAAQ,CAAC,KAAK,CAAC,CAEjDC,SAAS,CAAC,IAAM,CACdsC,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN;AACAtC,SAAS,CAAC,IAAM,CACd,GAAIoC,SAAS,CAAE,CACbD,sBAAsB,CAACb,WAAW,CAACiB,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,CAAC,CAAC,CAC1D,CAAC,IAAM,IAAIP,mBAAmB,CAACQ,MAAM,GAAKpB,WAAW,CAACoB,MAAM,EAAIpB,WAAW,CAACoB,MAAM,CAAG,CAAC,CAAE,CACtFP,sBAAsB,CAAC,EAAE,CAAC,CAC5B,CACF,CAAC,CAAE,CAACC,SAAS,CAAEd,WAAW,CAAC,CAAC,CAE5B,KAAM,CAAAgB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACFb,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAkB,cAAc,CAAGzC,UAAU,CAACD,EAAE,CAAE,mBAAmB,CAAC,CAC1D,KAAM,CAAA2C,QAAQ,CAAG,KAAM,CAAAzC,OAAO,CAACwC,cAAc,CAAC,CAE9C,GAAI,CAAAE,eAAe,CAAGD,QAAQ,CAACE,IAAI,CAACP,GAAG,CAAChC,GAAG,GAAK,CAC9CkC,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACV,GAAGlC,GAAG,CAACwC,IAAI,CAAC,CACd,CAAC,CAAC,CAAuB,CAEzB;AACA,GAAIF,eAAe,CAACH,MAAM,GAAK,CAAC,CAAE,CAChCG,eAAe,CAAG,KAAM,CAAAG,wBAAwB,CAAC,CAAC,CACpD,CAAC,IAAM,CACL;AACAH,eAAe,CAAG,KAAM,CAAAI,wBAAwB,CAACJ,eAAe,CAAC,CACnE,CAEAtB,cAAc,CAACsB,eAAe,CAAC,CAE/B;AACA,KAAM,CAAAK,oBAA6C,CAAG,CAAC,CAAC,CACxDL,eAAe,CAACM,OAAO,CAACX,IAAI,EAAI,CAC9BU,oBAAoB,CAACV,IAAI,CAACC,EAAE,CAAC,CAAGD,IAAI,CAACY,KAAK,CAC5C,CAAC,CAAC,CACFnB,gBAAgB,CAACiB,oBAAoB,CAAC,CAExC,CAAE,MAAOxB,KAAK,CAAE,CACd2B,OAAO,CAAC3B,KAAK,CAAC,8DAA8D,CAAEA,KAAK,CAAC,CACpFC,QAAQ,CAAC,6DAA6D,CAAC,CACzE,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAwB,wBAAwB,CAAG,KAAO,CAAA3B,WAA+B,EAAkC,CACvG;AACA,KAAM,CAAAgC,iBAAwD,CAAG,CAAC,CAAC,CAEnEhC,WAAW,CAAC6B,OAAO,CAACX,IAAI,EAAI,CAC1B,KAAM,CAAAe,QAAQ,CAAGf,IAAI,CAACe,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CACnD,GAAI,CAACH,iBAAiB,CAACC,QAAQ,CAAC,CAAE,CAChCD,iBAAiB,CAACC,QAAQ,CAAC,CAAG,EAAE,CAClC,CACAD,iBAAiB,CAACC,QAAQ,CAAC,CAACG,IAAI,CAAClB,IAAI,CAAC,CACxC,CAAC,CAAC,CAEF;AACA,KAAM,CAAAmB,iBAAiB,CAAG,EAAE,CAC5B,KAAM,CAAAC,kBAAkB,CAAG,CAAC,GAAGtC,WAAW,CAAC,CAE3C,IAAK,KAAM,CAAAiC,QAAQ,GAAI,CAAAD,iBAAiB,CAAE,CACxC,KAAM,CAAAO,YAAY,CAAGP,iBAAiB,CAACC,QAAQ,CAAC,CAEhD,GAAIM,YAAY,CAACnB,MAAM,CAAG,CAAC,CAAE,CAC3B;AACA,KAAM,CAACoB,QAAQ,CAAE,GAAGC,UAAU,CAAC,CAAGF,YAAY,CAE9C,IAAK,KAAM,CAAAG,SAAS,GAAI,CAAAD,UAAU,CAAE,CAClC,GAAI,CACF,KAAM,CAAAE,OAAO,CAAG1D,GAAG,CAACN,EAAE,CAAE,mBAAmB,CAAE+D,SAAS,CAACvB,EAAE,CAAC,CAC1D,KAAM,CAAAnC,SAAS,CAAC2D,OAAO,CAAC,CACxBN,iBAAiB,CAACD,IAAI,CAACM,SAAS,CAAC,CAEjC;AACA,KAAM,CAAAE,KAAK,CAAGN,kBAAkB,CAACO,SAAS,CAACC,CAAC,EAAIA,CAAC,CAAC3B,EAAE,GAAKuB,SAAS,CAACvB,EAAE,CAAC,CACtE,GAAIyB,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBN,kBAAkB,CAACS,MAAM,CAACH,KAAK,CAAE,CAAC,CAAC,CACrC,CACF,CAAE,MAAOxC,KAAK,CAAE,CACd2B,OAAO,CAAC3B,KAAK,CAAC,4CAA4CsC,SAAS,CAACvB,EAAE,GAAG,CAAEf,KAAK,CAAC,CACnF,CACF,CACF,CACF,CAEA,GAAIiC,iBAAiB,CAACjB,MAAM,CAAG,CAAC,CAAE,CAChCW,OAAO,CAACiB,GAAG,CAAC,GAAGX,iBAAiB,CAACjB,MAAM,6CAA6C,CAAC,CACvF,CAEA,MAAO,CAAAkB,kBAAkB,CAC3B,CAAC,CAED,KAAM,CAAAZ,wBAAwB,CAAG,KAAAA,CAAA,GAAyC,CACxE,KAAM,CAAAuB,kBAA+C,CAAG,CACtD,CAAEhB,QAAQ,CAAE,aAAa,CAAEH,KAAK,CAAE,SAAS,CAAEoB,IAAI,CAAE,SAAS,CAAEvD,IAAI,CAAE,aAAc,CAAC,CACnF,CAAEsC,QAAQ,CAAE,UAAU,CAAEH,KAAK,CAAE,SAAS,CAAEoB,IAAI,CAAE,SAAS,CAAEvD,IAAI,CAAE,UAAW,CAAC,CAC7E,CAAEsC,QAAQ,CAAE,mBAAmB,CAAEH,KAAK,CAAE,SAAS,CAAEoB,IAAI,CAAE,SAAS,CAAEvD,IAAI,CAAE,mBAAoB,CAAC,CAC/F,CAAEsC,QAAQ,CAAE,mBAAmB,CAAEH,KAAK,CAAE,SAAS,CAAEoB,IAAI,CAAE,SAAS,CAAEvD,IAAI,CAAE,mBAAoB,CAAC,CAC/F,CAAEsC,QAAQ,CAAE,wBAAwB,CAAEH,KAAK,CAAE,SAAS,CAAEoB,IAAI,CAAE,SAAS,CAAEvD,IAAI,CAAE,wBAAyB,CAAC,CACzG,CAAEsC,QAAQ,CAAE,OAAO,CAAEH,KAAK,CAAE,SAAS,CAAEoB,IAAI,CAAE,SAAS,CAAEvD,IAAI,CAAE,OAAQ,CAAC,CACvE,CAAEsC,QAAQ,CAAE,aAAa,CAAEH,KAAK,CAAE,SAAS,CAAEoB,IAAI,CAAE,SAAS,CAAEvD,IAAI,CAAE,aAAc,CAAC,CACpF,CAED,KAAM,CAAAwD,kBAAsC,CAAG,EAAE,CAEjD,IAAK,KAAM,CAAAjC,IAAI,GAAI,CAAA+B,kBAAkB,CAAE,CACrC,GAAI,CACF;AACA,KAAM,CAAA5B,cAAc,CAAGzC,UAAU,CAACD,EAAE,CAAE,mBAAmB,CAAC,CAC1D,KAAM,CAAAyE,CAAC,CAAGlE,KAAK,CAACmC,cAAc,CAAElC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAE+B,IAAI,CAACe,QAAQ,CAAC,CAAC,CACvE,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAzC,OAAO,CAACuE,CAAC,CAAC,CAEjC,GAAI9B,QAAQ,CAAC+B,KAAK,CAAE,CAClB;AACA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAxE,MAAM,CAACF,UAAU,CAACD,EAAE,CAAE,mBAAmB,CAAC,CAAEuC,IAAI,CAAC,CACtEiC,kBAAkB,CAACf,IAAI,CAAC,CACtBjB,EAAE,CAAEmC,MAAM,CAACnC,EAAE,CACb,GAAGD,IACL,CAAqB,CAAC,CACxB,CAAC,IAAM,CACL;AACAI,QAAQ,CAACE,IAAI,CAACK,OAAO,CAAC5C,GAAG,EAAI,CAC3BkE,kBAAkB,CAACf,IAAI,CAAC,CACtBjB,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACV,GAAGlC,GAAG,CAACwC,IAAI,CAAC,CACd,CAAqB,CAAC,CACxB,CAAC,CAAC,CACJ,CACF,CAAE,MAAOrB,KAAK,CAAE,CACd2B,OAAO,CAAC3B,KAAK,CAAC,wDAAwD,CAAEA,KAAK,CAAC,CAChF,CACF,CAEA,MAAO,CAAA+C,kBAAkB,CAC3B,CAAC,CAED,KAAM,CAAAI,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIjD,QAAQ,CAAE,CACZ;AACAG,qBAAqB,CAAC,CAAC,CAAC,CAAC,CACzBI,sBAAsB,CAAC,EAAE,CAAC,CAC1BE,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,IAAM,CACL;AACA,KAAM,CAAAyC,gBAAmD,CAAG,CAAC,CAAC,CAC9DxD,WAAW,CAAC6B,OAAO,CAACX,IAAI,EAAI,CAC1BsC,gBAAgB,CAACtC,IAAI,CAACC,EAAE,CAAC,CAAG,CAAE,GAAGD,IAAK,CAAC,CACzC,CAAC,CAAC,CACFT,qBAAqB,CAAC+C,gBAAgB,CAAC,CACzC,CACAjD,WAAW,CAAC,CAACD,QAAQ,CAAC,CACxB,CAAC,CAED,KAAM,CAAAmD,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACFtD,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,IAAK,KAAM,CAACgB,EAAE,CAAED,IAAI,CAAC,EAAI,CAAAwC,MAAM,CAACC,OAAO,CAACnD,kBAAkB,CAAC,CAAE,CAC3D,KAAM,CAAAmC,OAAO,CAAG1D,GAAG,CAACN,EAAE,CAAE,mBAAmB,CAAEwC,EAAE,CAAC,CAChD,KAAM,CAAApC,SAAS,CAAC4D,OAAO,CAAE,CACvBb,KAAK,CAAEZ,IAAI,CAACY,KAAK,CACjBoB,IAAI,CAAEhC,IAAI,CAACgC,IAAI,CACfvD,IAAI,CAAEuB,IAAI,CAACvB,IACb,CAAC,CAAC,CACJ,CAEA;AACA,KAAM,CAAAqB,gBAAgB,CAAC,CAAC,CAExB;AACAT,WAAW,CAAC,KAAK,CAAC,CAClBE,qBAAqB,CAAC,CAAC,CAAC,CAAC,CACzBI,sBAAsB,CAAC,EAAE,CAAC,CAC1BE,YAAY,CAAC,KAAK,CAAC,CAErB,CAAE,MAAOX,KAAK,CAAE,CACd2B,OAAO,CAAC3B,KAAK,CAAC,+CAA+C,CAAEA,KAAK,CAAC,CACrEC,QAAQ,CAAC,8CAA8C,CAAC,CAC1D,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAyD,iBAAiB,CAAGA,CAACzC,EAAU,CAAEW,KAAa,GAAK,CACvDrB,qBAAqB,CAAC,CACpB,GAAGD,kBAAkB,CACrB,CAACW,EAAE,EAAG,CACJ,GAAGX,kBAAkB,CAACW,EAAE,CAAC,CACzBW,KACF,CACF,CAAC,CAAC,CAEF;AACAnB,gBAAgB,CAAC,CACf,GAAGD,aAAa,CAChB,CAACS,EAAE,EAAGW,KACR,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAA+B,gBAAgB,CAAGA,CAAC1C,EAAU,CAAE+B,IAAY,GAAK,CACrDzC,qBAAqB,CAAC,CACpB,GAAGD,kBAAkB,CACrB,CAACW,EAAE,EAAG,CACJ,GAAGX,kBAAkB,CAACW,EAAE,CAAC,CACzB+B,IACF,CACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAY,gBAAgB,CAAGA,CAAC3C,EAAU,CAAExB,IAAY,GAAK,CACrDc,qBAAqB,CAAC,CACpB,GAAGD,kBAAkB,CACrB,CAACW,EAAE,EAAG,CACJ,GAAGX,kBAAkB,CAACW,EAAE,CAAC,CACzBxB,IACF,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAoE,yBAAyB,CAAI5C,EAAU,EAAK,CAChD,GAAIP,mBAAmB,CAACoD,QAAQ,CAAC7C,EAAE,CAAC,CAAE,CACpCN,sBAAsB,CAACD,mBAAmB,CAACqD,MAAM,CAACC,MAAM,EAAIA,MAAM,GAAK/C,EAAE,CAAC,CAAC,CAC3E;AACAJ,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,IAAM,CACLF,sBAAsB,CAAC,CAAC,GAAGD,mBAAmB,CAAEO,EAAE,CAAC,CAAC,CACpD;AACA,GAAIP,mBAAmB,CAACQ,MAAM,CAAG,CAAC,GAAKpB,WAAW,CAACoB,MAAM,CAAE,CACzDL,YAAY,CAAC,IAAI,CAAC,CACpB,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAoD,qBAAqB,CAAGA,CAAA,GAAM,CAClCpD,YAAY,CAAC,CAACD,SAAS,CAAC,CAC1B,CAAC,CAED;AACA,KAAM,CAAAsD,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAIxD,mBAAmB,CAACQ,MAAM,GAAK,CAAC,CAAE,CACpC,OACF,CAEA;AACA,KAAM,CAAAiD,cAAc,CAAG,sCAAsCzD,mBAAmB,CAACQ,MAAM,8BAA8B,CACrH,GAAI,CAACkD,MAAM,CAACC,OAAO,CAACF,cAAc,CAAC,CAAE,CACnC,OACF,CAEA,GAAI,CACFlE,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,IAAK,KAAM,CAAA+D,MAAM,GAAI,CAAAtD,mBAAmB,CAAE,CACxC,KAAM,CAAA+B,OAAO,CAAG1D,GAAG,CAACN,EAAE,CAAE,mBAAmB,CAAEuF,MAAM,CAAC,CACpD,KAAM,CAAAlF,SAAS,CAAC2D,OAAO,CAAC,CAC1B,CAEA;AACA,KAAM,CAAA3B,gBAAgB,CAAC,CAAC,CAExB;AACAH,sBAAsB,CAAC,EAAE,CAAC,CAC1BE,YAAY,CAAC,KAAK,CAAC,CAErB,CAAE,MAAOX,KAAK,CAAE,CACd2B,OAAO,CAAC3B,KAAK,CAAC,gDAAgD,CAAEA,KAAK,CAAC,CACtEC,QAAQ,CAAC,+CAA+C,CAAC,CAC3D,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAqE,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACFrE,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,KAAM,CAAAsE,aAAwC,CAAG,CAC/CxC,QAAQ,CAAE,EAAE,CACZH,KAAK,CAAE,SAAS,CAChBoB,IAAI,CAAE,SAAS,CACfvD,IAAI,CAAE,cACR,CAAC,CAED;AACA,KAAM,CAAA2D,MAAM,CAAG,KAAM,CAAAxE,MAAM,CAACF,UAAU,CAACD,EAAE,CAAE,mBAAmB,CAAC,CAAE8F,aAAa,CAAC,CAE/E;AACA,KAAM,CAAAzD,gBAAgB,CAAC,CAAC,CAExB;AACA,GAAI,CAACV,QAAQ,CAAE,CACbiD,cAAc,CAAC,CAAC,CAClB,CAEF,CAAE,MAAOnD,KAAK,CAAE,CACd2B,OAAO,CAAC3B,KAAK,CAAC,qDAAqD,CAAEA,KAAK,CAAC,CAC3EC,QAAQ,CAAC,oDAAoD,CAAC,CAChE,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAuE,mBAAmB,CAAIC,UAA4B,EAAK,KAAAC,qBAAA,CAC5D,KAAM,CAAA9C,KAAK,CAAGxB,QAAQ,CAClBI,aAAa,CAACiE,UAAU,CAACxD,EAAE,CAAC,EAAIwD,UAAU,CAAC7C,KAAK,CAChD6C,UAAU,CAAC7C,KAAK,CAEpB,KAAM,CAAAoB,IAAI,CAAG5C,QAAQ,CACjB,EAAAsE,qBAAA,CAAApE,kBAAkB,CAACmE,UAAU,CAACxD,EAAE,CAAC,UAAAyD,qBAAA,iBAAjCA,qBAAA,CAAmC1B,IAAI,GAAIyB,UAAU,CAACzB,IAAI,CAC1DyB,UAAU,CAACzB,IAAI,CAEnB,GAAI,CAAA2B,SAAS,CAAG,EAAE,CAElB,OAAQ3B,IAAI,EACV,IAAK,SAAS,CACZ2B,SAAS,CAAG,aAAa,CACzB,MACF,IAAK,QAAQ,CACXA,SAAS,CAAG,eAAe,CAC3B,MACF,IAAK,QAAQ,CACXA,SAAS,CAAG,eAAe,CAC3B,MACF,IAAK,UAAU,CACbA,SAAS,CAAG,iBAAiB,CAC7B,MACF,IAAK,MAAM,CACTA,SAAS,CAAG,aAAa,CACzB,MACF,IAAK,KAAK,CACRA,SAAS,CAAG,uBAAuB,CACnC,MACF,QACEA,SAAS,CAAG,aAAa,CAC7B,CAEA,mBACExF,IAAA,QAAKyF,SAAS,CAAC,gBAAgB,CAACC,KAAK,CAAE,CAAEjD,KAAM,CAAE,CAAAkD,QAAA,cAC/C3F,IAAA,MAAGyF,SAAS,CAAED,SAAU,CAAI,CAAC,CAC1B,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAI,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CACxC;AACA,KAAM,CAAAZ,cAAc,CAAG,sKAAsK,CAC7L,GAAI,CAACC,MAAM,CAACC,OAAO,CAACF,cAAc,CAAC,CAAE,CACnC,OACF,CAEA,GAAI,CACFlE,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,KAAM,CAAAkB,cAAc,CAAGzC,UAAU,CAACD,EAAE,CAAE,mBAAmB,CAAC,CAC1D,KAAM,CAAA2C,QAAQ,CAAG,KAAM,CAAAzC,OAAO,CAACwC,cAAc,CAAC,CAE9C,IAAK,KAAM,CAAApC,GAAG,GAAI,CAAAqC,QAAQ,CAACE,IAAI,CAAE,CAC/B,KAAM,CAAAxC,SAAS,CAACC,GAAG,CAACiG,GAAG,CAAC,CAC1B,CAEA;AACA,KAAM,CAAAxD,wBAAwB,CAAC,CAAC,CAEhC;AACA,KAAM,CAAAV,gBAAgB,CAAC,CAAC,CAExB;AACAH,sBAAsB,CAAC,EAAE,CAAC,CAC1BE,YAAY,CAAC,KAAK,CAAC,CAEnB;AACA,GAAIT,QAAQ,CAAE,CACZC,WAAW,CAAC,KAAK,CAAC,CAClBE,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAC3B,CAEF,CAAE,MAAOL,KAAK,CAAE,CACd2B,OAAO,CAAC3B,KAAK,CAAC,qDAAqD,CAAEA,KAAK,CAAC,CAC3EC,QAAQ,CAAC,oDAAoD,CAAC,CAChE,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,GAAID,OAAO,EAAIF,WAAW,CAACoB,MAAM,GAAK,CAAC,CAAE,CACvC,mBACE7B,KAAA,QAAKuF,SAAS,CAAC,mBAAmB,CAAAE,QAAA,eAChC3F,IAAA,QAAKyF,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvCzF,IAAA,MAAA2F,QAAA,CAAG,kDAA0C,CAAG,CAAC,EAC9C,CAAC,CAEV,CAEA,mBACEzF,KAAA,QAAKuF,SAAS,CAAC,8BAA8B,CAAAE,QAAA,eAC3CzF,KAAA,QAAKuF,SAAS,CAAC,gBAAgB,CAAAE,QAAA,eAC7BzF,KAAA,OAAIuF,SAAS,CAAC,eAAe,CAAAE,QAAA,EAAC,iCAE5B,CAACpE,mBAAmB,CAACQ,MAAM,CAAG,CAAC,eAC7B7B,KAAA,SAAMuF,SAAS,CAAC,iBAAiB,CAAAE,QAAA,EAAC,IAAE,CAACpE,mBAAmB,CAACQ,MAAM,CAAC,oBAAY,CAACR,mBAAmB,CAACQ,MAAM,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAC,GAAC,EAAM,CAC/H,EACC,CAAC,cACL/B,IAAA,QAAKyF,SAAS,CAAC,gBAAgB,CAAAE,QAAA,CAC5B1E,QAAQ,cACPf,KAAA,CAAAE,SAAA,EAAAuF,QAAA,eACEzF,KAAA,WACEuF,SAAS,CAAC,QAAQ,CAClBK,OAAO,CAAE1B,UAAW,CACpB2B,QAAQ,CAAElF,OAAQ,CAClB6E,KAAK,CAAE,CACLM,eAAe,CAAE,SAAS,CAC1BvD,KAAK,CAAE,OAAO,CACdwD,UAAU,CAAE,MACd,CAAE,CAAAN,QAAA,eAEF3F,IAAA,MAAGyF,SAAS,CAAC,aAAa,CAAI,CAAC,eACjC,EAAQ,CAAC,CACRlE,mBAAmB,CAACQ,MAAM,CAAG,CAAC,eAC7B7B,KAAA,WACEuF,SAAS,CAAC,QAAQ,CAClBK,OAAO,CAAEf,oBAAqB,CAC9BgB,QAAQ,CAAElF,OAAQ,CAClB6E,KAAK,CAAE,CACLM,eAAe,CAAE,SAAS,CAC1BvD,KAAK,CAAE,OAAO,CACdyD,UAAU,CAAE,MACd,CAAE,CAAAP,QAAA,eAEF3F,IAAA,MAAGyF,SAAS,CAAC,cAAc,CAAI,CAAC,eAAY,CAAClE,mBAAmB,CAACQ,MAAM,CAAC,GAC1E,EAAQ,CACT,cACD7B,KAAA,WACEuF,SAAS,CAAC,QAAQ,CAClBK,OAAO,CAAEX,mBAAoB,CAC7BY,QAAQ,CAAElF,OAAQ,CAClB6E,KAAK,CAAE,CACLM,eAAe,CAAE,SAAS,CAC1BvD,KAAK,CAAE,OAAO,CACdyD,UAAU,CAAE,MACd,CAAE,CAAAP,QAAA,eAEF3F,IAAA,MAAGyF,SAAS,CAAC,aAAa,CAAI,CAAC,WACjC,EAAQ,CAAC,cACTvF,KAAA,WACEuF,SAAS,CAAC,yBAAyB,CACnCK,OAAO,CAAE5B,cAAe,CACxBwB,KAAK,CAAE,CAAEQ,UAAU,CAAE,MAAO,CAAE,CAC9BH,QAAQ,CAAElF,OAAQ,CAAA8E,QAAA,eAElB3F,IAAA,MAAGyF,SAAS,CAAC,cAAc,CAAI,CAAC,WAClC,EAAQ,CAAC,EACT,CAAC,cAEHvF,KAAA,CAAAE,SAAA,EAAAuF,QAAA,eACEzF,KAAA,WACEuF,SAAS,CAAC,QAAQ,CAClBK,OAAO,CAAE5B,cAAe,CAAAyB,QAAA,eAExB3F,IAAA,MAAGyF,SAAS,CAAC,aAAa,CAAI,CAAC,YACjC,EAAQ,CAAC,cACTvF,KAAA,WACEuF,SAAS,CAAC,yBAAyB,CACnCK,OAAO,CAAEF,qBAAsB,CAC/BG,QAAQ,CAAElF,OAAQ,CAClB6E,KAAK,CAAE,CAAEQ,UAAU,CAAE,MAAO,CAAE,CAAAP,QAAA,eAE9B3F,IAAA,MAAGyF,SAAS,CAAC,aAAa,CAAI,CAAC,oBACjC,EAAQ,CAAC,EACT,CACH,CACE,CAAC,EACH,CAAC,CAEL1E,KAAK,eAAIf,IAAA,QAAKyF,SAAS,CAAC,eAAe,CAAAE,QAAA,CAAE5E,KAAK,CAAM,CAAC,cAEtDf,IAAA,QAAKyF,SAAS,CAAC,6BAA6B,CAAAE,QAAA,cAC1CzF,KAAA,UAAOuF,SAAS,CAAC,mBAAmB,CAAAE,QAAA,eAClC3F,IAAA,UAAA2F,QAAA,cACEzF,KAAA,OAAAyF,QAAA,EACG1E,QAAQ,eACPf,KAAA,OAAIwF,KAAK,CAAE,CAAES,KAAK,CAAE,MAAM,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAT,QAAA,eAChD3F,IAAA,UACEqG,IAAI,CAAC,UAAU,CACfC,OAAO,CAAE7E,SAAU,CACnB8E,QAAQ,CAAEzB,qBAAsB,CAChC0B,KAAK,CAAC,2CAAkC,CACxC1E,EAAE,CAAC,qBAAqB,CACzB,CAAC,cACF9B,IAAA,UAAOyG,OAAO,CAAC,qBAAqB,CAAChB,SAAS,CAAC,SAAS,CAAAE,QAAA,CAAC,sBAAiB,CAAO,CAAC,EAChF,CACL,cACD3F,IAAA,OAAA2F,QAAA,CAAI,WAAM,CAAI,CAAC,cACf3F,IAAA,OAAA2F,QAAA,CAAI,cAAY,CAAI,CAAC,cACrB3F,IAAA,OAAA2F,QAAA,CAAI,gBAAW,CAAI,CAAC,cACpB3F,IAAA,OAAA2F,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB3F,IAAA,OAAA2F,QAAA,CAAI,UAAK,CAAI,CAAC,EACZ,CAAC,CACA,CAAC,cACR3F,IAAA,UAAA2F,QAAA,CACGhF,WAAW,CAACoB,MAAM,CAAG,CAAC,CACrBpB,WAAW,CAACiB,GAAG,CAAC0D,UAAU,OAAAoB,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,qBAAA,oBACxB3G,KAAA,OAEEuF,SAAS,CAAElE,mBAAmB,CAACoD,QAAQ,CAACW,UAAU,CAACxD,EAAE,CAAC,CAAG,cAAc,CAAG,EAAG,CAC7EgE,OAAO,CAAE7E,QAAQ,CAAG,IAAMyD,yBAAyB,CAACY,UAAU,CAACxD,EAAE,CAAC,CAAGgF,SAAU,CAC/EpB,KAAK,CAAEzE,QAAQ,CAAG,CAAE8F,MAAM,CAAE,SAAU,CAAC,CAAGD,SAAU,CAAAnB,QAAA,EAEnD1E,QAAQ,eACPf,KAAA,OAAIwF,KAAK,CAAE,CAAEU,SAAS,CAAE,QAAS,CAAE,CAAAT,QAAA,eACjC3F,IAAA,UACEqG,IAAI,CAAC,UAAU,CACfC,OAAO,CAAE/E,mBAAmB,CAACoD,QAAQ,CAACW,UAAU,CAACxD,EAAE,CAAE,CACrDyE,QAAQ,CAAEA,CAAA,GAAM7B,yBAAyB,CAACY,UAAU,CAACxD,EAAE,CAAE,CACzD0E,KAAK,CAAC,wCAA+B,CACrC1E,EAAE,CAAE,qBAAqBwD,UAAU,CAACxD,EAAE,EAAG,CACzCgE,OAAO,CAAGkB,CAAC,EAAKA,CAAC,CAACC,eAAe,CAAC,CAAE,CACrC,CAAC,cACF/G,KAAA,UAAOuG,OAAO,CAAE,qBAAqBnB,UAAU,CAACxD,EAAE,EAAG,CAAC2D,SAAS,CAAC,SAAS,CAAAE,QAAA,EAAC,kBAC3D,CAACL,UAAU,CAAChF,IAAI,EACxB,CAAC,EACN,CACL,cACDN,IAAA,OAAA2F,QAAA,CAAKN,mBAAmB,CAACC,UAAU,CAAC,CAAK,CAAC,cAC1CtF,IAAA,OAAA2F,QAAA,CAAKL,UAAU,CAAC1C,QAAQ,CAAK,CAAC,cAC9B5C,IAAA,OAAA2F,QAAA,CACG1E,QAAQ,cACPjB,IAAA,UACEqG,IAAI,CAAC,MAAM,CACX9F,KAAK,CAAE,EAAAmG,sBAAA,CAAAvF,kBAAkB,CAACmE,UAAU,CAACxD,EAAE,CAAC,UAAA4E,sBAAA,iBAAjCA,sBAAA,CAAmCpG,IAAI,GAAIgF,UAAU,CAAChF,IAAK,CAClEiG,QAAQ,CAAGS,CAAC,EAAKvC,gBAAgB,CAACa,UAAU,CAACxD,EAAE,CAAEkF,CAAC,CAACE,MAAM,CAAC3G,KAAK,CAAE,CACjEkF,SAAS,CAAC,YAAY,CACtB,aAAY,YAAYH,UAAU,CAAC1C,QAAQ,EAAG,CAC9CuE,WAAW,CAAE,YAAY7B,UAAU,CAAC1C,QAAQ,EAAG,CAC/CkD,OAAO,CAAGkB,CAAC,EAAKA,CAAC,CAACC,eAAe,CAAC,CAAE,CACrC,CAAC,CAEF3B,UAAU,CAAChF,IACZ,CACC,CAAC,cACLN,IAAA,OAAA2F,QAAA,CACG1E,QAAQ,cACPjB,IAAA,WACEO,KAAK,CAAE,EAAAoG,sBAAA,CAAAxF,kBAAkB,CAACmE,UAAU,CAACxD,EAAE,CAAC,UAAA6E,sBAAA,iBAAjCA,sBAAA,CAAmClE,KAAK,GAAI6C,UAAU,CAAC7C,KAAM,CACpE8D,QAAQ,CAAGS,CAAC,EAAKzC,iBAAiB,CAACe,UAAU,CAACxD,EAAE,CAAEkF,CAAC,CAACE,MAAM,CAAC3G,KAAK,CAAE,CAClEkF,SAAS,CAAC,aAAa,CACvBC,KAAK,CAAE,CAAEM,eAAe,CAAE3E,aAAa,CAACiE,UAAU,CAACxD,EAAE,CAAC,EAAIwD,UAAU,CAAC7C,KAAK,CAAEA,KAAK,CAAE,MAAO,CAAE,CAC5F,aAAY,gBAAgB6C,UAAU,CAAC1C,QAAQ,EAAG,CAClD4D,KAAK,CAAE,iCAAiClB,UAAU,CAAC1C,QAAQ,EAAG,CAC9DkD,OAAO,CAAGkB,CAAC,EAAKA,CAAC,CAACC,eAAe,CAAC,CAAE,CAAAtB,QAAA,CAEnCtF,gBAAgB,CAACuB,GAAG,CAACa,KAAK,eACzBzC,IAAA,WAEEO,KAAK,CAAEkC,KAAK,CAAClC,KAAM,CACnBmF,KAAK,CAAE,CAAEM,eAAe,CAAEvD,KAAK,CAAClC,KAAK,CAAEkC,KAAK,CAAE,MAAO,CAAE,CAAAkD,QAAA,CAEtDlD,KAAK,CAACnC,IAAI,EAJNmC,KAAK,CAAClC,KAKL,CACT,CAAC,CACI,CAAC,cAETP,IAAA,QAAKyF,SAAS,CAAC,eAAe,CAACC,KAAK,CAAE,CAAEM,eAAe,CAAEV,UAAU,CAAC7C,KAAM,CAAE,CAAM,CACnF,CACC,CAAC,cACLzC,IAAA,OAAA2F,QAAA,CACG1E,QAAQ,cACPjB,IAAA,WACEO,KAAK,CAAE,EAAAqG,sBAAA,CAAAzF,kBAAkB,CAACmE,UAAU,CAACxD,EAAE,CAAC,UAAA8E,sBAAA,iBAAjCA,sBAAA,CAAmC/C,IAAI,GAAIyB,UAAU,CAACzB,IAAK,CAClE0C,QAAQ,CAAGS,CAAC,EAAKxC,gBAAgB,CAACc,UAAU,CAACxD,EAAE,CAAEkF,CAAC,CAACE,MAAM,CAAC3G,KAAK,CAAE,CACjEkF,SAAS,CAAC,aAAa,CACvB,aAAY,cAAcH,UAAU,CAAC1C,QAAQ,EAAG,CAChD4D,KAAK,CAAE,+BAA+BlB,UAAU,CAAC1C,QAAQ,EAAG,CAC5DkD,OAAO,CAAGkB,CAAC,EAAKA,CAAC,CAACC,eAAe,CAAC,CAAE,CAAAtB,QAAA,CAEnCnF,eAAe,CAACoB,GAAG,CAACiC,IAAI,eACvB7D,IAAA,WAAyBO,KAAK,CAAEsD,IAAI,CAACtD,KAAM,CAAAoF,QAAA,CACxC9B,IAAI,CAACvD,IAAI,EADCuD,IAAI,CAACtD,KAEV,CACT,CAAC,CACI,CAAC,CAET,EAAAsG,qBAAA,CAAArG,eAAe,CAAC4G,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC9G,KAAK,GAAK+E,UAAU,CAACzB,IAAI,CAAC,UAAAgD,qBAAA,iBAAtDA,qBAAA,CAAwDvG,IAAI,GAAIgF,UAAU,CAACzB,IAC5E,CACC,CAAC,GAjFAyB,UAAU,CAACxD,EAkFd,CAAC,EACN,CAAC,cAEF9B,IAAA,OAAA2F,QAAA,cACE3F,IAAA,OAAIsH,OAAO,CAAErG,QAAQ,CAAG,CAAC,CAAG,CAAE,CAACwE,SAAS,CAAC,YAAY,CAAAE,QAAA,cACnDzF,KAAA,QAAKuF,SAAS,CAAC,oBAAoB,CAAAE,QAAA,eACjC3F,IAAA,MAAGyF,SAAS,CAAC,oBAAoB,CAAI,CAAC,cACtCzF,IAAA,MAAA2F,QAAA,CAAG,sDAA2C,CAAG,CAAC,EAC/C,CAAC,CACJ,CAAC,CACH,CACL,CACI,CAAC,EACH,CAAC,CACL,CAAC,CAELpE,mBAAmB,CAACQ,MAAM,CAAG,CAAC,EAAId,QAAQ,eACzCjB,IAAA,QAAKyF,SAAS,CAAC,mBAAmB,CAAAE,QAAA,cAChCzF,KAAA,WACEuF,SAAS,CAAC,QAAQ,CAClBK,OAAO,CAAEf,oBAAqB,CAC9BgB,QAAQ,CAAElF,OAAQ,CAClB6E,KAAK,CAAE,CACLM,eAAe,CAAE,SAAS,CAC1BvD,KAAK,CAAE,OACT,CAAE,CAAAkD,QAAA,eAEF3F,IAAA,MAAGyF,SAAS,CAAC,cAAc,CAAI,CAAC,kBAAe,CAAClE,mBAAmB,CAACQ,MAAM,CAAC,gBAAQ,CAACR,mBAAmB,CAACQ,MAAM,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAC,oBAAY,CAACR,mBAAmB,CAACQ,MAAM,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,EAC9K,CAAC,CACN,CACN,cAED7B,KAAA,QAAKuF,SAAS,CAAC,kBAAkB,CAAAE,QAAA,eAC/BzF,KAAA,MAAAyF,QAAA,eACE3F,IAAA,MAAGyF,SAAS,CAAC,oBAAoB,CAAI,CAAC,sHACxC,EAAG,CAAC,CACHxE,QAAQ,cACPf,KAAA,MAAAyF,QAAA,eACE3F,IAAA,MAAGyF,SAAS,CAAC,kBAAkB,CAAI,CAAC,sEACtC,EAAG,CAAC,cAEJvF,KAAA,MAAAyF,QAAA,eACE3F,IAAA,MAAGyF,SAAS,CAAC,aAAa,CAAI,CAAC,uIACjC,EAAG,CACJ,EACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/E,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}