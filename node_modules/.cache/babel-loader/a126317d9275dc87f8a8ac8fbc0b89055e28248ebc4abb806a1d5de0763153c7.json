{"ast":null,"code":"import{collection,query,where,getDocs,addDoc,updateDoc,deleteDoc,doc,getDoc}from'firebase/firestore';import{ref,uploadBytes,getDownloadURL}from'firebase/storage';import{db}from'../config/firebase';import{getStorage}from'firebase/storage';class VehicleService{constructor(){this.collection=collection(db,'vehicles');this.documentsCollection=collection(db,'documents');this.maintenanceCollection=collection(db,'maintenance');this.storage=getStorage();this.storageBasePath='vehicles';this.initialized=false;// Données par défaut pour les véhicules\nthis.defaultVehicles=[{brand:'Renault',model:'Kangoo',registrationNumber:'GE-695-RT',type:'van',status:'active',purchaseDate:'2020-01-01',lastMaintenanceDate:'2023-01-15',nextMaintenanceDate:'2023-07-15',mileage:45000,fuelType:'diesel',capacity:800,notes:'Véhicule utilitaire principal',documents:[],inspections:[],maintenanceHistory:[],insuranceInfo:{provider:'AXA',policyNumber:'AX123456789',validFrom:'2023-01-01',validUntil:'2024-01-01',coverageType:'comprehensive',monthlyPremium:120,currency:'EUR',documents:[]},technicalSpecifications:{vin:'VF1FW1AB123456789',year:2020,engine:{type:'Diesel 1.5 dCi',power:85,cylinderCapacity:1461},transmission:'manual',weight:1485,dimensions:{length:4490,width:1830,height:1835},maxPayload:650,fuelConsumption:{urban:5.5,extraUrban:4.6,combined:5.0},emissions:{co2:131,emissionStandard:'Euro 6d'},tires:{frontSize:'195/65 R15',rearSize:'195/65 R15',recommendedPressure:{front:2.5,rear:2.5}}},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{brand:'Citroën',model:'Berlingo',registrationNumber:'GI-456-AD',type:'van',status:'active',purchaseDate:'2021-01-01',lastMaintenanceDate:'2023-02-10',nextMaintenanceDate:'2023-08-10',mileage:32500,fuelType:'diesel',capacity:800,notes:'Véhicule utilitaire secondaire',documents:[],inspections:[],maintenanceHistory:[],insuranceInfo:{provider:'MMA',policyNumber:'MM789654321',validFrom:'2023-01-01',validUntil:'2024-01-01',coverageType:'comprehensive',monthlyPremium:110,currency:'EUR',documents:[]},technicalSpecifications:{vin:'VF7GBHFXBEUR567890',year:2021,engine:{type:'Diesel 1.5 BlueHDi',power:100,cylinderCapacity:1499},transmission:'manual',weight:1532,dimensions:{length:4650,width:1850,height:1860},maxPayload:700,fuelConsumption:{urban:5.0,extraUrban:4.2,combined:4.6},emissions:{co2:120,emissionStandard:'Euro 6d'},tires:{frontSize:'205/60 R16',rearSize:'205/60 R16',recommendedPressure:{front:2.5,rear:2.5}}},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{brand:'Renault',model:'Clio',registrationNumber:'GL-789-BA',type:'car',status:'active',purchaseDate:'2022-01-01',lastMaintenanceDate:'2023-02-20',nextMaintenanceDate:'2023-08-20',mileage:15800,fuelType:'petrol',notes:'Véhicule de service',documents:[],inspections:[],maintenanceHistory:[],insuranceInfo:{provider:'Generali',policyNumber:'GE567891234',validFrom:'2023-01-01',validUntil:'2024-01-01',coverageType:'comprehensive',monthlyPremium:90,currency:'EUR',documents:[]},technicalSpecifications:{vin:'VF1RJA00067123456',year:2022,engine:{type:'Petrol 1.0 TCe',power:90,cylinderCapacity:999},transmission:'manual',weight:1178,dimensions:{length:4050,width:1798,height:1440},fuelConsumption:{urban:6.2,extraUrban:4.5,combined:5.1},emissions:{co2:118,emissionStandard:'Euro 6d'},tires:{frontSize:'195/55 R16',rearSize:'195/55 R16',recommendedPressure:{front:2.2,rear:2.0}}},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];}// Initialiser les véhicules par défaut\nasync initializeDefaultVehicles(){try{const snapshot=await getDocs(this.collection);if(snapshot.empty){console.log('Initialisation des véhicules par défaut...');for(const vehicle of this.defaultVehicles){await this.createVehicle(vehicle);}console.log('Véhicules par défaut initialisés avec succès');}else{console.log('La collection de véhicules n\\'est pas vide, pas d\\'initialisation nécessaire');}}catch(error){console.error('Erreur lors de l\\'initialisation des véhicules par défaut:',error);throw error;}}// Récupérer tous les véhicules avec filtres optionnels\nasync getVehicles(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{let q=query(this.collection);// Appliquer les filtres\nif(filters.type){q=query(q,where('type','==',filters.type));}if(filters.status){q=query(q,where('status','==',filters.status));}if(filters.assignedDriver){q=query(q,where('assignedDriver','==',filters.assignedDriver));}// Recherche par texte\nif(filters.search){const searchTerm=filters.search.toLowerCase();const snapshot=await getDocs(this.collection);return snapshot.docs.map(doc=>({id:doc.id,...doc.data()})).filter(vehicle=>vehicle.brand.toLowerCase().includes(searchTerm)||vehicle.model.toLowerCase().includes(searchTerm)||vehicle.registrationNumber.toLowerCase().includes(searchTerm));}const snapshot=await getDocs(q);const vehicles=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));// Appliquer les filtres supplémentaires en mémoire\nreturn vehicles.filter(vehicle=>{if(filters.minMileage&&vehicle.mileage<filters.minMileage)return false;if(filters.maxMileage&&vehicle.mileage>filters.maxMileage)return false;if(filters.needsMaintenance){const nextMaintenance=new Date(vehicle.nextMaintenanceDate);const today=new Date();return nextMaintenance<=today;}if(filters.documentExpiresWithin&&filters.documentExpiresWithin>0){const today=new Date();const futureDate=new Date(today);futureDate.setDate(today.getDate()+filters.documentExpiresWithin);return vehicle.documents.some(doc=>{if(doc.expiryDate){const expiryDate=new Date(doc.expiryDate);return expiryDate<=futureDate&&expiryDate>=today;}return false;});}if(filters.lastInspectionStatus&&vehicle.inspections.length>0){// Trouver la dernière inspection\nconst lastInspection=vehicle.inspections.sort((a,b)=>new Date(b.date).getTime()-new Date(a.date).getTime())[0];return lastInspection.status===filters.lastInspectionStatus;}return true;});}catch(error){console.error('Erreur lors de la récupération des véhicules:',error);throw error;}}// Récupérer un véhicule par son ID\nasync getVehicleById(id){try{const docRef=doc(this.collection,id);const docSnap=await getDoc(docRef);if(docSnap.exists()){return{id:docSnap.id,...docSnap.data()};}return null;}catch(error){console.error('Erreur lors de la récupération du véhicule:',error);throw error;}}// Créer un nouveau véhicule\nasync createVehicle(vehicle){try{const docRef=await addDoc(this.collection,{...vehicle,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});return{id:docRef.id,...vehicle};}catch(error){console.error('Erreur lors de la création du véhicule:',error);throw error;}}// Mettre à jour un véhicule existant\nasync updateVehicle(id,data){try{const docRef=doc(this.collection,id);await updateDoc(docRef,{...data,updatedAt:new Date().toISOString()});}catch(error){console.error('Erreur lors de la mise à jour du véhicule:',error);throw error;}}// Supprimer un véhicule\nasync deleteVehicle(id){try{const docRef=doc(this.collection,id);await deleteDoc(docRef);}catch(error){console.error('Erreur lors de la suppression du véhicule:',error);throw error;}}// ===== Gestion des documents =====\n// Ajouter un document à un véhicule\nasync addDocumentToVehicle(vehicleId,document){try{const docRef=await addDoc(this.documentsCollection,{...document,vehicleId,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});return{id:docRef.id,...document};}catch(error){console.error('Erreur lors de l\\'ajout du document au véhicule:',error);throw error;}}// Mettre à jour un document\nasync updateDocument(documentId,data){try{const docRef=doc(this.documentsCollection,documentId);await updateDoc(docRef,{...data,updatedAt:new Date().toISOString()});}catch(error){console.error('Erreur lors de la mise à jour du document:',error);throw error;}}// Supprimer un document\nasync deleteDocument(documentId){try{const docRef=doc(this.documentsCollection,documentId);await deleteDoc(docRef);}catch(error){console.error('Erreur lors de la suppression du document:',error);throw error;}}// Uploader un document\nasync uploadDocument(vehicleId,file){try{const timestamp=Date.now();const fileName=`${vehicleId}/${timestamp}_${file.name}`;const storageRef=ref(this.storage,`${this.storageBasePath}/${fileName}`);await uploadBytes(storageRef,file);const url=await getDownloadURL(storageRef);// Pour les images, créer une miniature\nlet thumbnailUrl=url;if(file.type.startsWith('image/')){const thumbnailRef=ref(this.storage,`${this.storageBasePath}/${vehicleId}/${timestamp}_thumb_${file.name}`);// TODO: Implémenter la création de miniature\nthumbnailUrl=url;}return{url,thumbnailUrl};}catch(error){console.error('Erreur lors de l\\'upload du document:',error);throw error;}}// ===== Gestion de la maintenance =====\n// Ajouter un enregistrement de maintenance\nasync addMaintenanceRecord(vehicleId,record){try{const docRef=await addDoc(this.maintenanceCollection,{...record,vehicleId,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});return{id:docRef.id,...record};}catch(error){console.error('Erreur lors de l\\'ajout de l\\'enregistrement de maintenance:',error);throw error;}}// Mettre à jour un enregistrement de maintenance\nasync updateMaintenanceRecord(recordId,data){try{const docRef=doc(this.maintenanceCollection,recordId);await updateDoc(docRef,{...data,updatedAt:new Date().toISOString()});}catch(error){console.error('Erreur lors de la mise à jour de l\\'enregistrement de maintenance:',error);throw error;}}// Supprimer un enregistrement de maintenance\nasync deleteMaintenanceRecord(recordId){try{const docRef=doc(this.maintenanceCollection,recordId);await deleteDoc(docRef);}catch(error){console.error('Erreur lors de la suppression de l\\'enregistrement de maintenance:',error);throw error;}}// ===== Gestion des informations d'assurance =====\n// Mettre à jour les informations d'assurance\nasync updateInsuranceInfo(vehicleId,insuranceInfo){try{const docRef=doc(this.collection,vehicleId);await updateDoc(docRef,{insuranceInfo,updatedAt:new Date().toISOString()});}catch(error){console.error('Erreur lors de la mise à jour des informations d\\'assurance:',error);throw error;}}async updateTechnicalSpecifications(vehicleId,specifications){try{const docRef=doc(this.collection,vehicleId);await updateDoc(docRef,{technicalSpecifications:specifications,updatedAt:new Date().toISOString()});}catch(error){console.error('Erreur lors de la mise à jour des spécifications techniques:',error);throw error;}}}export const vehicleService=new VehicleService();","map":{"version":3,"names":["collection","query","where","getDocs","addDoc","updateDoc","deleteDoc","doc","getDoc","ref","uploadBytes","getDownloadURL","db","getStorage","VehicleService","constructor","documentsCollection","maintenanceCollection","storage","storageBasePath","initialized","defaultVehicles","brand","model","registrationNumber","type","status","purchaseDate","lastMaintenanceDate","nextMaintenanceDate","mileage","fuelType","capacity","notes","documents","inspections","maintenanceHistory","insuranceInfo","provider","policyNumber","validFrom","validUntil","coverageType","monthlyPremium","currency","technicalSpecifications","vin","year","engine","power","cylinderCapacity","transmission","weight","dimensions","length","width","height","maxPayload","fuelConsumption","urban","extraUrban","combined","emissions","co2","emissionStandard","tires","frontSize","rearSize","recommendedPressure","front","rear","createdAt","Date","toISOString","updatedAt","initializeDefaultVehicles","snapshot","empty","console","log","vehicle","createVehicle","error","getVehicles","filters","arguments","undefined","q","assignedDriver","search","searchTerm","toLowerCase","docs","map","id","data","filter","includes","vehicles","minMileage","maxMileage","needsMaintenance","nextMaintenance","today","documentExpiresWithin","futureDate","setDate","getDate","some","expiryDate","lastInspectionStatus","lastInspection","sort","a","b","date","getTime","getVehicleById","docRef","docSnap","exists","updateVehicle","deleteVehicle","addDocumentToVehicle","vehicleId","document","updateDocument","documentId","deleteDocument","uploadDocument","file","timestamp","now","fileName","name","storageRef","url","thumbnailUrl","startsWith","thumbnailRef","addMaintenanceRecord","record","updateMaintenanceRecord","recordId","deleteMaintenanceRecord","updateInsuranceInfo","updateTechnicalSpecifications","specifications","vehicleService"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/services/vehicleService.ts"],"sourcesContent":["import { Vehicle, VehicleFilters, VehicleDocument, InsuranceInfo, MaintenanceRecord, TechnicalSpecifications } from '../types/Vehicle';\r\nimport { collection, query, where, getDocs, addDoc, updateDoc, deleteDoc, doc, getDoc, orderBy, limit, startAfter, DocumentData } from 'firebase/firestore';\r\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\r\nimport { db } from '../config/firebase';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nclass VehicleService {\r\n  private collection = collection(db, 'vehicles');\r\n  private documentsCollection = collection(db, 'documents');\r\n  private maintenanceCollection = collection(db, 'maintenance');\r\n  private storage = getStorage();\r\n  private storageBasePath = 'vehicles';\r\n  private initialized = false;\r\n\r\n  // Données par défaut pour les véhicules\r\n  private defaultVehicles: Omit<Vehicle, 'id'>[] = [\r\n    {\r\n      brand: 'Renault',\r\n      model: 'Kangoo',\r\n      registrationNumber: 'GE-695-RT',\r\n      type: 'van',\r\n      status: 'active',\r\n      purchaseDate: '2020-01-01',\r\n      lastMaintenanceDate: '2023-01-15',\r\n      nextMaintenanceDate: '2023-07-15',\r\n      mileage: 45000,\r\n      fuelType: 'diesel',\r\n      capacity: 800,\r\n      notes: 'Véhicule utilitaire principal',\r\n      documents: [],\r\n      inspections: [],\r\n      maintenanceHistory: [],\r\n      insuranceInfo: {\r\n        provider: 'AXA',\r\n        policyNumber: 'AX123456789',\r\n        validFrom: '2023-01-01',\r\n        validUntil: '2024-01-01',\r\n        coverageType: 'comprehensive',\r\n        monthlyPremium: 120,\r\n        currency: 'EUR',\r\n        documents: []\r\n      },\r\n      technicalSpecifications: {\r\n        vin: 'VF1FW1AB123456789',\r\n        year: 2020,\r\n        engine: {\r\n          type: 'Diesel 1.5 dCi',\r\n          power: 85,\r\n          cylinderCapacity: 1461\r\n        },\r\n        transmission: 'manual',\r\n        weight: 1485,\r\n        dimensions: {\r\n          length: 4490,\r\n          width: 1830,\r\n          height: 1835\r\n        },\r\n        maxPayload: 650,\r\n        fuelConsumption: {\r\n          urban: 5.5,\r\n          extraUrban: 4.6,\r\n          combined: 5.0\r\n        },\r\n        emissions: {\r\n          co2: 131,\r\n          emissionStandard: 'Euro 6d'\r\n        },\r\n        tires: {\r\n          frontSize: '195/65 R15',\r\n          rearSize: '195/65 R15',\r\n          recommendedPressure: {\r\n            front: 2.5,\r\n            rear: 2.5\r\n          }\r\n        }\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    },\r\n    {\r\n      brand: 'Citroën',\r\n      model: 'Berlingo',\r\n      registrationNumber: 'GI-456-AD',\r\n      type: 'van',\r\n      status: 'active',\r\n      purchaseDate: '2021-01-01',\r\n      lastMaintenanceDate: '2023-02-10',\r\n      nextMaintenanceDate: '2023-08-10',\r\n      mileage: 32500,\r\n      fuelType: 'diesel',\r\n      capacity: 800,\r\n      notes: 'Véhicule utilitaire secondaire',\r\n      documents: [],\r\n      inspections: [],\r\n      maintenanceHistory: [],\r\n      insuranceInfo: {\r\n        provider: 'MMA',\r\n        policyNumber: 'MM789654321',\r\n        validFrom: '2023-01-01',\r\n        validUntil: '2024-01-01',\r\n        coverageType: 'comprehensive',\r\n        monthlyPremium: 110,\r\n        currency: 'EUR',\r\n        documents: []\r\n      },\r\n      technicalSpecifications: {\r\n        vin: 'VF7GBHFXBEUR567890',\r\n        year: 2021,\r\n        engine: {\r\n          type: 'Diesel 1.5 BlueHDi',\r\n          power: 100,\r\n          cylinderCapacity: 1499\r\n        },\r\n        transmission: 'manual',\r\n        weight: 1532,\r\n        dimensions: {\r\n          length: 4650,\r\n          width: 1850,\r\n          height: 1860\r\n        },\r\n        maxPayload: 700,\r\n        fuelConsumption: {\r\n          urban: 5.0,\r\n          extraUrban: 4.2,\r\n          combined: 4.6\r\n        },\r\n        emissions: {\r\n          co2: 120,\r\n          emissionStandard: 'Euro 6d'\r\n        },\r\n        tires: {\r\n          frontSize: '205/60 R16',\r\n          rearSize: '205/60 R16',\r\n          recommendedPressure: {\r\n            front: 2.5,\r\n            rear: 2.5\r\n          }\r\n        }\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    },\r\n    {\r\n      brand: 'Renault',\r\n      model: 'Clio',\r\n      registrationNumber: 'GL-789-BA',\r\n      type: 'car',\r\n      status: 'active',\r\n      purchaseDate: '2022-01-01',\r\n      lastMaintenanceDate: '2023-02-20',\r\n      nextMaintenanceDate: '2023-08-20',\r\n      mileage: 15800,\r\n      fuelType: 'petrol',\r\n      notes: 'Véhicule de service',\r\n      documents: [],\r\n      inspections: [],\r\n      maintenanceHistory: [],\r\n      insuranceInfo: {\r\n        provider: 'Generali',\r\n        policyNumber: 'GE567891234',\r\n        validFrom: '2023-01-01',\r\n        validUntil: '2024-01-01',\r\n        coverageType: 'comprehensive',\r\n        monthlyPremium: 90,\r\n        currency: 'EUR',\r\n        documents: []\r\n      },\r\n      technicalSpecifications: {\r\n        vin: 'VF1RJA00067123456',\r\n        year: 2022,\r\n        engine: {\r\n          type: 'Petrol 1.0 TCe',\r\n          power: 90,\r\n          cylinderCapacity: 999\r\n        },\r\n        transmission: 'manual',\r\n        weight: 1178,\r\n        dimensions: {\r\n          length: 4050,\r\n          width: 1798,\r\n          height: 1440\r\n        },\r\n        fuelConsumption: {\r\n          urban: 6.2,\r\n          extraUrban: 4.5,\r\n          combined: 5.1\r\n        },\r\n        emissions: {\r\n          co2: 118,\r\n          emissionStandard: 'Euro 6d'\r\n        },\r\n        tires: {\r\n          frontSize: '195/55 R16',\r\n          rearSize: '195/55 R16',\r\n          recommendedPressure: {\r\n            front: 2.2,\r\n            rear: 2.0\r\n          }\r\n        }\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    }\r\n  ];\r\n\r\n  // Initialiser les véhicules par défaut\r\n  async initializeDefaultVehicles(): Promise<void> {\r\n    try {\r\n      const snapshot = await getDocs(this.collection);\r\n      if (snapshot.empty) {\r\n        console.log('Initialisation des véhicules par défaut...');\r\n        for (const vehicle of this.defaultVehicles) {\r\n          await this.createVehicle(vehicle);\r\n        }\r\n        console.log('Véhicules par défaut initialisés avec succès');\r\n      } else {\r\n        console.log('La collection de véhicules n\\'est pas vide, pas d\\'initialisation nécessaire');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'initialisation des véhicules par défaut:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Récupérer tous les véhicules avec filtres optionnels\r\n  async getVehicles(filters: VehicleFilters = {}): Promise<Vehicle[]> {\r\n    try {\r\n      let q = query(this.collection);\r\n\r\n      // Appliquer les filtres\r\n      if (filters.type) {\r\n        q = query(q, where('type', '==', filters.type));\r\n      }\r\n      if (filters.status) {\r\n        q = query(q, where('status', '==', filters.status));\r\n      }\r\n      if (filters.assignedDriver) {\r\n        q = query(q, where('assignedDriver', '==', filters.assignedDriver));\r\n      }\r\n\r\n      // Recherche par texte\r\n      if (filters.search) {\r\n        const searchTerm = filters.search.toLowerCase();\r\n        const snapshot = await getDocs(this.collection);\r\n        return snapshot.docs\r\n          .map(doc => ({ id: doc.id, ...doc.data() } as Vehicle))\r\n          .filter(vehicle => \r\n            vehicle.brand.toLowerCase().includes(searchTerm) ||\r\n            vehicle.model.toLowerCase().includes(searchTerm) ||\r\n            vehicle.registrationNumber.toLowerCase().includes(searchTerm)\r\n          );\r\n      }\r\n\r\n      const snapshot = await getDocs(q);\r\n      const vehicles = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Vehicle));\r\n\r\n      // Appliquer les filtres supplémentaires en mémoire\r\n      return vehicles.filter(vehicle => {\r\n        if (filters.minMileage && vehicle.mileage < filters.minMileage) return false;\r\n        if (filters.maxMileage && vehicle.mileage > filters.maxMileage) return false;\r\n        if (filters.needsMaintenance) {\r\n          const nextMaintenance = new Date(vehicle.nextMaintenanceDate);\r\n          const today = new Date();\r\n          return nextMaintenance <= today;\r\n        }\r\n        if (filters.documentExpiresWithin && filters.documentExpiresWithin > 0) {\r\n          const today = new Date();\r\n          const futureDate = new Date(today);\r\n          futureDate.setDate(today.getDate() + filters.documentExpiresWithin);\r\n          \r\n          return vehicle.documents.some(doc => {\r\n            if (doc.expiryDate) {\r\n              const expiryDate = new Date(doc.expiryDate);\r\n              return expiryDate <= futureDate && expiryDate >= today;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n        if (filters.lastInspectionStatus && vehicle.inspections.length > 0) {\r\n          // Trouver la dernière inspection\r\n          const lastInspection = vehicle.inspections\r\n            .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())[0];\r\n          return lastInspection.status === filters.lastInspectionStatus;\r\n        }\r\n        return true;\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des véhicules:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Récupérer un véhicule par son ID\r\n  async getVehicleById(id: string): Promise<Vehicle | null> {\r\n    try {\r\n      const docRef = doc(this.collection, id);\r\n      const docSnap = await getDoc(docRef);\r\n      if (docSnap.exists()) {\r\n        return { id: docSnap.id, ...docSnap.data() } as Vehicle;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération du véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Créer un nouveau véhicule\r\n  async createVehicle(vehicle: Omit<Vehicle, 'id'>): Promise<Vehicle> {\r\n    try {\r\n      const docRef = await addDoc(this.collection, {\r\n        ...vehicle,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n      return { id: docRef.id, ...vehicle };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la création du véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Mettre à jour un véhicule existant\r\n  async updateVehicle(id: string, data: Partial<Vehicle>): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.collection, id);\r\n      await updateDoc(docRef, {\r\n        ...data,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour du véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Supprimer un véhicule\r\n  async deleteVehicle(id: string): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.collection, id);\r\n      await deleteDoc(docRef);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression du véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== Gestion des documents =====\r\n  \r\n  // Ajouter un document à un véhicule\r\n  async addDocumentToVehicle(vehicleId: string, document: Omit<VehicleDocument, 'id' | 'createdAt' | 'updatedAt'>): Promise<VehicleDocument> {\r\n    try {\r\n      const docRef = await addDoc(this.documentsCollection, {\r\n        ...document,\r\n        vehicleId,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n      return { id: docRef.id, ...document };\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'ajout du document au véhicule:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Mettre à jour un document\r\n  async updateDocument(documentId: string, data: Partial<VehicleDocument>): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.documentsCollection, documentId);\r\n      await updateDoc(docRef, {\r\n        ...data,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour du document:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Supprimer un document\r\n  async deleteDocument(documentId: string): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.documentsCollection, documentId);\r\n      await deleteDoc(docRef);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression du document:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Uploader un document\r\n  async uploadDocument(vehicleId: string, file: File): Promise<{ url: string; thumbnailUrl: string }> {\r\n    try {\r\n      const timestamp = Date.now();\r\n      const fileName = `${vehicleId}/${timestamp}_${file.name}`;\r\n      const storageRef = ref(this.storage, `${this.storageBasePath}/${fileName}`);\r\n      \r\n      await uploadBytes(storageRef, file);\r\n      const url = await getDownloadURL(storageRef);\r\n      \r\n      // Pour les images, créer une miniature\r\n      let thumbnailUrl = url;\r\n      if (file.type.startsWith('image/')) {\r\n        const thumbnailRef = ref(this.storage, `${this.storageBasePath}/${vehicleId}/${timestamp}_thumb_${file.name}`);\r\n        // TODO: Implémenter la création de miniature\r\n        thumbnailUrl = url;\r\n      }\r\n      \r\n      return { url, thumbnailUrl };\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'upload du document:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== Gestion de la maintenance =====\r\n  \r\n  // Ajouter un enregistrement de maintenance\r\n  async addMaintenanceRecord(vehicleId: string, record: Omit<MaintenanceRecord, 'id'>): Promise<MaintenanceRecord> {\r\n    try {\r\n      const docRef = await addDoc(this.maintenanceCollection, {\r\n        ...record,\r\n        vehicleId,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n      return { id: docRef.id, ...record };\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'ajout de l\\'enregistrement de maintenance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Mettre à jour un enregistrement de maintenance\r\n  async updateMaintenanceRecord(recordId: string, data: Partial<MaintenanceRecord>): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.maintenanceCollection, recordId);\r\n      await updateDoc(docRef, {\r\n        ...data,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour de l\\'enregistrement de maintenance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Supprimer un enregistrement de maintenance\r\n  async deleteMaintenanceRecord(recordId: string): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.maintenanceCollection, recordId);\r\n      await deleteDoc(docRef);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression de l\\'enregistrement de maintenance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== Gestion des informations d'assurance =====\r\n  \r\n  // Mettre à jour les informations d'assurance\r\n  async updateInsuranceInfo(vehicleId: string, insuranceInfo: InsuranceInfo): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.collection, vehicleId);\r\n      await updateDoc(docRef, {\r\n        insuranceInfo,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour des informations d\\'assurance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateTechnicalSpecifications(vehicleId: string, specifications: TechnicalSpecifications): Promise<void> {\r\n    try {\r\n      const docRef = doc(this.collection, vehicleId);\r\n      await updateDoc(docRef, {\r\n        technicalSpecifications: specifications,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour des spécifications techniques:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const vehicleService = new VehicleService(); \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}