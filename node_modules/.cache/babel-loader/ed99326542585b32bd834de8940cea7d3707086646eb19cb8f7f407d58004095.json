{"ast":null,"code":"import React,{useEffect,useState}from'react';import{db}from'../config/firebase';import{collection,query,getDocs,orderBy,limit}from'firebase/firestore';import{Chart as ChartJS,ArcElement,Tooltip,Legend,CategoryScale,LinearScale,BarElement,Title,PointElement,LineElement}from'chart.js';import{Pie,Bar,Line}from'react-chartjs-2';import'./Dashboard.css';// Enregistrer les composants ChartJS nécessaires\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend,CategoryScale,LinearScale,BarElement,Title,PointElement,LineElement);const Dashboard=()=>{const[stats,setStats]=useState({livraisons:0,enCours:0,totalColis:0,tempsMoyen:'00:00',tauxLivraison:0});const[siteStats,setSiteStats]=useState([]);const[coursierStats,setCoursierStats]=useState([]);const[hourlyStats,setHourlyStats]=useState([]);const[loading,setLoading]=useState(true);const[recentPassages,setRecentPassages]=useState([]);// Couleurs pour les graphiques\nconst colors=['#4CAF50','#2196F3','#FFC107','#9C27B0','#F44336','#009688','#673AB7','#FF9800','#03A9F4','#E91E63'];useEffect(()=>{const fetchData=async()=>{setLoading(true);try{// Récupérer tous les passages\nconst passagesRef=collection(db,'passages');const passagesSnapshot=await getDocs(passagesRef);const passagesData=passagesSnapshot.docs.map(doc=>({id:doc.id,...doc.data()}));// Récupérer les passages récents pour l'affichage dans le tableau\nconst recentPassagesQuery=query(collection(db,'passages'),orderBy('dateHeureDepart','desc'),limit(5));const recentPassagesSnapshot=await getDocs(recentPassagesQuery);const recentPassagesData=recentPassagesSnapshot.docs.map(doc=>({id:doc.id,...doc.data()}));setRecentPassages(recentPassagesData);// Calculer les statistiques principales\nconst livres=passagesData.filter(p=>p.statut==='Livré').length;const enCours=passagesData.filter(p=>p.statut==='En cours').length;const total=passagesData.length;// Calculer le temps moyen de livraison\nlet tempsTotal=0;let livraisonsAvecTemps=0;passagesData.forEach(passage=>{if(passage.statut==='Livré'&&passage.dateHeureDepart&&passage.dateHeureFin){const depart=passage.dateHeureDepart.toDate();const fin=passage.dateHeureFin.toDate();const diffMs=fin.getTime()-depart.getTime();tempsTotal+=diffMs;livraisonsAvecTemps++;}});const tempsMoyenMs=livraisonsAvecTemps>0?tempsTotal/livraisonsAvecTemps:0;const tempsMoyenMinutes=Math.floor(tempsMoyenMs/60000);const tempsMoyenHeures=Math.floor(tempsMoyenMinutes/60);const tempsMoyenMinutesRestantes=tempsMoyenMinutes%60;const tempsMoyenFormatted=`${tempsMoyenHeures.toString().padStart(2,'0')}:${tempsMoyenMinutesRestantes.toString().padStart(2,'0')}`;// Taux de livraison\nconst tauxLivraison=total>0?livres/total*100:0;setStats({livraisons:livres,enCours:enCours,totalColis:total,tempsMoyen:tempsMoyenFormatted,tauxLivraison:Math.round(tauxLivraison)});// Statistiques par site\nconst siteMap=new Map();passagesData.forEach(passage=>{const site=passage.siteDepart;siteMap.set(site,(siteMap.get(site)||0)+1);});const siteStatsData=Array.from(siteMap.entries()).map((_ref,index)=>{let[nom,count]=_ref;return{nom,count,color:colors[index%colors.length]};}).sort((a,b)=>b.count-a.count).slice(0,5);setSiteStats(siteStatsData);// Statistiques par coursier\nconst coursierMap=new Map();passagesData.forEach(passage=>{if(passage.coursierLivraison){const coursier=passage.coursierLivraison;coursierMap.set(coursier,(coursierMap.get(coursier)||0)+1);}});const coursierStatsData=Array.from(coursierMap.entries()).map((_ref2,index)=>{let[nom,livraisons]=_ref2;return{nom,livraisons,color:colors[index%colors.length]};}).sort((a,b)=>b.livraisons-a.livraisons).slice(0,5);setCoursierStats(coursierStatsData);// Statistiques par heure\nconst hourMap=new Map();passagesData.forEach(passage=>{if(passage.dateHeureDepart){const heure=passage.dateHeureDepart.toDate().getHours();hourMap.set(heure,(hourMap.get(heure)||0)+1);}});const hourlyStatsData=Array.from({length:24},(_,i)=>i).map(heure=>({heure:`${heure}h`,count:hourMap.get(heure)||0}));setHourlyStats(hourlyStatsData);}catch(error){console.error('Erreur lors de la récupération des données:',error);// Utiliser des données de démonstration en cas d'erreur\nsetStats({livraisons:235,enCours:42,totalColis:277,tempsMoyen:'01:12',tauxLivraison:85});}finally{setLoading(false);}};fetchData();},[]);// Données pour le graphique des sites\nconst sitePieData={labels:siteStats.map(site=>site.nom),datasets:[{data:siteStats.map(site=>site.count),backgroundColor:siteStats.map(site=>site.color),borderColor:siteStats.map(site=>site.color),borderWidth:1}]};// Données pour le graphique des coursiers\nconst coursierBarData={labels:coursierStats.map(coursier=>coursier.nom),datasets:[{label:'Livraisons effectuées',data:coursierStats.map(coursier=>coursier.livraisons),backgroundColor:coursierStats.map(coursier=>coursier.color),borderColor:coursierStats.map(coursier=>coursier.color),borderWidth:1}]};// Données pour le graphique par heure\nconst hourlyLineData={labels:hourlyStats.map(hour=>hour.heure),datasets:[{label:'Nombre de passages',data:hourlyStats.map(hour=>hour.count),fill:true,backgroundColor:'rgba(33, 150, 243, 0.2)',borderColor:'rgba(33, 150, 243, 1)',tension:0.4}]};// Options pour les graphiques\nconst pieOptions={responsive:true,plugins:{legend:{position:'right'},title:{display:true,text:'Répartition par site',font:{size:16}}}};const barOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Performance par coursier',font:{size:16}}}};const lineOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Activité par heure',font:{size:16}}},scales:{y:{beginAtZero:true}}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Chargement des donn\\xE9es...\"})]});}// Formater la date pour l'affichage\nconst formatDate=timestamp=>{const date=timestamp.toDate();return new Intl.DateTimeFormat('fr-FR',{day:'2-digit',month:'2-digit',year:'numeric',hour:'2-digit',minute:'2-digit'}).format(date);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"dashboard-title\",children:\"Tableau de bord\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card delivered\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",children:/*#__PURE__*/_jsx(\"polyline\",{points:\"20 6 9 17 4 12\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Livraisons effectu\\xE9es\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.livraisons}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-progress\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${stats.tauxLivraison}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-subtext\",children:[stats.tauxLivraison,\"% du total\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card in-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"12\",cy:\"12\",r:\"10\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"12 6 12 12 16 14\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"En cours de livraison\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.enCours}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtext\",children:\"Colis en transit\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card total\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",children:[/*#__PURE__*/_jsx(\"rect\",{x:\"2\",y:\"7\",width:\"20\",height:\"14\",rx:\"2\",ry:\"2\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total des colis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.totalColis}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtext\",children:\"Tous statuts confondus\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card time\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"12\",cy:\"12\",r:\"10\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"12 6 12 12 16 14\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Temps moyen de livraison\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.tempsMoyen}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtext\",children:\"Heures:Minutes\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-charts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-content\",children:/*#__PURE__*/_jsx(Bar,{data:coursierBarData,options:barOptions})})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-content\",children:/*#__PURE__*/_jsx(Pie,{data:sitePieData,options:pieOptions})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-card full-width\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-content\",children:/*#__PURE__*/_jsx(Line,{data:hourlyLineData,options:lineOptions})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recent-passages\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Passages r\\xE9cents\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID Colis\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Site de d\\xE9part\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date de d\\xE9part\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Statut\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Coursier\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:recentPassages.map(passage=>/*#__PURE__*/_jsxs(\"tr\",{className:passage.statut==='Livré'?'status-delivered':'status-in-progress',children:[/*#__PURE__*/_jsx(\"td\",{children:passage.idColis}),/*#__PURE__*/_jsx(\"td\",{children:passage.siteDepart}),/*#__PURE__*/_jsx(\"td\",{children:passage.dateHeureDepart?formatDate(passage.dateHeureDepart):'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${passage.statut==='Livré'?'delivered':'in-progress'}`,children:passage.statut})}),/*#__PURE__*/_jsx(\"td\",{children:passage.coursierLivraison||'Non assigné'})]},passage.id))})]})})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","getDocs","orderBy","limit","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","PointElement","LineElement","Pie","Bar","Line","jsx","_jsx","jsxs","_jsxs","register","Dashboard","stats","setStats","livraisons","enCours","totalColis","tempsMoyen","tauxLivraison","siteStats","setSiteStats","coursierStats","setCoursierStats","hourlyStats","setHourlyStats","loading","setLoading","recentPassages","setRecentPassages","colors","fetchData","passagesRef","passagesSnapshot","passagesData","docs","map","doc","id","data","recentPassagesQuery","recentPassagesSnapshot","recentPassagesData","livres","filter","p","statut","length","total","tempsTotal","livraisonsAvecTemps","forEach","passage","dateHeureDepart","dateHeureFin","depart","toDate","fin","diffMs","getTime","tempsMoyenMs","tempsMoyenMinutes","Math","floor","tempsMoyenHeures","tempsMoyenMinutesRestantes","tempsMoyenFormatted","toString","padStart","round","siteMap","Map","site","siteDepart","set","get","siteStatsData","Array","from","entries","_ref","index","nom","count","color","sort","a","b","slice","coursierMap","coursierLivraison","coursier","coursierStatsData","_ref2","hourMap","heure","getHours","hourlyStatsData","_","i","error","console","sitePieData","labels","datasets","backgroundColor","borderColor","borderWidth","coursierBarData","label","hourlyLineData","hour","fill","tension","pieOptions","responsive","plugins","legend","position","title","display","text","font","size","barOptions","lineOptions","scales","y","beginAtZero","className","children","formatDate","timestamp","date","Intl","DateTimeFormat","day","month","year","minute","format","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","style","width","cx","cy","r","x","height","rx","ry","d","options","idColis"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../config/firebase';\nimport { collection, query, getDocs, Timestamp, where, orderBy, limit } from 'firebase/firestore';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement } from 'chart.js';\nimport { Pie, Bar, Line } from 'react-chartjs-2';\nimport './Dashboard.css';\n\n// Enregistrer les composants ChartJS nécessaires\nChartJS.register(\n  ArcElement, \n  Tooltip, \n  Legend, \n  CategoryScale, \n  LinearScale, \n  BarElement, \n  Title, \n  PointElement, \n  LineElement\n);\n\ninterface Passage {\n  id: string;\n  siteDepart: string;\n  dateHeureDepart: Timestamp;\n  idColis: string;\n  statut: 'Livré' | 'En cours';\n  siteFin?: string;\n  dateHeureFin?: Timestamp;\n  coursierChargement?: string;\n  coursierLivraison?: string;\n  vehiculeId?: string;\n  tourneeId?: string;\n}\n\ninterface DashboardStats {\n  livraisons: number;\n  enCours: number;\n  totalColis: number;\n  tempsMoyen: string;\n  tauxLivraison: number;\n}\n\ninterface SiteStats {\n  nom: string;\n  count: number;\n  color: string;\n}\n\ninterface CoursierStats {\n  nom: string;\n  livraisons: number;\n  color: string;\n}\n\ninterface HourlyStats {\n  heure: string;\n  count: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [stats, setStats] = useState<DashboardStats>({\n    livraisons: 0,\n    enCours: 0,\n    totalColis: 0,\n    tempsMoyen: '00:00',\n    tauxLivraison: 0\n  });\n  const [siteStats, setSiteStats] = useState<SiteStats[]>([]);\n  const [coursierStats, setCoursierStats] = useState<CoursierStats[]>([]);\n  const [hourlyStats, setHourlyStats] = useState<HourlyStats[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [recentPassages, setRecentPassages] = useState<Passage[]>([]);\n\n  // Couleurs pour les graphiques\n  const colors = [\n    '#4CAF50', '#2196F3', '#FFC107', '#9C27B0', '#F44336', \n    '#009688', '#673AB7', '#FF9800', '#03A9F4', '#E91E63'\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // Récupérer tous les passages\n        const passagesRef = collection(db, 'passages');\n        const passagesSnapshot = await getDocs(passagesRef);\n        const passagesData = passagesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as Passage[];\n\n        // Récupérer les passages récents pour l'affichage dans le tableau\n        const recentPassagesQuery = query(\n          collection(db, 'passages'),\n          orderBy('dateHeureDepart', 'desc'),\n          limit(5)\n        );\n        const recentPassagesSnapshot = await getDocs(recentPassagesQuery);\n        const recentPassagesData = recentPassagesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as Passage[];\n        setRecentPassages(recentPassagesData);\n\n        // Calculer les statistiques principales\n        const livres = passagesData.filter(p => p.statut === 'Livré').length;\n        const enCours = passagesData.filter(p => p.statut === 'En cours').length;\n        const total = passagesData.length;\n        \n        // Calculer le temps moyen de livraison\n        let tempsTotal = 0;\n        let livraisonsAvecTemps = 0;\n        \n        passagesData.forEach(passage => {\n          if (passage.statut === 'Livré' && passage.dateHeureDepart && passage.dateHeureFin) {\n            const depart = passage.dateHeureDepart.toDate();\n            const fin = passage.dateHeureFin.toDate();\n            const diffMs = fin.getTime() - depart.getTime();\n            tempsTotal += diffMs;\n            livraisonsAvecTemps++;\n          }\n        });\n        \n        const tempsMoyenMs = livraisonsAvecTemps > 0 ? tempsTotal / livraisonsAvecTemps : 0;\n        const tempsMoyenMinutes = Math.floor(tempsMoyenMs / 60000);\n        const tempsMoyenHeures = Math.floor(tempsMoyenMinutes / 60);\n        const tempsMoyenMinutesRestantes = tempsMoyenMinutes % 60;\n        const tempsMoyenFormatted = `${tempsMoyenHeures.toString().padStart(2, '0')}:${tempsMoyenMinutesRestantes.toString().padStart(2, '0')}`;\n        \n        // Taux de livraison\n        const tauxLivraison = total > 0 ? (livres / total) * 100 : 0;\n\n        setStats({\n          livraisons: livres,\n          enCours: enCours,\n          totalColis: total,\n          tempsMoyen: tempsMoyenFormatted,\n          tauxLivraison: Math.round(tauxLivraison)\n        });\n\n        // Statistiques par site\n        const siteMap = new Map<string, number>();\n        passagesData.forEach(passage => {\n          const site = passage.siteDepart;\n          siteMap.set(site, (siteMap.get(site) || 0) + 1);\n        });\n        \n        const siteStatsData = Array.from(siteMap.entries())\n          .map(([nom, count], index) => ({\n            nom,\n            count,\n            color: colors[index % colors.length]\n          }))\n          .sort((a, b) => b.count - a.count)\n          .slice(0, 5);\n        \n        setSiteStats(siteStatsData);\n\n        // Statistiques par coursier\n        const coursierMap = new Map<string, number>();\n        passagesData.forEach(passage => {\n          if (passage.coursierLivraison) {\n            const coursier = passage.coursierLivraison;\n            coursierMap.set(coursier, (coursierMap.get(coursier) || 0) + 1);\n          }\n        });\n        \n        const coursierStatsData = Array.from(coursierMap.entries())\n          .map(([nom, livraisons], index) => ({\n            nom,\n            livraisons,\n            color: colors[index % colors.length]\n          }))\n          .sort((a, b) => b.livraisons - a.livraisons)\n          .slice(0, 5);\n        \n        setCoursierStats(coursierStatsData);\n\n        // Statistiques par heure\n        const hourMap = new Map<number, number>();\n        passagesData.forEach(passage => {\n          if (passage.dateHeureDepart) {\n            const heure = passage.dateHeureDepart.toDate().getHours();\n            hourMap.set(heure, (hourMap.get(heure) || 0) + 1);\n          }\n        });\n        \n        const hourlyStatsData = Array.from({ length: 24 }, (_, i) => i)\n          .map(heure => ({\n            heure: `${heure}h`,\n            count: hourMap.get(heure) || 0\n          }));\n        \n        setHourlyStats(hourlyStatsData);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données:', error);\n        // Utiliser des données de démonstration en cas d'erreur\n        setStats({\n          livraisons: 235,\n          enCours: 42,\n          totalColis: 277,\n          tempsMoyen: '01:12',\n          tauxLivraison: 85\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Données pour le graphique des sites\n  const sitePieData = {\n    labels: siteStats.map(site => site.nom),\n    datasets: [\n      {\n        data: siteStats.map(site => site.count),\n        backgroundColor: siteStats.map(site => site.color),\n        borderColor: siteStats.map(site => site.color),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Données pour le graphique des coursiers\n  const coursierBarData = {\n    labels: coursierStats.map(coursier => coursier.nom),\n    datasets: [\n      {\n        label: 'Livraisons effectuées',\n        data: coursierStats.map(coursier => coursier.livraisons),\n        backgroundColor: coursierStats.map(coursier => coursier.color),\n        borderColor: coursierStats.map(coursier => coursier.color),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Données pour le graphique par heure\n  const hourlyLineData = {\n    labels: hourlyStats.map(hour => hour.heure),\n    datasets: [\n      {\n        label: 'Nombre de passages',\n        data: hourlyStats.map(hour => hour.count),\n        fill: true,\n        backgroundColor: 'rgba(33, 150, 243, 0.2)',\n        borderColor: 'rgba(33, 150, 243, 1)',\n        tension: 0.4,\n      },\n    ],\n  };\n\n  // Options pour les graphiques\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right' as const,\n      },\n      title: {\n        display: true,\n        text: 'Répartition par site',\n        font: {\n          size: 16,\n        },\n      },\n    },\n  };\n\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Performance par coursier',\n        font: {\n          size: 16,\n        },\n      },\n    },\n  };\n\n  const lineOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Activité par heure',\n        font: {\n          size: 16,\n        },\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Chargement des données...</p>\n      </div>\n    );\n  }\n\n  // Formater la date pour l'affichage\n  const formatDate = (timestamp: Timestamp) => {\n    const date = timestamp.toDate();\n    return new Intl.DateTimeFormat('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1 className=\"dashboard-title\">Tableau de bord</h1>\n      \n      {/* Cartes de statistiques */}\n      <div className=\"stats-cards\">\n        <div className=\"stat-card delivered\">\n          <div className=\"stat-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <polyline points=\"20 6 9 17 4 12\"></polyline>\n            </svg>\n          </div>\n          <div className=\"stat-info\">\n            <h3>Livraisons effectuées</h3>\n            <div className=\"stat-value\">{stats.livraisons}</div>\n            <div className=\"stat-progress\">\n              <div className=\"progress-bar\" style={{ width: `${stats.tauxLivraison}%` }}></div>\n            </div>\n            <div className=\"stat-subtext\">{stats.tauxLivraison}% du total</div>\n          </div>\n        </div>\n        \n        <div className=\"stat-card in-progress\">\n          <div className=\"stat-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n              <polyline points=\"12 6 12 12 16 14\"></polyline>\n            </svg>\n          </div>\n          <div className=\"stat-info\">\n            <h3>En cours de livraison</h3>\n            <div className=\"stat-value\">{stats.enCours}</div>\n            <div className=\"stat-subtext\">Colis en transit</div>\n          </div>\n        </div>\n        \n        <div className=\"stat-card total\">\n          <div className=\"stat-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <rect x=\"2\" y=\"7\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\n              <path d=\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"></path>\n            </svg>\n          </div>\n          <div className=\"stat-info\">\n            <h3>Total des colis</h3>\n            <div className=\"stat-value\">{stats.totalColis}</div>\n            <div className=\"stat-subtext\">Tous statuts confondus</div>\n          </div>\n        </div>\n        \n        <div className=\"stat-card time\">\n          <div className=\"stat-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n              <polyline points=\"12 6 12 12 16 14\"></polyline>\n            </svg>\n          </div>\n          <div className=\"stat-info\">\n            <h3>Temps moyen de livraison</h3>\n            <div className=\"stat-value\">{stats.tempsMoyen}</div>\n            <div className=\"stat-subtext\">Heures:Minutes</div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Graphiques */}\n      <div className=\"dashboard-charts\">\n        <div className=\"chart-row\">\n          <div className=\"chart-card\">\n            <div className=\"chart-content\">\n              <Bar data={coursierBarData} options={barOptions} />\n            </div>\n          </div>\n          \n          <div className=\"chart-card\">\n            <div className=\"chart-content\">\n              <Pie data={sitePieData} options={pieOptions} />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"chart-card full-width\">\n          <div className=\"chart-content\">\n            <Line data={hourlyLineData} options={lineOptions} />\n          </div>\n        </div>\n      </div>\n      \n      {/* Tableau des passages récents */}\n      <div className=\"recent-passages\">\n        <h2>Passages récents</h2>\n        <div className=\"table-container\">\n          <table>\n            <thead>\n              <tr>\n                <th>ID Colis</th>\n                <th>Site de départ</th>\n                <th>Date de départ</th>\n                <th>Statut</th>\n                <th>Coursier</th>\n              </tr>\n            </thead>\n            <tbody>\n              {recentPassages.map(passage => (\n                <tr key={passage.id} className={passage.statut === 'Livré' ? 'status-delivered' : 'status-in-progress'}>\n                  <td>{passage.idColis}</td>\n                  <td>{passage.siteDepart}</td>\n                  <td>{passage.dateHeureDepart ? formatDate(passage.dateHeureDepart) : 'N/A'}</td>\n                  <td>\n                    <span className={`status-badge ${passage.statut === 'Livré' ? 'delivered' : 'in-progress'}`}>\n                      {passage.statut}\n                    </span>\n                  </td>\n                  <td>{passage.coursierLivraison || 'Non assigné'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}