{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\Passages.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../config/firebase';\nimport { collection, getDocs, Timestamp, deleteDoc, doc, updateDoc } from 'firebase/firestore';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale } from 'react-datepicker';\nimport { fr } from 'date-fns/locale/fr';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './Passages.css';\nimport './EditMode.css';\nimport { usePoles } from '../services/PoleService';\nimport PoleSelector from './PoleSelector';\nimport PoleFilter from './PoleFilter';\n\n// Enregistrer la locale française\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nregisterLocale('fr', fr);\n\n// Styles personnalisés pour le datepicker\nconst datepickerStyles = `\n  .react-datepicker {\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    border: 1px solid #e0e0e0;\n    z-index: 1000;\n  }\n  \n  .react-datepicker-popper {\n    z-index: 1000;\n  }\n  \n  .react-datepicker__header {\n    background-color: #1976d2;\n    border-bottom: none;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    padding-top: 10px;\n  }\n  \n  .react-datepicker__current-month {\n    color: white;\n    font-weight: 500;\n    font-size: 1rem;\n    padding-bottom: 5px;\n  }\n  \n  .react-datepicker__day-name {\n    color: white;\n    font-weight: 500;\n  }\n  \n  .react-datepicker__day--selected {\n    background-color: #1976d2;\n    border-radius: 50%;\n  }\n  \n  .react-datepicker__day:hover {\n    background-color: #e8f0fe;\n    border-radius: 50%;\n  }\n  \n  .react-datepicker__day--keyboard-selected {\n    background-color: #e8f0fe;\n    color: #1976d2;\n    border-radius: 50%;\n  }\n  \n  .react-datepicker__navigation {\n    top: 12px;\n  }\n  \n  .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  \n  .react-datepicker__day--today {\n    font-weight: bold;\n    color: #1976d2;\n  }\n  \n  .custom-datepicker-input {\n    width: 160px;\n    padding: 10px 12px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    font-size: 14px;\n    cursor: pointer;\n    background-color: white;\n    transition: all 0.2s ease;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  }\n  \n  .custom-datepicker-input:focus {\n    outline: none;\n    border-color: #1976d2;\n    box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.2);\n  }\n  \n  .custom-datepicker-input::placeholder {\n    color: #aaa;\n  }\n  \n  .custom-datepicker-wrapper {\n    position: relative;\n  }\n  \n  .custom-datepicker-icon {\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #666;\n    pointer-events: none;\n  }\n`;\nconst Passages = () => {\n  _s();\n  const [passages, setPassages] = useState([]);\n  const [allPassages, setAllPassages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tournees, setTournees] = useState([]);\n  const [sites, setSites] = useState([]);\n  const [vehicules, setVehicules] = useState([]);\n\n  // Filtres\n  const [dateDebut, setDateDebut] = useState(null);\n  const [dateFin, setDateFin] = useState(null);\n  const [tournee, setTournee] = useState('');\n  const [statut, setStatut] = useState('');\n  const [site, setSite] = useState('');\n  const [vehicule, setVehicule] = useState('');\n  const [idColis, setIdColis] = useState('');\n\n  // Recherche rapide\n  const [quickSearch, setQuickSearch] = useState('');\n  const [filteredPassages, setFilteredPassages] = useState([]);\n\n  // Ajout du filtre par pôle\n  const [selectedPole, setSelectedPole] = useState('');\n\n  // Ajout des états pour le mode édition et la sélection multiple\n  const [editMode, setEditMode] = useState(false);\n  const [selectedPassages, setSelectedPassages] = useState([]);\n  const [editingPassages, setEditingPassages] = useState({});\n\n  // Utilisation du hook usePoles\n  const {\n    poles\n  } = usePoles();\n  useEffect(() => {\n    fetchPassages();\n    fetchTournees();\n    fetchSites();\n    fetchVehicules();\n\n    // Ajouter l'attribut lang=\"fr\" au document pour les calendriers en français\n    document.documentElement.lang = 'fr';\n\n    // Ajouter les styles personnalisés pour le datepicker\n    const styleElement = document.createElement('style');\n    styleElement.textContent = datepickerStyles;\n    document.head.appendChild(styleElement);\n    return () => {\n      // Nettoyage\n      document.documentElement.lang = '';\n      document.head.removeChild(styleElement);\n    };\n  }, []);\n\n  // Initialiser les passages filtrés au chargement\n  useEffect(() => {\n    setFilteredPassages(passages);\n  }, [passages]);\n\n  // Effet pour filtrer les passages en fonction de la recherche rapide et du pôle sélectionné\n  useEffect(() => {\n    let results = passages;\n\n    // Filtrer par pôle si un pôle est sélectionné\n    if (selectedPole) {\n      results = results.filter(passage => passage.pole === selectedPole);\n    }\n\n    // Ensuite filtrer par recherche rapide\n    if (quickSearch.trim()) {\n      const searchTerm = quickSearch.toLowerCase().trim();\n      results = results.filter(passage => {\n        // Rechercher dans tous les champs textuels du passage\n        return getSiteName(passage.siteDepart).toLowerCase().includes(searchTerm) || getSiteName(passage.siteFin || '').toLowerCase().includes(searchTerm) || passage.idColis.toLowerCase().includes(searchTerm) || passage.statut.toLowerCase().includes(searchTerm) || (passage.coursierChargement || '').toLowerCase().includes(searchTerm) || (passage.coursierLivraison || '').toLowerCase().includes(searchTerm) || getTourneeName(passage.tourneeId).toLowerCase().includes(searchTerm) || getVehiculeImmatriculation(passage.vehiculeId).toLowerCase().includes(searchTerm) || formatDateFr(convertTimestampToDate(passage.dateHeureDepart)).includes(searchTerm);\n      });\n    }\n    setFilteredPassages(results);\n  }, [quickSearch, passages, selectedPole]);\n\n  // Fonction pour convertir un Timestamp Firebase en Date JavaScript\n  const convertTimestampToDate = timestamp => {\n    if (!timestamp) return null;\n\n    // Si c'est déjà un objet Date\n    if (timestamp instanceof Date) return timestamp;\n\n    // Si c'est un Timestamp Firebase avec la méthode toDate()\n    if (timestamp && typeof timestamp.toDate === 'function') {\n      return timestamp.toDate();\n    }\n\n    // Si c'est un objet avec seconds et nanoseconds (format Firestore)\n    if (timestamp && 'seconds' in timestamp && 'nanoseconds' in timestamp) {\n      return new Date(timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000);\n    }\n\n    // Si c'est un nombre (timestamp en millisecondes)\n    if (typeof timestamp === 'number') {\n      return new Date(timestamp);\n    }\n\n    // Si c'est une chaîne de caractères\n    if (typeof timestamp === 'string') {\n      return new Date(timestamp);\n    }\n    console.error('Format de timestamp non reconnu:', timestamp);\n    return null;\n  };\n\n  // Fonction pour comparer uniquement les dates (sans l'heure)\n  const compareDatesOnly = (date1, date2) => {\n    if (!date1 || !date2) return false;\n\n    // Créer de nouvelles dates avec uniquement l'année, le mois et le jour\n    const onlyDate1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const onlyDate2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n\n    // Comparer les timestamps (en millisecondes)\n    return onlyDate1.getTime() === onlyDate2.getTime();\n  };\n\n  // Fonction pour vérifier si une date est supérieure ou égale à une autre (sans l'heure)\n  const isDateGreaterOrEqual = (date1, date2) => {\n    if (!date1 || !date2) return false;\n\n    // Créer de nouvelles dates avec uniquement l'année, le mois et le jour\n    const onlyDate1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const onlyDate2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n\n    // Comparer les timestamps (en millisecondes)\n    return onlyDate1.getTime() >= onlyDate2.getTime();\n  };\n\n  // Fonction pour vérifier si une date est inférieure ou égale à une autre (sans l'heure)\n  const isDateLessOrEqual = (date1, date2) => {\n    if (!date1 || !date2) return false;\n\n    // Créer de nouvelles dates avec uniquement l'année, le mois et le jour\n    const onlyDate1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const onlyDate2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n\n    // Comparer les timestamps (en millisecondes)\n    return onlyDate1.getTime() <= onlyDate2.getTime();\n  };\n  const fetchPassages = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Récupérer les données depuis Firebase\n      const passagesRef = collection(db, 'passages');\n      const passagesSnapshot = await getDocs(passagesRef);\n      if (passagesSnapshot.empty) {\n        console.log('Aucun passage trouvé dans Firebase');\n        setError('Aucun passage trouvé. Veuillez initialiser les données.');\n        setLoading(false);\n        return;\n      }\n      console.log('Nombre de documents récupérés:', passagesSnapshot.docs.length);\n\n      // Afficher les données brutes pour comprendre la structure\n      console.log('Données brutes de Firebase:');\n      passagesSnapshot.docs.forEach((doc, index) => {\n        console.log(`Document ${index + 1} (ID: ${doc.id}):`, doc.data());\n      });\n      const passagesData = passagesSnapshot.docs.map(doc => {\n        const data = doc.data();\n\n        // Vérifier les propriétés exactes des données\n        console.log('Propriétés du document:', Object.keys(data));\n\n        // Normaliser les noms de propriétés\n        const normalizedData = {\n          id: doc.id,\n          siteDepart: data.siteDépart || data.siteDepart || '',\n          dateHeureDepart: data.dhDépart || data.dateHeureDepart,\n          idColis: data.idColis || '',\n          statut: data.statut || 'En cours',\n          siteFin: data.siteFin || '',\n          dateHeureFin: data.dhLivraison || data.dateHeureFin,\n          coursierChargement: data.coursierCharg || data.coursierChargement || '',\n          coursierLivraison: data.coursierLivraison || '',\n          vehiculeId: data.véhicule || data.vehiculeId || '',\n          tourneeId: data.tournée || data.tourneeId || '',\n          pole: data.pole || ''\n        };\n        return normalizedData;\n      });\n      console.log('Données récupérées de Firebase (après normalisation):', passagesData);\n      setAllPassages(passagesData);\n      setPassages(passagesData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des passages:', error);\n      setError('Erreur lors de la récupération des données');\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour récupérer les tournées depuis Firebase\n  const fetchTournees = async () => {\n    try {\n      const tourneesRef = collection(db, 'tournees');\n      const snapshot = await getDocs(tourneesRef);\n      if (!snapshot.empty) {\n        const tourneesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            nom: data.nom || '',\n            date: data.date || Timestamp.fromDate(new Date()),\n            heureDepart: data.heureDepart || '',\n            heureFinPrevue: data.heureFinPrevue || '',\n            heureFinReelle: data.heureFinReelle || '',\n            coursier: data.coursier || '',\n            vehicule: data.vehicule || '',\n            nombreColis: data.nombreColis || 0,\n            statut: data.statut || 'en_attente',\n            siteDepart: data.siteDepart || ''\n          };\n        });\n        setTournees(tourneesData);\n      } else {\n        console.log(\"Aucune tournée trouvée dans Firebase\");\n        // Définir quelques tournées par défaut si aucune n'est trouvée\n        const defaultTournees = [{\n          id: '1',\n          nom: 'Matin',\n          date: Timestamp.fromDate(new Date()),\n          heureDepart: '07:00',\n          heureFinPrevue: '12:00',\n          coursier: 'Sébastien Lherlier',\n          vehicule: 'GE-695-RT',\n          nombreColis: 15,\n          statut: 'en_attente',\n          siteDepart: 'Laboratoire Central'\n        }, {\n          id: '2',\n          nom: 'Jour',\n          date: Timestamp.fromDate(new Date()),\n          heureDepart: '12:00',\n          heureFinPrevue: '17:00',\n          coursier: 'Guillaume Sage',\n          vehicule: 'GI-456-AD',\n          nombreColis: 12,\n          statut: 'en_attente',\n          siteDepart: 'Laboratoire Purpan'\n        }, {\n          id: '3',\n          nom: 'Soir',\n          date: Timestamp.fromDate(new Date()),\n          heureDepart: '17:00',\n          heureFinPrevue: '22:00',\n          coursier: 'Sébastien Lherlier',\n          vehicule: 'GE-695-RT',\n          nombreColis: 10,\n          statut: 'en_attente',\n          siteDepart: 'Laboratoire Central'\n        }];\n        setTournees(defaultTournees);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des tournées:', error);\n    }\n  };\n\n  // Fonction pour récupérer les sites depuis Firebase\n  const fetchSites = async () => {\n    try {\n      const sitesRef = collection(db, 'sites');\n      const snapshot = await getDocs(sitesRef);\n      if (!snapshot.empty) {\n        const sitesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            nom: data.nom || '',\n            adresse: data.adresse || '',\n            ville: data.ville || '',\n            codePostal: data.codePostal || '',\n            telephone: data.telephone || '',\n            email: data.email || '',\n            type: data.type || '',\n            statut: data.statut || 'actif'\n          };\n        });\n        setSites(sitesData);\n      } else {\n        console.log(\"Aucun site trouvé dans Firebase\");\n        // Définir quelques sites par défaut si aucun n'est trouvé\n        const defaultSites = [{\n          id: '1',\n          nom: 'Laboratoire Central',\n          adresse: '15 rue des Sciences',\n          ville: 'Toulouse',\n          codePostal: '31000',\n          telephone: '05.61.XX.XX.XX',\n          email: 'contact@labo-central.fr',\n          type: 'Laboratoire',\n          statut: 'actif'\n        }, {\n          id: '2',\n          nom: 'Laboratoire Purpan',\n          adresse: '330 avenue de Grande Bretagne',\n          ville: 'Toulouse',\n          codePostal: '31300',\n          telephone: '05.61.XX.XX.XX',\n          email: 'contact@labo-purpan.fr',\n          type: 'Laboratoire',\n          statut: 'actif'\n        }];\n        setSites(defaultSites);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des sites:', error);\n    }\n  };\n\n  // Fonction pour récupérer les véhicules depuis Firebase\n  const fetchVehicules = async () => {\n    try {\n      const vehiculesRef = collection(db, 'vehicules');\n      const snapshot = await getDocs(vehiculesRef);\n      if (!snapshot.empty) {\n        const vehiculesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            immatriculation: data.immatriculation || '',\n            marque: data.marque || '',\n            modele: data.modele || '',\n            type: data.type || '',\n            annee: data.annee || 2023,\n            statut: data.statut || 'actif',\n            dernierEntretien: data.dernierEntretien || '',\n            coursierAssigne: data.coursierAssigne || '',\n            kilometrage: data.kilometrage || 0\n          };\n        });\n        setVehicules(vehiculesData);\n      } else {\n        console.log(\"Aucun véhicule trouvé dans Firebase\");\n        // Définir quelques véhicules par défaut si aucun n'est trouvé\n        const defaultVehicules = [{\n          id: '1',\n          immatriculation: 'GE-695-RT',\n          marque: 'Renault',\n          modele: 'Kangoo',\n          type: 'Utilitaire',\n          annee: 2020,\n          statut: 'actif',\n          dernierEntretien: '2023-01-15',\n          coursierAssigne: 'Sébastien Lherlier',\n          kilometrage: 45000\n        }, {\n          id: '2',\n          immatriculation: 'GI-456-AD',\n          marque: 'Citroën',\n          modele: 'Berlingo',\n          type: 'Utilitaire',\n          annee: 2021,\n          statut: 'actif',\n          dernierEntretien: '2023-02-10',\n          coursierAssigne: 'Guillaume Sage',\n          kilometrage: 32500\n        }];\n        setVehicules(defaultVehicules);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des véhicules:', error);\n    }\n  };\n\n  // Fonction pour obtenir le nom de la tournée à partir de son ID\n  const getTourneeName = tourneeId => {\n    if (!tourneeId) return '';\n    const foundTournee = tournees.find(t => t.id === tourneeId);\n    return foundTournee ? foundTournee.nom : tourneeId;\n  };\n\n  // Fonction pour obtenir le nom du site à partir de son ID\n  const getSiteName = siteId => {\n    if (!siteId) return '';\n    const foundSite = sites.find(s => s.id === siteId);\n    return foundSite ? foundSite.nom : siteId;\n  };\n\n  // Fonction pour obtenir l'immatriculation du véhicule à partir de son ID\n  const getVehiculeImmatriculation = vehiculeId => {\n    if (!vehiculeId) return '';\n    const foundVehicule = vehicules.find(v => v.id === vehiculeId);\n    return foundVehicule ? foundVehicule.immatriculation : vehiculeId;\n  };\n\n  // Fonction pour formater une date au format français (JJ/MM/AAAA)\n  const formatDateFr = date => {\n    if (!date) return '';\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  // Fonction pour obtenir le nom du pôle\n  const getPoleNameById = poleId => {\n    if (!poleId) return '-';\n    const pole = poles.find(p => p.id === poleId);\n    return pole ? pole.nom : poleId;\n  };\n\n  // Fonction pour gérer le changement de pôle\n  const handlePoleChange = pole => {\n    setSelectedPole(pole);\n  };\n  const handleSearch = () => {\n    console.log('Recherche démarrée avec les critères suivants:');\n    console.log('Date début:', dateDebut);\n    console.log('Date fin:', dateFin);\n    console.log('Tournée:', tournee);\n    console.log('Statut:', statut);\n    console.log('Site:', site);\n    console.log('Véhicule:', vehicule);\n    console.log('ID Colis:', idColis);\n    console.log('Nombre total de passages avant filtrage:', allPassages.length);\n    try {\n      // Filtrer les passages en fonction des critères sélectionnés\n      let filteredResults = [...allPassages];\n\n      // Filtrer par date de début\n      if (dateDebut) {\n        filteredResults = filteredResults.filter(passage => {\n          const passageDate = convertTimestampToDate(passage.dateHeureDepart);\n          return passageDate && isDateGreaterOrEqual(passageDate, dateDebut);\n        });\n      }\n\n      // Filtrer par date de fin\n      if (dateFin) {\n        filteredResults = filteredResults.filter(passage => {\n          const passageDate = convertTimestampToDate(passage.dateHeureDepart);\n          return passageDate && isDateLessOrEqual(passageDate, dateFin);\n        });\n      }\n\n      // Filtrer par tournée\n      if (tournee) {\n        filteredResults = filteredResults.filter(passage => passage.tourneeId === tournee);\n      }\n\n      // Filtrer par statut\n      if (statut) {\n        filteredResults = filteredResults.filter(passage => passage.statut === statut);\n      }\n\n      // Filtrer par site\n      if (site) {\n        filteredResults = filteredResults.filter(passage => passage.siteDepart === site || passage.siteFin === site);\n      }\n\n      // Filtrer par véhicule\n      if (vehicule) {\n        filteredResults = filteredResults.filter(passage => passage.vehiculeId === vehicule);\n      }\n\n      // Filtrer par ID de colis\n      if (idColis) {\n        filteredResults = filteredResults.filter(passage => passage.idColis && passage.idColis.toLowerCase().includes(idColis.toLowerCase()));\n      }\n      console.log('Nombre de passages après filtrage:', filteredResults.length);\n\n      // Mettre à jour l'état des passages avec les résultats filtrés\n      setPassages(filteredResults);\n    } catch (error) {\n      console.error('Erreur lors de la recherche:', error);\n      setError('Erreur lors de la recherche. Veuillez réessayer.');\n    }\n  };\n  const resetFilters = () => {\n    setDateDebut(null);\n    setDateFin(null);\n    setTournee('');\n    setStatut('');\n    setSite('');\n    setVehicule('');\n    setIdColis('');\n    setQuickSearch('');\n    setSelectedPole('');\n    setFilteredPassages(passages);\n  };\n\n  // Ajout de la fonction pour supprimer les passages sélectionnés\n  const handleDeleteSelected = async () => {\n    if (selectedPassages.length === 0) {\n      alert('Veuillez sélectionner au moins un passage à supprimer');\n      return;\n    }\n    if (window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedPassages.length} passage(s) ?`)) {\n      try {\n        // Supprimer les passages sélectionnés de Firestore\n        const deletePromises = selectedPassages.map(id => deleteDoc(doc(db, 'passages', id)));\n        await Promise.all(deletePromises);\n\n        // Mettre à jour l'état local\n        setPassages(passages.filter(passage => !selectedPassages.includes(passage.id)));\n        setSelectedPassages([]);\n      } catch (error) {\n        console.error('Erreur lors de la suppression:', error);\n        setError('Erreur lors de la suppression');\n      }\n    }\n  };\n\n  // Fonction pour basculer le mode édition\n  const toggleEditMode = () => {\n    if (!editMode) {\n      // Si on entre en mode édition, initialiser l'état d'édition avec les passages actuels\n      console.log(\"Entrée en mode édition\");\n      const initialEditState = {};\n      passages.forEach(passage => {\n        initialEditState[passage.id] = {\n          ...passage\n        };\n      });\n      setEditingPassages(initialEditState);\n      // Activer le mode édition\n      setEditMode(true);\n    } else {\n      // Si on quitte le mode édition, demander confirmation\n      if (window.confirm(\"Voulez-vous enregistrer les modifications ?\")) {\n        console.log(\"Sauvegarde des modifications avant de quitter le mode édition\");\n        // Sauvegarder les modifications et quitter le mode édition après la sauvegarde\n        saveAllChanges().then(() => {\n          // Désélectionner tout et quitter le mode édition\n          setSelectedPassages([]);\n          setEditMode(false);\n        }).catch(error => {\n          console.error(\"Erreur lors de la sauvegarde:\", error);\n          // Laisser l'utilisateur en mode édition en cas d'erreur\n          alert(\"Une erreur est survenue lors de la sauvegarde. Veuillez réessayer.\");\n        });\n      } else {\n        console.log(\"Annulation des modifications et sortie du mode édition\");\n        // Annuler les modifications et quitter le mode édition\n        setEditingPassages({});\n        setSelectedPassages([]);\n        setEditMode(false);\n      }\n    }\n  };\n\n  // Fonction pour sauvegarder toutes les modifications\n  const saveAllChanges = async () => {\n    try {\n      console.log(\"Début de la sauvegarde des modifications...\");\n      console.log(\"Passages à mettre à jour:\", Object.keys(editingPassages).length);\n\n      // Parcourir tous les passages modifiés et les mettre à jour dans Firestore\n      const updatePromises = Object.entries(editingPassages).map(async ([id, passage]) => {\n        try {\n          console.log(`Mise à jour du passage ${id}:`, passage);\n\n          // Créer un objet avec uniquement les champs définis\n          const updateData = {};\n\n          // Vérifier et ajouter chaque champ s'il est défini\n          if (passage.siteDepart !== undefined) updateData.siteDepart = passage.siteDepart;\n          if (passage.dateHeureDepart !== undefined) updateData.dateHeureDepart = passage.dateHeureDepart;\n          if (passage.idColis !== undefined) updateData.idColis = passage.idColis;\n          if (passage.statut !== undefined) updateData.statut = passage.statut;\n          if (passage.siteFin !== undefined) updateData.siteFin = passage.siteFin;\n          if (passage.dateHeureFin !== undefined) updateData.dateHeureFin = passage.dateHeureFin;\n          if (passage.coursierChargement !== undefined) updateData.coursierChargement = passage.coursierChargement;\n          if (passage.coursierLivraison !== undefined) updateData.coursierLivraison = passage.coursierLivraison;\n          if (passage.vehiculeId !== undefined) updateData.vehiculeId = passage.vehiculeId;\n          if (passage.tourneeId !== undefined) updateData.tourneeId = passage.tourneeId;\n          if (passage.pole !== undefined) updateData.pole = passage.pole;\n          await updateDoc(doc(db, 'passages', id), updateData);\n          console.log(`Passage ${id} mis à jour avec succès`);\n          return id;\n        } catch (error) {\n          console.error(`Erreur lors de la mise à jour du passage ${id}:`, error);\n          throw error;\n        }\n      });\n\n      // Attendre que toutes les opérations soient terminées\n      const results = await Promise.allSettled(updatePromises);\n\n      // Vérifier les résultats\n      const fulfilled = results.filter(result => result.status === 'fulfilled').length;\n      const rejected = results.filter(result => result.status === 'rejected').length;\n      console.log(`Opérations terminées: ${fulfilled} réussies, ${rejected} échouées`);\n      if (rejected > 0) {\n        console.warn(\"Certaines opérations ont échoué. Voir les erreurs ci-dessus.\");\n      }\n\n      // Mettre à jour l'état local avec les passages modifiés\n      setPassages(passages.map(passage => {\n        if (editingPassages[passage.id]) {\n          return editingPassages[passage.id];\n        }\n        return passage;\n      }));\n\n      // Rafraîchir les données\n      await fetchPassages();\n\n      // Réinitialiser les états\n      setEditingPassages({});\n      if (rejected > 0) {\n        alert(`Modifications partiellement enregistrées. ${rejected} opérations ont échoué.`);\n      } else {\n        alert('Modifications enregistrées avec succès');\n      }\n      console.log('Toutes les modifications ont été enregistrées avec succès');\n      return true;\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des modifications:', error);\n      alert('Erreur lors de la sauvegarde des modifications. Veuillez réessayer.');\n      throw error;\n    }\n  };\n\n  // Fonction pour gérer les changements de valeur dans les champs d'édition\n  const handleCellChange = (id, field, value) => {\n    setEditingPassages({\n      ...editingPassages,\n      [id]: {\n        ...editingPassages[id],\n        [field]: value\n      }\n    });\n  };\n\n  // Fonction pour formater une date pour l'input de type date\n  const formatDateForInput = date => {\n    if (!date) return '';\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // Fonction pour convertir un Timestamp en format d'heure pour input time\n  const convertTimestampToTime = timestamp => {\n    const date = convertTimestampToDate(timestamp);\n    if (!date) return '';\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n\n  // Fonction pour sélectionner/désélectionner un passage\n  const togglePassageSelection = id => {\n    if (selectedPassages.includes(id)) {\n      setSelectedPassages(selectedPassages.filter(passageId => passageId !== id));\n    } else {\n      setSelectedPassages([...selectedPassages, id]);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des passages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: fetchPassages,\n        children: \"R\\xE9essayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Passages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky-header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-success\",\n            onClick: toggleEditMode,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 17\n            }, this), \" Enregistrer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-secondary\",\n            onClick: () => {\n              if (window.confirm(\"Êtes-vous sûr de vouloir annuler toutes les modifications ?\")) {\n                setEditingPassages({});\n                setSelectedPassages([]);\n                setEditMode(false);\n              }\n            },\n            style: {\n              marginLeft: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 17\n            }, this), \" Annuler\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: toggleEditMode,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 15\n          }, this), \" Modifier\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 9\n      }, this), editMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button-danger\",\n          onClick: handleDeleteSelected,\n          disabled: selectedPassages.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 15\n          }, this), \" Supprimer (\", selectedPassages.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"quick-search-input\",\n          placeholder: \"Recherche rapide...\",\n          value: quickSearch,\n          onChange: e => setQuickSearch(e.target.value),\n          title: \"Rechercher dans le tableau\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pole-filter\",\n          children: /*#__PURE__*/_jsxDEV(PoleFilter, {\n            onPoleChange: handlePoleChange,\n            selectedPole: selectedPole,\n            label: \"Filtrer par p\\xF4le\",\n            className: \"pole-filter-component\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-filters\",\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-group\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date d\\xE9but:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-datepicker-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: dateDebut,\n              onChange: date => setDateDebut(date),\n              locale: \"fr\",\n              dateFormat: \"dd/MM/yyyy\",\n              placeholderText: \"JJ/MM/AAAA\",\n              className: \"custom-datepicker-input\",\n              popperPlacement: \"bottom-start\",\n              popperModifiers: [{\n                name: 'offset',\n                options: {\n                  offset: [0, 8]\n                },\n                fn: state => state\n              }],\n              showMonthDropdown: true,\n              showYearDropdown: true,\n              dropdownMode: \"select\",\n              isClearable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"custom-datepicker-icon\",\n              children: \"\\uD83D\\uDCC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-group\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date fin:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-datepicker-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: dateFin,\n              onChange: date => setDateFin(date),\n              locale: \"fr\",\n              dateFormat: \"dd/MM/yyyy\",\n              placeholderText: \"JJ/MM/AAAA\",\n              className: \"custom-datepicker-input\",\n              popperPlacement: \"bottom-start\",\n              popperModifiers: [{\n                name: 'offset',\n                options: {\n                  offset: [0, 8]\n                },\n                fn: state => state\n              }],\n              showMonthDropdown: true,\n              showYearDropdown: true,\n              dropdownMode: \"select\",\n              isClearable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"custom-datepicker-icon\",\n              children: \"\\uD83D\\uDCC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-group\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sites:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-input\",\n            value: site,\n            onChange: e => setSite(e.target.value),\n            style: {\n              padding: '8px 12px',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n              fontSize: '14px',\n              width: '160px',\n              backgroundColor: 'white'\n            },\n            title: \"Filtrer par site\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Tous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 15\n            }, this), sites.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: s.id,\n              children: s.nom\n            }, s.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-group\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tourn\\xE9es:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-input\",\n            value: tournee,\n            onChange: e => setTournee(e.target.value),\n            style: {\n              padding: '8px 12px',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n              fontSize: '14px',\n              width: '160px',\n              backgroundColor: 'white'\n            },\n            title: \"Filtrer par tourn\\xE9e\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Toutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 15\n            }, this), tournees.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: t.id,\n              children: t.nom\n            }, t.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-group\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"V\\xE9hicules:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-input\",\n            value: vehicule,\n            onChange: e => setVehicule(e.target.value),\n            style: {\n              padding: '8px 12px',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n              fontSize: '14px',\n              width: '160px',\n              backgroundColor: 'white'\n            },\n            title: \"Filtrer par v\\xE9hicule\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Tous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 15\n            }, this), vehicules.map(v => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: v.id,\n              children: v.immatriculation\n            }, v.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-group\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Statut:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-input\",\n            value: statut,\n            onChange: e => setStatut(e.target.value),\n            style: {\n              padding: '8px 12px',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n              fontSize: '14px',\n              width: '160px',\n              backgroundColor: 'white'\n            },\n            title: \"Filtrer par statut\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Tous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Livr\\xE9\",\n              children: \"Livr\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"En cours\",\n              children: \"En cours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-group\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"ID Colis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"text-input\",\n            placeholder: \"ID Colis\",\n            value: idColis,\n            onChange: e => setIdColis(e.target.value),\n            style: {\n              padding: '8px 12px',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n              fontSize: '14px',\n              width: '160px'\n            },\n            title: \"Filtrer par ID de colis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-buttons\",\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-start',\n          marginTop: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: handleSearch,\n          style: {\n            backgroundColor: '#1976d2',\n            color: 'white',\n            padding: '10px 20px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n            transition: 'all 0.2s ease',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginRight: '10px'\n          },\n          onMouseOver: e => e.currentTarget.style.backgroundColor = '#1565c0',\n          onMouseOut: e => e.currentTarget.style.backgroundColor = '#1976d2',\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-search\",\n            style: {\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 13\n          }, this), \" Rechercher\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: resetFilters,\n          style: {\n            backgroundColor: '#f5f5f5',\n            color: '#333',\n            padding: '10px 20px',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            transition: 'all 0.2s ease',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          onMouseOver: e => e.currentTarget.style.backgroundColor = '#e0e0e0',\n          onMouseOut: e => e.currentTarget.style.backgroundColor = '#f5f5f5',\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-undo\",\n            style: {\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 13\n          }, this), \" R\\xE9initialiser\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"passages-table-container\",\n      style: {\n        overflowX: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [filteredPassages.length, \" r\\xE9sultat(s) trouv\\xE9(s)\", quickSearch ? ` pour la recherche \"${quickSearch}\"` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [editMode && /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedPassages.length === filteredPassages.length,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      setSelectedPassages(filteredPassages.map(passage => passage.id));\n                    } else {\n                      setSelectedPassages([]);\n                    }\n                  },\n                  title: \"S\\xE9lectionner/D\\xE9s\\xE9lectionner tous les passages\",\n                  \"aria-label\": \"S\\xE9lectionner tous les passages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1197,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"P\\xD4LE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Site de d\\xE9part\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Heure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Site d'arriv\\xE9e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"V\\xE9hicule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Coursier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Commentaire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredPassages.map(passage => {\n              var _editingPassages$pass, _editingPassages$pass2, _editingPassages$pass3, _editingPassages$pass4, _convertTimestampToDa, _editingPassages$pass6, _editingPassages$pass7, _editingPassages$pass8, _editingPassages$pass9, _editingPassages$pass10, _editingPassages$pass11;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: selectedPassages.includes(passage.id) ? 'selected-row' : '',\n                children: [editMode && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedPassages.includes(passage.id),\n                    onChange: () => togglePassageSelection(passage.id),\n                    title: `Sélectionner le passage ${passage.id}`,\n                    \"aria-label\": `Sélectionner le passage ${passage.id}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1228,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1227,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(PoleSelector, {\n                    value: ((_editingPassages$pass = editingPassages[passage.id]) === null || _editingPassages$pass === void 0 ? void 0 : _editingPassages$pass.pole) || passage.pole || '',\n                    onChange: value => handleCellChange(passage.id, 'pole', value),\n                    placeholder: \"S\\xE9lectionner un p\\xF4le\",\n                    style: {\n                      width: '100%'\n                    },\n                    showSearch: true,\n                    allowClear: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1239,\n                    columnNumber: 23\n                  }, this) : getPoleNameById(passage.pole)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: ((_editingPassages$pass2 = editingPassages[passage.id]) === null || _editingPassages$pass2 === void 0 ? void 0 : _editingPassages$pass2.siteDepart) || passage.siteDepart,\n                    onChange: e => handleCellChange(passage.id, 'siteDepart', e.target.value),\n                    className: \"inline-edit-select\",\n                    title: \"S\\xE9lectionner un site de d\\xE9part\",\n                    \"aria-label\": \"Site de d\\xE9part\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"S\\xE9lectionner un site\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1260,\n                      columnNumber: 25\n                    }, this), sites.map(site => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: site.id,\n                      children: site.nom\n                    }, site.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1262,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1253,\n                    columnNumber: 23\n                  }, this) : getSiteName(passage.siteDepart)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1251,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    value: formatDateForInput(convertTimestampToDate(((_editingPassages$pass3 = editingPassages[passage.id]) === null || _editingPassages$pass3 === void 0 ? void 0 : _editingPassages$pass3.dateHeureDepart) || passage.dateHeureDepart)),\n                    onChange: e => {\n                      const newDate = new Date(e.target.value);\n                      handleCellChange(passage.id, 'dateHeureDepart', Timestamp.fromDate(newDate));\n                    },\n                    className: \"inline-edit-input\",\n                    onClick: e => e.stopPropagation()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1271,\n                    columnNumber: 23\n                  }, this) : formatDateFr(convertTimestampToDate(passage.dateHeureDepart))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    value: convertTimestampToTime(((_editingPassages$pass4 = editingPassages[passage.id]) === null || _editingPassages$pass4 === void 0 ? void 0 : _editingPassages$pass4.dateHeureDepart) || passage.dateHeureDepart),\n                    onChange: e => {\n                      var _editingPassages$pass5;\n                      // Préserver la date mais changer l'heure\n                      const currentDate = convertTimestampToDate(((_editingPassages$pass5 = editingPassages[passage.id]) === null || _editingPassages$pass5 === void 0 ? void 0 : _editingPassages$pass5.dateHeureDepart) || passage.dateHeureDepart);\n                      if (currentDate) {\n                        const [hours, minutes] = e.target.value.split(':').map(Number);\n                        currentDate.setHours(hours, minutes);\n                        handleCellChange(passage.id, 'dateHeureDepart', Timestamp.fromDate(currentDate));\n                      }\n                    },\n                    className: \"inline-edit-input\",\n                    onClick: e => e.stopPropagation()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1287,\n                    columnNumber: 23\n                  }, this) : passage.dateHeureDepart ? (_convertTimestampToDa = convertTimestampToDate(passage.dateHeureDepart)) === null || _convertTimestampToDa === void 0 ? void 0 : _convertTimestampToDa.toLocaleTimeString('fr-FR', {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  }) : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: ((_editingPassages$pass6 = editingPassages[passage.id]) === null || _editingPassages$pass6 === void 0 ? void 0 : _editingPassages$pass6.statut) || passage.statut,\n                    onChange: e => handleCellChange(passage.id, 'statut', e.target.value),\n                    className: \"inline-edit-select\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Livr\\xE9\",\n                      children: \"Livr\\xE9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1316,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"En cours\",\n                      children: \"En cours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1317,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1311,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: passage.statut === 'Livré' ? 'livré' : 'en-cours',\n                    children: passage.statut\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1320,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: ((_editingPassages$pass7 = editingPassages[passage.id]) === null || _editingPassages$pass7 === void 0 ? void 0 : _editingPassages$pass7.siteFin) || passage.siteFin,\n                    onChange: e => handleCellChange(passage.id, 'siteFin', e.target.value),\n                    className: \"inline-edit-select\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"S\\xE9lectionner un site\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1332,\n                      columnNumber: 25\n                    }, this), sites.map(site => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: site.nom,\n                      children: site.nom\n                    }, site.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1334,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1327,\n                    columnNumber: 23\n                  }, this) : getSiteName(passage.siteFin)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: ((_editingPassages$pass8 = editingPassages[passage.id]) === null || _editingPassages$pass8 === void 0 ? void 0 : _editingPassages$pass8.coursierChargement) || passage.coursierChargement || '',\n                    onChange: e => handleCellChange(passage.id, 'coursierChargement', e.target.value),\n                    className: \"inline-edit-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1345,\n                    columnNumber: 23\n                  }, this) : passage.coursierChargement || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1343,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: ((_editingPassages$pass9 = editingPassages[passage.id]) === null || _editingPassages$pass9 === void 0 ? void 0 : _editingPassages$pass9.coursierLivraison) || passage.coursierLivraison || '',\n                    onChange: e => handleCellChange(passage.id, 'coursierLivraison', e.target.value),\n                    className: \"inline-edit-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1357,\n                    columnNumber: 23\n                  }, this) : passage.coursierLivraison || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1355,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: ((_editingPassages$pass10 = editingPassages[passage.id]) === null || _editingPassages$pass10 === void 0 ? void 0 : _editingPassages$pass10.tourneeId) || passage.tourneeId,\n                    onChange: e => handleCellChange(passage.id, 'tourneeId', e.target.value),\n                    className: \"inline-edit-select\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"S\\xE9lectionner une tourn\\xE9e\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1374,\n                      columnNumber: 25\n                    }, this), tournees.map(tournee => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: tournee.id,\n                      children: tournee.nom\n                    }, tournee.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1376,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1369,\n                    columnNumber: 23\n                  }, this) : getTourneeName(passage.tourneeId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1367,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: ((_editingPassages$pass11 = editingPassages[passage.id]) === null || _editingPassages$pass11 === void 0 ? void 0 : _editingPassages$pass11.vehiculeId) || passage.vehiculeId,\n                    onChange: e => handleCellChange(passage.id, 'vehiculeId', e.target.value),\n                    className: \"inline-edit-select\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"S\\xE9lectionner un v\\xE9hicule\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1392,\n                      columnNumber: 25\n                    }, this), vehicules.map(vehicule => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: vehicule.id,\n                      children: vehicule.immatriculation\n                    }, vehicule.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1394,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1387,\n                    columnNumber: 23\n                  }, this) : getVehiculeImmatriculation(passage.vehiculeId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1385,\n                  columnNumber: 19\n                }, this)]\n              }, passage.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 899,\n    columnNumber: 5\n  }, this);\n};\n_s(Passages, \"qUJYGJRnAWYDCBzm3V9/kMjR7HA=\", false, function () {\n  return [usePoles];\n});\n_c = Passages;\nexport default Passages;\nvar _c;\n$RefreshReg$(_c, \"Passages\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","Timestamp","deleteDoc","doc","updateDoc","DatePicker","registerLocale","fr","usePoles","PoleSelector","PoleFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","datepickerStyles","Passages","_s","passages","setPassages","allPassages","setAllPassages","loading","setLoading","error","setError","tournees","setTournees","sites","setSites","vehicules","setVehicules","dateDebut","setDateDebut","dateFin","setDateFin","tournee","setTournee","statut","setStatut","site","setSite","vehicule","setVehicule","idColis","setIdColis","quickSearch","setQuickSearch","filteredPassages","setFilteredPassages","selectedPole","setSelectedPole","editMode","setEditMode","selectedPassages","setSelectedPassages","editingPassages","setEditingPassages","poles","fetchPassages","fetchTournees","fetchSites","fetchVehicules","document","documentElement","lang","styleElement","createElement","textContent","head","appendChild","removeChild","results","filter","passage","pole","trim","searchTerm","toLowerCase","getSiteName","siteDepart","includes","siteFin","coursierChargement","coursierLivraison","getTourneeName","tourneeId","getVehiculeImmatriculation","vehiculeId","formatDateFr","convertTimestampToDate","dateHeureDepart","timestamp","Date","toDate","seconds","nanoseconds","console","compareDatesOnly","date1","date2","onlyDate1","getFullYear","getMonth","getDate","onlyDate2","getTime","isDateGreaterOrEqual","isDateLessOrEqual","passagesRef","passagesSnapshot","empty","log","docs","length","forEach","index","id","data","passagesData","map","Object","keys","normalizedData","siteDépart","dhDépart","dateHeureFin","dhLivraison","coursierCharg","véhicule","tournée","tourneesRef","snapshot","tourneesData","nom","date","fromDate","heureDepart","heureFinPrevue","heureFinReelle","coursier","nombreColis","defaultTournees","sitesRef","sitesData","adresse","ville","codePostal","telephone","email","type","defaultSites","vehiculesRef","vehiculesData","immatriculation","marque","modele","annee","dernierEntretien","coursierAssigne","kilometrage","defaultVehicules","foundTournee","find","t","siteId","foundSite","s","foundVehicule","v","day","toString","padStart","month","year","getPoleNameById","poleId","p","handlePoleChange","handleSearch","filteredResults","passageDate","resetFilters","handleDeleteSelected","alert","window","confirm","deletePromises","Promise","all","toggleEditMode","initialEditState","saveAllChanges","then","catch","updatePromises","entries","updateData","undefined","allSettled","fulfilled","result","status","rejected","warn","handleCellChange","field","value","formatDateForInput","convertTimestampToTime","hours","getHours","minutes","getMinutes","togglePassageSelection","passageId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","disabled","placeholder","onChange","e","target","title","onPoleChange","label","display","flexWrap","gap","flexDirection","selected","locale","dateFormat","placeholderText","popperPlacement","popperModifiers","name","options","offset","fn","state","showMonthDropdown","showYearDropdown","dropdownMode","isClearable","padding","borderRadius","border","fontSize","width","backgroundColor","justifyContent","marginTop","color","cursor","fontWeight","boxShadow","transition","alignItems","marginRight","onMouseOver","currentTarget","onMouseOut","overflowX","checked","_editingPassages$pass","_editingPassages$pass2","_editingPassages$pass3","_editingPassages$pass4","_convertTimestampToDa","_editingPassages$pass6","_editingPassages$pass7","_editingPassages$pass8","_editingPassages$pass9","_editingPassages$pass10","_editingPassages$pass11","showSearch","allowClear","newDate","stopPropagation","_editingPassages$pass5","currentDate","split","Number","setHours","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/Passages.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../config/firebase';\nimport { collection, getDocs, Timestamp, deleteDoc, doc, updateDoc } from 'firebase/firestore';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale } from 'react-datepicker';\nimport { fr } from 'date-fns/locale/fr';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './Passages.css';\nimport './EditMode.css';\nimport { usePoles } from '../services/PoleService';\nimport PoleSelector from './PoleSelector';\nimport PoleFilter from './PoleFilter';\n\n// Enregistrer la locale française\nregisterLocale('fr', fr);\n\n// Styles personnalisés pour le datepicker\nconst datepickerStyles = `\n  .react-datepicker {\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    border: 1px solid #e0e0e0;\n    z-index: 1000;\n  }\n  \n  .react-datepicker-popper {\n    z-index: 1000;\n  }\n  \n  .react-datepicker__header {\n    background-color: #1976d2;\n    border-bottom: none;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    padding-top: 10px;\n  }\n  \n  .react-datepicker__current-month {\n    color: white;\n    font-weight: 500;\n    font-size: 1rem;\n    padding-bottom: 5px;\n  }\n  \n  .react-datepicker__day-name {\n    color: white;\n    font-weight: 500;\n  }\n  \n  .react-datepicker__day--selected {\n    background-color: #1976d2;\n    border-radius: 50%;\n  }\n  \n  .react-datepicker__day:hover {\n    background-color: #e8f0fe;\n    border-radius: 50%;\n  }\n  \n  .react-datepicker__day--keyboard-selected {\n    background-color: #e8f0fe;\n    color: #1976d2;\n    border-radius: 50%;\n  }\n  \n  .react-datepicker__navigation {\n    top: 12px;\n  }\n  \n  .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  \n  .react-datepicker__day--today {\n    font-weight: bold;\n    color: #1976d2;\n  }\n  \n  .custom-datepicker-input {\n    width: 160px;\n    padding: 10px 12px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    font-size: 14px;\n    cursor: pointer;\n    background-color: white;\n    transition: all 0.2s ease;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  }\n  \n  .custom-datepicker-input:focus {\n    outline: none;\n    border-color: #1976d2;\n    box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.2);\n  }\n  \n  .custom-datepicker-input::placeholder {\n    color: #aaa;\n  }\n  \n  .custom-datepicker-wrapper {\n    position: relative;\n  }\n  \n  .custom-datepicker-icon {\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #666;\n    pointer-events: none;\n  }\n`;\n\ninterface Passage {\n  id: string;\n  siteDepart: string;\n  dateHeureDepart: Timestamp | any; // Accepter différents formats pour la compatibilité\n  idColis: string;\n  statut: 'Livré' | 'En cours';\n  siteFin?: string;\n  dateHeureFin?: Timestamp | any; // Accepter différents formats pour la compatibilité\n  coursierChargement?: string;\n  coursierLivraison?: string;\n  vehiculeId?: string;\n  tourneeId?: string;\n  heureDebut?: string;\n  heureFin?: string;\n  pole?: string;\n}\n\ninterface Tournee {\n  id: string;\n  nom: string;\n  date: Timestamp;\n  heureDepart: string;\n  heureFinPrevue: string;\n  heureFinReelle?: string;\n  coursier: string;\n  vehicule: string;\n  nombreColis: number;\n  statut: 'en_attente' | 'en_cours' | 'terminee' | 'annulee';\n  siteDepart: string;\n}\n\ninterface Site {\n  id: string;\n  nom: string;\n  adresse: string;\n  ville: string;\n  codePostal: string;\n  telephone: string;\n  email: string;\n  type: string;\n  statut: 'actif' | 'inactif';\n}\n\ninterface Vehicule {\n  id: string;\n  immatriculation: string;\n  marque: string;\n  modele: string;\n  type: string;\n  annee: number;\n  statut: 'actif' | 'maintenance' | 'inactif';\n  dernierEntretien?: string;\n  coursierAssigne?: string;\n  kilometrage: number;\n}\n\nconst Passages: React.FC = () => {\n  const [passages, setPassages] = useState<Passage[]>([]);\n  const [allPassages, setAllPassages] = useState<Passage[]>([]); \n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [tournees, setTournees] = useState<Tournee[]>([]);\n  const [sites, setSites] = useState<Site[]>([]);\n  const [vehicules, setVehicules] = useState<Vehicule[]>([]);\n  \n  // Filtres\n  const [dateDebut, setDateDebut] = useState<Date | null>(null);\n  const [dateFin, setDateFin] = useState<Date | null>(null);\n  const [tournee, setTournee] = useState<string>('');\n  const [statut, setStatut] = useState<string>('');\n  const [site, setSite] = useState<string>('');\n  const [vehicule, setVehicule] = useState<string>('');\n  const [idColis, setIdColis] = useState<string>('');\n  \n  // Recherche rapide\n  const [quickSearch, setQuickSearch] = useState<string>('');\n  const [filteredPassages, setFilteredPassages] = useState<Passage[]>([]);\n\n  // Ajout du filtre par pôle\n  const [selectedPole, setSelectedPole] = useState<string>('');\n\n  // Ajout des états pour le mode édition et la sélection multiple\n  const [editMode, setEditMode] = useState(false);\n  const [selectedPassages, setSelectedPassages] = useState<string[]>([]);\n  const [editingPassages, setEditingPassages] = useState<{[key: string]: Passage}>({});\n\n  // Utilisation du hook usePoles\n  const { poles } = usePoles();\n\n  useEffect(() => {\n    fetchPassages();\n    fetchTournees();\n    fetchSites();\n    fetchVehicules();\n    \n    // Ajouter l'attribut lang=\"fr\" au document pour les calendriers en français\n    document.documentElement.lang = 'fr';\n    \n    // Ajouter les styles personnalisés pour le datepicker\n    const styleElement = document.createElement('style');\n    styleElement.textContent = datepickerStyles;\n    document.head.appendChild(styleElement);\n    \n    return () => {\n      // Nettoyage\n      document.documentElement.lang = '';\n      document.head.removeChild(styleElement);\n    };\n  }, []);\n\n  // Initialiser les passages filtrés au chargement\n  useEffect(() => {\n    setFilteredPassages(passages);\n  }, [passages]);\n\n  // Effet pour filtrer les passages en fonction de la recherche rapide et du pôle sélectionné\n  useEffect(() => {\n    let results = passages;\n\n    // Filtrer par pôle si un pôle est sélectionné\n    if (selectedPole) {\n      results = results.filter(passage => passage.pole === selectedPole);\n    }\n\n    // Ensuite filtrer par recherche rapide\n    if (quickSearch.trim()) {\n      const searchTerm = quickSearch.toLowerCase().trim();\n      results = results.filter(passage => {\n        // Rechercher dans tous les champs textuels du passage\n        return (\n          getSiteName(passage.siteDepart).toLowerCase().includes(searchTerm) ||\n          getSiteName(passage.siteFin || '').toLowerCase().includes(searchTerm) ||\n          passage.idColis.toLowerCase().includes(searchTerm) ||\n          passage.statut.toLowerCase().includes(searchTerm) ||\n          (passage.coursierChargement || '').toLowerCase().includes(searchTerm) ||\n          (passage.coursierLivraison || '').toLowerCase().includes(searchTerm) ||\n          getTourneeName(passage.tourneeId).toLowerCase().includes(searchTerm) ||\n          getVehiculeImmatriculation(passage.vehiculeId).toLowerCase().includes(searchTerm) ||\n          formatDateFr(convertTimestampToDate(passage.dateHeureDepart)).includes(searchTerm)\n        );\n      });\n    }\n\n    setFilteredPassages(results);\n  }, [quickSearch, passages, selectedPole]);\n\n  // Fonction pour convertir un Timestamp Firebase en Date JavaScript\n  const convertTimestampToDate = (timestamp: any): Date | null => {\n    if (!timestamp) return null;\n    \n    // Si c'est déjà un objet Date\n    if (timestamp instanceof Date) return timestamp;\n    \n    // Si c'est un Timestamp Firebase avec la méthode toDate()\n    if (timestamp && typeof timestamp.toDate === 'function') {\n      return timestamp.toDate();\n    }\n    \n    // Si c'est un objet avec seconds et nanoseconds (format Firestore)\n    if (timestamp && 'seconds' in timestamp && 'nanoseconds' in timestamp) {\n      return new Date(timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000);\n    }\n    \n    // Si c'est un nombre (timestamp en millisecondes)\n    if (typeof timestamp === 'number') {\n      return new Date(timestamp);\n    }\n    \n    // Si c'est une chaîne de caractères\n    if (typeof timestamp === 'string') {\n      return new Date(timestamp);\n    }\n    \n    console.error('Format de timestamp non reconnu:', timestamp);\n    return null;\n  };\n\n  // Fonction pour comparer uniquement les dates (sans l'heure)\n  const compareDatesOnly = (date1: Date | null, date2: Date | null): boolean => {\n    if (!date1 || !date2) return false;\n    \n    // Créer de nouvelles dates avec uniquement l'année, le mois et le jour\n    const onlyDate1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const onlyDate2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    \n    // Comparer les timestamps (en millisecondes)\n    return onlyDate1.getTime() === onlyDate2.getTime();\n  };\n  \n  // Fonction pour vérifier si une date est supérieure ou égale à une autre (sans l'heure)\n  const isDateGreaterOrEqual = (date1: Date | null, date2: Date | null): boolean => {\n    if (!date1 || !date2) return false;\n    \n    // Créer de nouvelles dates avec uniquement l'année, le mois et le jour\n    const onlyDate1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const onlyDate2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    \n    // Comparer les timestamps (en millisecondes)\n    return onlyDate1.getTime() >= onlyDate2.getTime();\n  };\n  \n  // Fonction pour vérifier si une date est inférieure ou égale à une autre (sans l'heure)\n  const isDateLessOrEqual = (date1: Date | null, date2: Date | null): boolean => {\n    if (!date1 || !date2) return false;\n    \n    // Créer de nouvelles dates avec uniquement l'année, le mois et le jour\n    const onlyDate1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const onlyDate2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    \n    // Comparer les timestamps (en millisecondes)\n    return onlyDate1.getTime() <= onlyDate2.getTime();\n  };\n\n  const fetchPassages = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Récupérer les données depuis Firebase\n      const passagesRef = collection(db, 'passages');\n      const passagesSnapshot = await getDocs(passagesRef);\n      \n      if (passagesSnapshot.empty) {\n        console.log('Aucun passage trouvé dans Firebase');\n        setError('Aucun passage trouvé. Veuillez initialiser les données.');\n        setLoading(false);\n        return;\n      }\n      \n      console.log('Nombre de documents récupérés:', passagesSnapshot.docs.length);\n      \n      // Afficher les données brutes pour comprendre la structure\n      console.log('Données brutes de Firebase:');\n      passagesSnapshot.docs.forEach((doc, index) => {\n        console.log(`Document ${index + 1} (ID: ${doc.id}):`, doc.data());\n      });\n      \n      const passagesData = passagesSnapshot.docs.map(doc => {\n        const data = doc.data();\n        \n        // Vérifier les propriétés exactes des données\n        console.log('Propriétés du document:', Object.keys(data));\n        \n        // Normaliser les noms de propriétés\n        const normalizedData = {\n          id: doc.id,\n          siteDepart: data.siteDépart || data.siteDepart || '',\n          dateHeureDepart: data.dhDépart || data.dateHeureDepart,\n          idColis: data.idColis || '',\n          statut: data.statut || 'En cours',\n          siteFin: data.siteFin || '',\n          dateHeureFin: data.dhLivraison || data.dateHeureFin,\n          coursierChargement: data.coursierCharg || data.coursierChargement || '',\n          coursierLivraison: data.coursierLivraison || '',\n          vehiculeId: data.véhicule || data.vehiculeId || '',\n          tourneeId: data.tournée || data.tourneeId || '',\n          pole: data.pole || '',\n        } as Passage;\n        \n        return normalizedData;\n      });\n      \n      console.log('Données récupérées de Firebase (après normalisation):', passagesData);\n      \n      setAllPassages(passagesData);\n      setPassages(passagesData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des passages:', error);\n      setError('Erreur lors de la récupération des données');\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour récupérer les tournées depuis Firebase\n  const fetchTournees = async () => {\n    try {\n      const tourneesRef = collection(db, 'tournees');\n      const snapshot = await getDocs(tourneesRef);\n      \n      if (!snapshot.empty) {\n        const tourneesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            nom: data.nom || '',\n            date: data.date || Timestamp.fromDate(new Date()),\n            heureDepart: data.heureDepart || '',\n            heureFinPrevue: data.heureFinPrevue || '',\n            heureFinReelle: data.heureFinReelle || '',\n            coursier: data.coursier || '',\n            vehicule: data.vehicule || '',\n            nombreColis: data.nombreColis || 0,\n            statut: data.statut || 'en_attente',\n            siteDepart: data.siteDepart || ''\n          } as Tournee;\n        });\n        \n        setTournees(tourneesData);\n      } else {\n        console.log(\"Aucune tournée trouvée dans Firebase\");\n        // Définir quelques tournées par défaut si aucune n'est trouvée\n        const defaultTournees = [\n          {\n            id: '1',\n            nom: 'Matin',\n            date: Timestamp.fromDate(new Date()),\n            heureDepart: '07:00',\n            heureFinPrevue: '12:00',\n            coursier: 'Sébastien Lherlier',\n            vehicule: 'GE-695-RT',\n            nombreColis: 15,\n            statut: 'en_attente' as const,\n            siteDepart: 'Laboratoire Central'\n          },\n          {\n            id: '2',\n            nom: 'Jour',\n            date: Timestamp.fromDate(new Date()),\n            heureDepart: '12:00',\n            heureFinPrevue: '17:00',\n            coursier: 'Guillaume Sage',\n            vehicule: 'GI-456-AD',\n            nombreColis: 12,\n            statut: 'en_attente' as const,\n            siteDepart: 'Laboratoire Purpan'\n          },\n          {\n            id: '3',\n            nom: 'Soir',\n            date: Timestamp.fromDate(new Date()),\n            heureDepart: '17:00',\n            heureFinPrevue: '22:00',\n            coursier: 'Sébastien Lherlier',\n            vehicule: 'GE-695-RT',\n            nombreColis: 10,\n            statut: 'en_attente' as const,\n            siteDepart: 'Laboratoire Central'\n          }\n        ];\n        setTournees(defaultTournees);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des tournées:', error);\n    }\n  };\n\n  // Fonction pour récupérer les sites depuis Firebase\n  const fetchSites = async () => {\n    try {\n      const sitesRef = collection(db, 'sites');\n      const snapshot = await getDocs(sitesRef);\n      \n      if (!snapshot.empty) {\n        const sitesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            nom: data.nom || '',\n            adresse: data.adresse || '',\n            ville: data.ville || '',\n            codePostal: data.codePostal || '',\n            telephone: data.telephone || '',\n            email: data.email || '',\n            type: data.type || '',\n            statut: data.statut || 'actif'\n          } as Site;\n        });\n        \n        setSites(sitesData);\n      } else {\n        console.log(\"Aucun site trouvé dans Firebase\");\n        // Définir quelques sites par défaut si aucun n'est trouvé\n        const defaultSites = [\n          {\n            id: '1',\n            nom: 'Laboratoire Central',\n            adresse: '15 rue des Sciences',\n            ville: 'Toulouse',\n            codePostal: '31000',\n            telephone: '05.61.XX.XX.XX',\n            email: 'contact@labo-central.fr',\n            type: 'Laboratoire',\n            statut: 'actif' as const\n          },\n          {\n            id: '2',\n            nom: 'Laboratoire Purpan',\n            adresse: '330 avenue de Grande Bretagne',\n            ville: 'Toulouse',\n            codePostal: '31300',\n            telephone: '05.61.XX.XX.XX',\n            email: 'contact@labo-purpan.fr',\n            type: 'Laboratoire',\n            statut: 'actif' as const\n          }\n        ];\n        setSites(defaultSites);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des sites:', error);\n    }\n  };\n\n  // Fonction pour récupérer les véhicules depuis Firebase\n  const fetchVehicules = async () => {\n    try {\n      const vehiculesRef = collection(db, 'vehicules');\n      const snapshot = await getDocs(vehiculesRef);\n      \n      if (!snapshot.empty) {\n        const vehiculesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            immatriculation: data.immatriculation || '',\n            marque: data.marque || '',\n            modele: data.modele || '',\n            type: data.type || '',\n            annee: data.annee || 2023,\n            statut: data.statut || 'actif',\n            dernierEntretien: data.dernierEntretien || '',\n            coursierAssigne: data.coursierAssigne || '',\n            kilometrage: data.kilometrage || 0\n          } as Vehicule;\n        });\n        \n        setVehicules(vehiculesData);\n      } else {\n        console.log(\"Aucun véhicule trouvé dans Firebase\");\n        // Définir quelques véhicules par défaut si aucun n'est trouvé\n        const defaultVehicules = [\n          {\n            id: '1',\n            immatriculation: 'GE-695-RT',\n            marque: 'Renault',\n            modele: 'Kangoo',\n            type: 'Utilitaire',\n            annee: 2020,\n            statut: 'actif' as const,\n            dernierEntretien: '2023-01-15',\n            coursierAssigne: 'Sébastien Lherlier',\n            kilometrage: 45000\n          },\n          {\n            id: '2',\n            immatriculation: 'GI-456-AD',\n            marque: 'Citroën',\n            modele: 'Berlingo',\n            type: 'Utilitaire',\n            annee: 2021,\n            statut: 'actif' as const,\n            dernierEntretien: '2023-02-10',\n            coursierAssigne: 'Guillaume Sage',\n            kilometrage: 32500\n          }\n        ];\n        setVehicules(defaultVehicules);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des véhicules:', error);\n    }\n  };\n\n  // Fonction pour obtenir le nom de la tournée à partir de son ID\n  const getTourneeName = (tourneeId: string | undefined): string => {\n    if (!tourneeId) return '';\n    const foundTournee = tournees.find(t => t.id === tourneeId);\n    return foundTournee ? foundTournee.nom : tourneeId;\n  };\n\n  // Fonction pour obtenir le nom du site à partir de son ID\n  const getSiteName = (siteId: string | undefined): string => {\n    if (!siteId) return '';\n    const foundSite = sites.find(s => s.id === siteId);\n    return foundSite ? foundSite.nom : siteId;\n  };\n\n  // Fonction pour obtenir l'immatriculation du véhicule à partir de son ID\n  const getVehiculeImmatriculation = (vehiculeId: string | undefined): string => {\n    if (!vehiculeId) return '';\n    const foundVehicule = vehicules.find(v => v.id === vehiculeId);\n    return foundVehicule ? foundVehicule.immatriculation : vehiculeId;\n  };\n\n  // Fonction pour formater une date au format français (JJ/MM/AAAA)\n  const formatDateFr = (date: Date | null): string => {\n    if (!date) return '';\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  // Fonction pour obtenir le nom du pôle\n  const getPoleNameById = (poleId: string | undefined): string => {\n    if (!poleId) return '-';\n    const pole = poles.find(p => p.id === poleId);\n    return pole ? pole.nom : poleId;\n  };\n\n  // Fonction pour gérer le changement de pôle\n  const handlePoleChange = (pole: string) => {\n    setSelectedPole(pole);\n  };\n\n  const handleSearch = () => {\n    console.log('Recherche démarrée avec les critères suivants:');\n    console.log('Date début:', dateDebut);\n    console.log('Date fin:', dateFin);\n    console.log('Tournée:', tournee);\n    console.log('Statut:', statut);\n    console.log('Site:', site);\n    console.log('Véhicule:', vehicule);\n    console.log('ID Colis:', idColis);\n    console.log('Nombre total de passages avant filtrage:', allPassages.length);\n    \n    try {\n      // Filtrer les passages en fonction des critères sélectionnés\n      let filteredResults = [...allPassages];\n      \n      // Filtrer par date de début\n      if (dateDebut) {\n        filteredResults = filteredResults.filter(passage => {\n          const passageDate = convertTimestampToDate(passage.dateHeureDepart);\n          return passageDate && isDateGreaterOrEqual(passageDate, dateDebut);\n        });\n      }\n      \n      // Filtrer par date de fin\n      if (dateFin) {\n        filteredResults = filteredResults.filter(passage => {\n          const passageDate = convertTimestampToDate(passage.dateHeureDepart);\n          return passageDate && isDateLessOrEqual(passageDate, dateFin);\n        });\n      }\n      \n      // Filtrer par tournée\n      if (tournee) {\n        filteredResults = filteredResults.filter(passage => passage.tourneeId === tournee);\n      }\n      \n      // Filtrer par statut\n      if (statut) {\n        filteredResults = filteredResults.filter(passage => passage.statut === statut);\n      }\n      \n      // Filtrer par site\n      if (site) {\n        filteredResults = filteredResults.filter(passage => passage.siteDepart === site || passage.siteFin === site);\n      }\n      \n      // Filtrer par véhicule\n      if (vehicule) {\n        filteredResults = filteredResults.filter(passage => passage.vehiculeId === vehicule);\n      }\n      \n      // Filtrer par ID de colis\n      if (idColis) {\n        filteredResults = filteredResults.filter(passage => \n          passage.idColis && passage.idColis.toLowerCase().includes(idColis.toLowerCase())\n        );\n      }\n      \n      console.log('Nombre de passages après filtrage:', filteredResults.length);\n      \n      // Mettre à jour l'état des passages avec les résultats filtrés\n      setPassages(filteredResults);\n    } catch (error) {\n      console.error('Erreur lors de la recherche:', error);\n      setError('Erreur lors de la recherche. Veuillez réessayer.');\n    }\n  };\n\n  const resetFilters = () => {\n    setDateDebut(null);\n    setDateFin(null);\n    setTournee('');\n    setStatut('');\n    setSite('');\n    setVehicule('');\n    setIdColis('');\n    setQuickSearch('');\n    setSelectedPole('');\n    setFilteredPassages(passages);\n  };\n\n  // Ajout de la fonction pour supprimer les passages sélectionnés\n  const handleDeleteSelected = async () => {\n    if (selectedPassages.length === 0) {\n      alert('Veuillez sélectionner au moins un passage à supprimer');\n      return;\n    }\n\n    if (window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedPassages.length} passage(s) ?`)) {\n      try {\n        // Supprimer les passages sélectionnés de Firestore\n        const deletePromises = selectedPassages.map(id => deleteDoc(doc(db, 'passages', id)));\n        await Promise.all(deletePromises);\n        \n        // Mettre à jour l'état local\n        setPassages(passages.filter(passage => !selectedPassages.includes(passage.id)));\n        setSelectedPassages([]);\n      } catch (error) {\n        console.error('Erreur lors de la suppression:', error);\n        setError('Erreur lors de la suppression');\n      }\n    }\n  };\n\n  // Fonction pour basculer le mode édition\n  const toggleEditMode = () => {\n    if (!editMode) {\n      // Si on entre en mode édition, initialiser l'état d'édition avec les passages actuels\n      console.log(\"Entrée en mode édition\");\n      const initialEditState: {[key: string]: Passage} = {};\n      passages.forEach(passage => {\n        initialEditState[passage.id] = {...passage};\n      });\n      setEditingPassages(initialEditState);\n      // Activer le mode édition\n      setEditMode(true);\n    } else {\n      // Si on quitte le mode édition, demander confirmation\n      if (window.confirm(\"Voulez-vous enregistrer les modifications ?\")) {\n        console.log(\"Sauvegarde des modifications avant de quitter le mode édition\");\n        // Sauvegarder les modifications et quitter le mode édition après la sauvegarde\n        saveAllChanges().then(() => {\n          // Désélectionner tout et quitter le mode édition\n          setSelectedPassages([]);\n          setEditMode(false);\n        }).catch(error => {\n          console.error(\"Erreur lors de la sauvegarde:\", error);\n          // Laisser l'utilisateur en mode édition en cas d'erreur\n          alert(\"Une erreur est survenue lors de la sauvegarde. Veuillez réessayer.\");\n        });\n      } else {\n        console.log(\"Annulation des modifications et sortie du mode édition\");\n        // Annuler les modifications et quitter le mode édition\n        setEditingPassages({});\n        setSelectedPassages([]);\n        setEditMode(false);\n      }\n    }\n  };\n\n  // Fonction pour sauvegarder toutes les modifications\n  const saveAllChanges = async () => {\n    try {\n      console.log(\"Début de la sauvegarde des modifications...\");\n      console.log(\"Passages à mettre à jour:\", Object.keys(editingPassages).length);\n      \n      // Parcourir tous les passages modifiés et les mettre à jour dans Firestore\n      const updatePromises = Object.entries(editingPassages).map(async ([id, passage]) => {\n        try {\n          console.log(`Mise à jour du passage ${id}:`, passage);\n          \n          // Créer un objet avec uniquement les champs définis\n          const updateData: Partial<Passage> = {};\n          \n          // Vérifier et ajouter chaque champ s'il est défini\n          if (passage.siteDepart !== undefined) updateData.siteDepart = passage.siteDepart;\n          if (passage.dateHeureDepart !== undefined) updateData.dateHeureDepart = passage.dateHeureDepart;\n          if (passage.idColis !== undefined) updateData.idColis = passage.idColis;\n          if (passage.statut !== undefined) updateData.statut = passage.statut;\n          if (passage.siteFin !== undefined) updateData.siteFin = passage.siteFin;\n          if (passage.dateHeureFin !== undefined) updateData.dateHeureFin = passage.dateHeureFin;\n          if (passage.coursierChargement !== undefined) updateData.coursierChargement = passage.coursierChargement;\n          if (passage.coursierLivraison !== undefined) updateData.coursierLivraison = passage.coursierLivraison;\n          if (passage.vehiculeId !== undefined) updateData.vehiculeId = passage.vehiculeId;\n          if (passage.tourneeId !== undefined) updateData.tourneeId = passage.tourneeId;\n          if (passage.pole !== undefined) updateData.pole = passage.pole;\n\n          await updateDoc(doc(db, 'passages', id), updateData);\n          console.log(`Passage ${id} mis à jour avec succès`);\n          return id;\n        } catch (error) {\n          console.error(`Erreur lors de la mise à jour du passage ${id}:`, error);\n          throw error;\n        }\n      });\n      \n      // Attendre que toutes les opérations soient terminées\n      const results = await Promise.allSettled(updatePromises);\n      \n      // Vérifier les résultats\n      const fulfilled = results.filter(result => result.status === 'fulfilled').length;\n      const rejected = results.filter(result => result.status === 'rejected').length;\n      \n      console.log(`Opérations terminées: ${fulfilled} réussies, ${rejected} échouées`);\n      \n      if (rejected > 0) {\n        console.warn(\"Certaines opérations ont échoué. Voir les erreurs ci-dessus.\");\n      }\n      \n      // Mettre à jour l'état local avec les passages modifiés\n      setPassages(passages.map(passage => {\n        if (editingPassages[passage.id]) {\n          return editingPassages[passage.id];\n        }\n        return passage;\n      }));\n      \n      // Rafraîchir les données\n      await fetchPassages();\n      \n      // Réinitialiser les états\n      setEditingPassages({});\n      \n      if (rejected > 0) {\n        alert(`Modifications partiellement enregistrées. ${rejected} opérations ont échoué.`);\n      } else {\n        alert('Modifications enregistrées avec succès');\n      }\n      \n      console.log('Toutes les modifications ont été enregistrées avec succès');\n      return true;\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des modifications:', error);\n      alert('Erreur lors de la sauvegarde des modifications. Veuillez réessayer.');\n      throw error;\n    }\n  };\n\n  // Fonction pour gérer les changements de valeur dans les champs d'édition\n  const handleCellChange = (id: string, field: keyof Passage, value: any) => {\n    setEditingPassages({\n      ...editingPassages,\n      [id]: {\n        ...editingPassages[id],\n        [field]: value\n      }\n    });\n  };\n\n  // Fonction pour formater une date pour l'input de type date\n  const formatDateForInput = (date: Date | null): string => {\n    if (!date) return '';\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // Fonction pour convertir un Timestamp en format d'heure pour input time\n  const convertTimestampToTime = (timestamp: any): string => {\n    const date = convertTimestampToDate(timestamp);\n    if (!date) return '';\n    \n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    \n    return `${hours}:${minutes}`;\n  };\n\n  // Fonction pour sélectionner/désélectionner un passage\n  const togglePassageSelection = (id: string) => {\n    if (selectedPassages.includes(id)) {\n      setSelectedPassages(selectedPassages.filter(passageId => passageId !== id));\n    } else {\n      setSelectedPassages([...selectedPassages, id]);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Chargement des passages...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <p className=\"error-message\">{error}</p>\n        <button className=\"button\" onClick={fetchPassages}>Réessayer</button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"section-header\">\n        <h2 className=\"section-title\">Passages</h2>\n      </div>\n      \n      {/* Conteneur sticky pour les boutons d'action, positionné à droite */}\n      <div className=\"sticky-header-container\">\n        <div className=\"header-actions\">\n          {editMode ? (\n            <>\n              <button \n                className=\"button button-success\" \n                onClick={toggleEditMode}\n              >\n                <i className=\"fas fa-save\"></i> Enregistrer\n              </button>\n              <button \n                className=\"button button-secondary\" \n                onClick={() => {\n                  if (window.confirm(\"Êtes-vous sûr de vouloir annuler toutes les modifications ?\")) {\n                    setEditingPassages({});\n                    setSelectedPassages([]);\n                    setEditMode(false);\n                  }\n                }}\n                style={{ marginLeft: '10px' }}\n              >\n                <i className=\"fas fa-times\"></i> Annuler\n              </button>\n            </>\n          ) : (\n            <button \n              className=\"button\" \n              onClick={toggleEditMode}\n            >\n              <i className=\"fas fa-edit\"></i> Modifier\n            </button>\n          )}\n        </div>\n        \n        {editMode && (\n          <div className=\"edit-actions\">\n            <button \n              className=\"button button-danger\" \n              onClick={handleDeleteSelected}\n              disabled={selectedPassages.length === 0}\n            >\n              <i className=\"fas fa-trash-alt\"></i> Supprimer ({selectedPassages.length})\n            </button>\n          </div>\n        )}\n        \n        <div className=\"quick-search-container\">\n          <input\n            type=\"text\"\n            className=\"quick-search-input\"\n            placeholder=\"Recherche rapide...\"\n            value={quickSearch}\n            onChange={(e) => setQuickSearch(e.target.value)}\n            title=\"Rechercher dans le tableau\"\n          />\n          <div className=\"pole-filter\">\n            <PoleFilter\n              onPoleChange={handlePoleChange}\n              selectedPole={selectedPole}\n              label=\"Filtrer par pôle\"\n              className=\"pole-filter-component\"\n            />\n          </div>\n        </div>\n      </div>\n      \n      {/* Filtres de recherche, positionnés sous le titre */}\n      <div className=\"search-filters-container\">\n        <div className=\"search-filters\" style={{ display: 'flex', flexWrap: 'wrap', gap: '15px' }}>\n          <div className=\"search-group\" style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n            <label>Date début:</label>\n            <div className=\"custom-datepicker-wrapper\">\n              <DatePicker\n                selected={dateDebut}\n                onChange={(date: Date | null) => setDateDebut(date)}\n                locale=\"fr\"\n                dateFormat=\"dd/MM/yyyy\"\n                placeholderText=\"JJ/MM/AAAA\"\n                className=\"custom-datepicker-input\"\n                popperPlacement=\"bottom-start\"\n                popperModifiers={[\n                  {\n                    name: 'offset',\n                    options: {\n                      offset: [0, 8],\n                    },\n                    fn: (state) => state\n                  },\n                ]}\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n                isClearable\n              />\n              <span className=\"custom-datepicker-icon\">📅</span>\n            </div>\n          </div>\n          <div className=\"search-group\" style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n            <label>Date fin:</label>\n            <div className=\"custom-datepicker-wrapper\">\n              <DatePicker\n                selected={dateFin}\n                onChange={(date: Date | null) => setDateFin(date)}\n                locale=\"fr\"\n                dateFormat=\"dd/MM/yyyy\"\n                placeholderText=\"JJ/MM/AAAA\"\n                className=\"custom-datepicker-input\"\n                popperPlacement=\"bottom-start\"\n                popperModifiers={[\n                  {\n                    name: 'offset',\n                    options: {\n                      offset: [0, 8],\n                    },\n                    fn: (state) => state\n                  },\n                ]}\n                showMonthDropdown\n                showYearDropdown\n                dropdownMode=\"select\"\n                isClearable\n              />\n              <span className=\"custom-datepicker-icon\">📅</span>\n            </div>\n          </div>\n          <div className=\"search-group\" style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n            <label>Sites:</label>\n            <select \n              className=\"select-input\"\n              value={site}\n              onChange={(e) => setSite(e.target.value)}\n              style={{\n                padding: '8px 12px',\n                borderRadius: '4px',\n                border: '1px solid #ccc',\n                fontSize: '14px',\n                width: '160px',\n                backgroundColor: 'white'\n              }}\n              title=\"Filtrer par site\"\n            >\n              <option value=\"\">Tous</option>\n              {sites.map((s) => (\n                <option key={s.id} value={s.id}>{s.nom}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"search-group\" style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n            <label>Tournées:</label>\n            <select \n              className=\"select-input\"\n              value={tournee}\n              onChange={(e) => setTournee(e.target.value)}\n              style={{\n                padding: '8px 12px',\n                borderRadius: '4px',\n                border: '1px solid #ccc',\n                fontSize: '14px',\n                width: '160px',\n                backgroundColor: 'white'\n              }}\n              title=\"Filtrer par tournée\"\n            >\n              <option value=\"\">Toutes</option>\n              {tournees.map((t) => (\n                <option key={t.id} value={t.id}>{t.nom}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"search-group\" style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n            <label>Véhicules:</label>\n            <select \n              className=\"select-input\"\n              value={vehicule}\n              onChange={(e) => setVehicule(e.target.value)}\n              style={{\n                padding: '8px 12px',\n                borderRadius: '4px',\n                border: '1px solid #ccc',\n                fontSize: '14px',\n                width: '160px',\n                backgroundColor: 'white'\n              }}\n              title=\"Filtrer par véhicule\"\n            >\n              <option value=\"\">Tous</option>\n              {vehicules.map((v) => (\n                <option key={v.id} value={v.id}>{v.immatriculation}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"search-group\" style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n            <label>Statut:</label>\n            <select \n              className=\"select-input\"\n              value={statut}\n              onChange={(e) => setStatut(e.target.value)}\n              style={{\n                padding: '8px 12px',\n                borderRadius: '4px',\n                border: '1px solid #ccc',\n                fontSize: '14px',\n                width: '160px',\n                backgroundColor: 'white'\n              }}\n              title=\"Filtrer par statut\"\n            >\n              <option value=\"\">Tous</option>\n              <option value=\"Livré\">Livré</option>\n              <option value=\"En cours\">En cours</option>\n            </select>\n          </div>\n          <div className=\"search-group\" style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n            <label>ID Colis:</label>\n            <input\n              type=\"text\"\n              className=\"text-input\"\n              placeholder=\"ID Colis\"\n              value={idColis}\n              onChange={(e) => setIdColis(e.target.value)}\n              style={{\n                padding: '8px 12px',\n                borderRadius: '4px',\n                border: '1px solid #ccc',\n                fontSize: '14px',\n                width: '160px'\n              }}\n              title=\"Filtrer par ID de colis\"\n            />\n          </div>\n        </div>\n        <div className=\"search-buttons\" style={{ display: 'flex', justifyContent: 'flex-start', marginTop: '15px' }}>\n          <button \n            className=\"search-button\" \n            onClick={handleSearch}\n            style={{ \n              backgroundColor: '#1976d2', \n              color: 'white', \n              padding: '10px 20px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: 'bold',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n              transition: 'all 0.2s ease',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginRight: '10px'\n            }}\n            onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#1565c0'}\n            onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#1976d2'}\n          >\n            <i className=\"fas fa-search\" style={{ marginRight: '8px' }}></i> Rechercher\n          </button>\n          <button \n            className=\"reset-button\" \n            onClick={resetFilters}\n            style={{ \n              backgroundColor: '#f5f5f5', \n              color: '#333', \n              padding: '10px 20px',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: 'bold',\n              transition: 'all 0.2s ease',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n            onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#e0e0e0'}\n            onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#f5f5f5'}\n          >\n            <i className=\"fas fa-undo\" style={{ marginRight: '8px' }}></i> Réinitialiser\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"passages-table-container\" style={{ overflowX: 'auto' }}>\n        <div className=\"results-info\">\n          <p>{filteredPassages.length} résultat(s) trouvé(s){quickSearch ? ` pour la recherche \"${quickSearch}\"` : ''}</p>\n        </div>\n        \n        <div className=\"table-container\">\n          <table className=\"data-table\">\n            <thead>\n              <tr>\n                {editMode && (\n                  <th>\n                    <input \n                      type=\"checkbox\" \n                      checked={selectedPassages.length === filteredPassages.length} \n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setSelectedPassages(filteredPassages.map(passage => passage.id));\n                        } else {\n                          setSelectedPassages([]);\n                        }\n                      }}\n                      title=\"Sélectionner/Désélectionner tous les passages\"\n                      aria-label=\"Sélectionner tous les passages\"\n                    />\n                  </th>\n                )}\n                <th>PÔLE</th>\n                <th>Site de départ</th>\n                <th>Date</th>\n                <th>Heure</th>\n                <th>Status</th>\n                <th>Site d'arrivée</th>\n                <th>Véhicule</th>\n                <th>Coursier</th>\n                <th>Commentaire</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredPassages.map((passage) => (\n                <tr key={passage.id} className={selectedPassages.includes(passage.id) ? 'selected-row' : ''}>\n                  {editMode && (\n                    <td>\n                      <input \n                        type=\"checkbox\" \n                        checked={selectedPassages.includes(passage.id)} \n                        onChange={() => togglePassageSelection(passage.id)}\n                        title={`Sélectionner le passage ${passage.id}`}\n                        aria-label={`Sélectionner le passage ${passage.id}`}\n                      />\n                    </td>\n                  )}\n                  <td>\n                    {editMode ? (\n                      <PoleSelector\n                        value={editingPassages[passage.id]?.pole || passage.pole || ''}\n                        onChange={(value) => handleCellChange(passage.id, 'pole', value)}\n                        placeholder=\"Sélectionner un pôle\"\n                        style={{ width: '100%' }}\n                        showSearch\n                        allowClear\n                      />\n                    ) : (\n                      getPoleNameById(passage.pole)\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <select\n                        value={editingPassages[passage.id]?.siteDepart || passage.siteDepart}\n                        onChange={(e) => handleCellChange(passage.id, 'siteDepart', e.target.value)}\n                        className=\"inline-edit-select\"\n                        title=\"Sélectionner un site de départ\"\n                        aria-label=\"Site de départ\"\n                      >\n                        <option value=\"\">Sélectionner un site</option>\n                        {sites.map(site => (\n                          <option key={site.id} value={site.id}>{site.nom}</option>\n                        ))}\n                      </select>\n                    ) : (\n                      getSiteName(passage.siteDepart)\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <input \n                        type=\"date\" \n                        value={formatDateForInput(convertTimestampToDate(editingPassages[passage.id]?.dateHeureDepart || passage.dateHeureDepart))}\n                        onChange={(e) => {\n                          const newDate = new Date(e.target.value);\n                          handleCellChange(passage.id, 'dateHeureDepart', Timestamp.fromDate(newDate));\n                        }}\n                        className=\"inline-edit-input\"\n                        onClick={(e) => e.stopPropagation()}\n                      />\n                    ) : (\n                      formatDateFr(convertTimestampToDate(passage.dateHeureDepart))\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <input \n                        type=\"time\" \n                        value={convertTimestampToTime(editingPassages[passage.id]?.dateHeureDepart || passage.dateHeureDepart)}\n                        onChange={(e) => {\n                          // Préserver la date mais changer l'heure\n                          const currentDate = convertTimestampToDate(editingPassages[passage.id]?.dateHeureDepart || passage.dateHeureDepart);\n                          if (currentDate) {\n                            const [hours, minutes] = e.target.value.split(':').map(Number);\n                            currentDate.setHours(hours, minutes);\n                            handleCellChange(passage.id, 'dateHeureDepart', Timestamp.fromDate(currentDate));\n                          }\n                        }}\n                        className=\"inline-edit-input\"\n                        onClick={(e) => e.stopPropagation()}\n                      />\n                    ) : (\n                      passage.dateHeureDepart ? convertTimestampToDate(passage.dateHeureDepart)?.toLocaleTimeString('fr-FR', {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      }) : ''\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <select\n                        value={editingPassages[passage.id]?.statut || passage.statut}\n                        onChange={(e) => handleCellChange(passage.id, 'statut', e.target.value as 'Livré' | 'En cours')}\n                        className=\"inline-edit-select\"\n                      >\n                        <option value=\"Livré\">Livré</option>\n                        <option value=\"En cours\">En cours</option>\n                      </select>\n                    ) : (\n                      <span className={passage.statut === 'Livré' ? 'livré' : 'en-cours'}>\n                        {passage.statut}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <select\n                        value={editingPassages[passage.id]?.siteFin || passage.siteFin}\n                        onChange={(e) => handleCellChange(passage.id, 'siteFin', e.target.value)}\n                        className=\"inline-edit-select\"\n                      >\n                        <option value=\"\">Sélectionner un site</option>\n                        {sites.map(site => (\n                          <option key={site.id} value={site.nom}>\n                            {site.nom}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      getSiteName(passage.siteFin)\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <input \n                        type=\"text\" \n                        value={editingPassages[passage.id]?.coursierChargement || passage.coursierChargement || ''}\n                        onChange={(e) => handleCellChange(passage.id, 'coursierChargement', e.target.value)}\n                        className=\"inline-edit-input\"\n                      />\n                    ) : (\n                      passage.coursierChargement || '-'\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <input \n                        type=\"text\" \n                        value={editingPassages[passage.id]?.coursierLivraison || passage.coursierLivraison || ''}\n                        onChange={(e) => handleCellChange(passage.id, 'coursierLivraison', e.target.value)}\n                        className=\"inline-edit-input\"\n                      />\n                    ) : (\n                      passage.coursierLivraison || '-'\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <select\n                        value={editingPassages[passage.id]?.tourneeId || passage.tourneeId}\n                        onChange={(e) => handleCellChange(passage.id, 'tourneeId', e.target.value)}\n                        className=\"inline-edit-select\"\n                      >\n                        <option value=\"\">Sélectionner une tournée</option>\n                        {tournees.map(tournee => (\n                          <option key={tournee.id} value={tournee.id}>\n                            {tournee.nom}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      getTourneeName(passage.tourneeId)\n                    )}\n                  </td>\n                  <td>\n                    {editMode ? (\n                      <select\n                        value={editingPassages[passage.id]?.vehiculeId || passage.vehiculeId}\n                        onChange={(e) => handleCellChange(passage.id, 'vehiculeId', e.target.value)}\n                        className=\"inline-edit-select\"\n                      >\n                        <option value=\"\">Sélectionner un véhicule</option>\n                        {vehicules.map(vehicule => (\n                          <option key={vehicule.id} value={vehicule.id}>\n                            {vehicule.immatriculation}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      getVehiculeImmatriculation(passage.vehiculeId)\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Passages;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,UAAU,EAAEC,OAAO,EAAEC,SAAS,EAAEC,SAAS,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AAC9F,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,EAAE,QAAQ,oBAAoB;AACvC,OAAO,4CAA4C;AACnD,OAAO,gBAAgB;AACvB,OAAO,gBAAgB;AACvB,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAR,cAAc,CAAC,IAAI,EAAEC,EAAE,CAAC;;AAExB;AACA,MAAMQ,gBAAgB,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AA0DD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAY,EAAE,CAAC;EAC7D,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAa,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAc,IAAI,CAAC;EAC7D,MAAM,CAACsC,OAAO,EAAEC,UAAU,CAAC,GAAGvC,QAAQ,CAAc,IAAI,CAAC;EACzD,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAM,CAAC0C,MAAM,EAAEC,SAAS,CAAC,GAAG3C,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAAC4C,IAAI,EAAEC,OAAO,CAAC,GAAG7C,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAAC8C,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACgD,OAAO,EAAEC,UAAU,CAAC,GAAGjD,QAAQ,CAAS,EAAE,CAAC;;EAElD;EACA,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACoD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrD,QAAQ,CAAY,EAAE,CAAC;;EAEvE;EACA,MAAM,CAACsD,YAAY,EAAEC,eAAe,CAAC,GAAGvD,QAAQ,CAAS,EAAE,CAAC;;EAE5D;EACA,MAAM,CAACwD,QAAQ,EAAEC,WAAW,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3D,QAAQ,CAAW,EAAE,CAAC;EACtE,MAAM,CAAC4D,eAAe,EAAEC,kBAAkB,CAAC,GAAG7D,QAAQ,CAA2B,CAAC,CAAC,CAAC;;EAEpF;EACA,MAAM;IAAE8D;EAAM,CAAC,GAAGlD,QAAQ,CAAC,CAAC;EAE5BX,SAAS,CAAC,MAAM;IACd8D,aAAa,CAAC,CAAC;IACfC,aAAa,CAAC,CAAC;IACfC,UAAU,CAAC,CAAC;IACZC,cAAc,CAAC,CAAC;;IAEhB;IACAC,QAAQ,CAACC,eAAe,CAACC,IAAI,GAAG,IAAI;;IAEpC;IACA,MAAMC,YAAY,GAAGH,QAAQ,CAACI,aAAa,CAAC,OAAO,CAAC;IACpDD,YAAY,CAACE,WAAW,GAAGrD,gBAAgB;IAC3CgD,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACJ,YAAY,CAAC;IAEvC,OAAO,MAAM;MACX;MACAH,QAAQ,CAACC,eAAe,CAACC,IAAI,GAAG,EAAE;MAClCF,QAAQ,CAACM,IAAI,CAACE,WAAW,CAACL,YAAY,CAAC;IACzC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArE,SAAS,CAAC,MAAM;IACdoD,mBAAmB,CAAC/B,QAAQ,CAAC;EAC/B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACArB,SAAS,CAAC,MAAM;IACd,IAAI2E,OAAO,GAAGtD,QAAQ;;IAEtB;IACA,IAAIgC,YAAY,EAAE;MAChBsB,OAAO,GAAGA,OAAO,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAKzB,YAAY,CAAC;IACpE;;IAEA;IACA,IAAIJ,WAAW,CAAC8B,IAAI,CAAC,CAAC,EAAE;MACtB,MAAMC,UAAU,GAAG/B,WAAW,CAACgC,WAAW,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;MACnDJ,OAAO,GAAGA,OAAO,CAACC,MAAM,CAACC,OAAO,IAAI;QAClC;QACA,OACEK,WAAW,CAACL,OAAO,CAACM,UAAU,CAAC,CAACF,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IAClEE,WAAW,CAACL,OAAO,CAACQ,OAAO,IAAI,EAAE,CAAC,CAACJ,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IACrEH,OAAO,CAAC9B,OAAO,CAACkC,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IAClDH,OAAO,CAACpC,MAAM,CAACwC,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IACjD,CAACH,OAAO,CAACS,kBAAkB,IAAI,EAAE,EAAEL,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IACrE,CAACH,OAAO,CAACU,iBAAiB,IAAI,EAAE,EAAEN,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IACpEQ,cAAc,CAACX,OAAO,CAACY,SAAS,CAAC,CAACR,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IACpEU,0BAA0B,CAACb,OAAO,CAACc,UAAU,CAAC,CAACV,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IACjFY,YAAY,CAACC,sBAAsB,CAAChB,OAAO,CAACiB,eAAe,CAAC,CAAC,CAACV,QAAQ,CAACJ,UAAU,CAAC;MAEtF,CAAC,CAAC;IACJ;IAEA5B,mBAAmB,CAACuB,OAAO,CAAC;EAC9B,CAAC,EAAE,CAAC1B,WAAW,EAAE5B,QAAQ,EAAEgC,YAAY,CAAC,CAAC;;EAEzC;EACA,MAAMwC,sBAAsB,GAAIE,SAAc,IAAkB;IAC9D,IAAI,CAACA,SAAS,EAAE,OAAO,IAAI;;IAE3B;IACA,IAAIA,SAAS,YAAYC,IAAI,EAAE,OAAOD,SAAS;;IAE/C;IACA,IAAIA,SAAS,IAAI,OAAOA,SAAS,CAACE,MAAM,KAAK,UAAU,EAAE;MACvD,OAAOF,SAAS,CAACE,MAAM,CAAC,CAAC;IAC3B;;IAEA;IACA,IAAIF,SAAS,IAAI,SAAS,IAAIA,SAAS,IAAI,aAAa,IAAIA,SAAS,EAAE;MACrE,OAAO,IAAIC,IAAI,CAACD,SAAS,CAACG,OAAO,GAAG,IAAI,GAAGH,SAAS,CAACI,WAAW,GAAG,OAAO,CAAC;IAC7E;;IAEA;IACA,IAAI,OAAOJ,SAAS,KAAK,QAAQ,EAAE;MACjC,OAAO,IAAIC,IAAI,CAACD,SAAS,CAAC;IAC5B;;IAEA;IACA,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;MACjC,OAAO,IAAIC,IAAI,CAACD,SAAS,CAAC;IAC5B;IAEAK,OAAO,CAACzE,KAAK,CAAC,kCAAkC,EAAEoE,SAAS,CAAC;IAC5D,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMM,gBAAgB,GAAGA,CAACC,KAAkB,EAAEC,KAAkB,KAAc;IAC5E,IAAI,CAACD,KAAK,IAAI,CAACC,KAAK,EAAE,OAAO,KAAK;;IAElC;IACA,MAAMC,SAAS,GAAG,IAAIR,IAAI,CAACM,KAAK,CAACG,WAAW,CAAC,CAAC,EAAEH,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IAClF,MAAMC,SAAS,GAAG,IAAIZ,IAAI,CAACO,KAAK,CAACE,WAAW,CAAC,CAAC,EAAEF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;;IAElF;IACA,OAAOH,SAAS,CAACK,OAAO,CAAC,CAAC,KAAKD,SAAS,CAACC,OAAO,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAACR,KAAkB,EAAEC,KAAkB,KAAc;IAChF,IAAI,CAACD,KAAK,IAAI,CAACC,KAAK,EAAE,OAAO,KAAK;;IAElC;IACA,MAAMC,SAAS,GAAG,IAAIR,IAAI,CAACM,KAAK,CAACG,WAAW,CAAC,CAAC,EAAEH,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IAClF,MAAMC,SAAS,GAAG,IAAIZ,IAAI,CAACO,KAAK,CAACE,WAAW,CAAC,CAAC,EAAEF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;;IAElF;IACA,OAAOH,SAAS,CAACK,OAAO,CAAC,CAAC,IAAID,SAAS,CAACC,OAAO,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAGA,CAACT,KAAkB,EAAEC,KAAkB,KAAc;IAC7E,IAAI,CAACD,KAAK,IAAI,CAACC,KAAK,EAAE,OAAO,KAAK;;IAElC;IACA,MAAMC,SAAS,GAAG,IAAIR,IAAI,CAACM,KAAK,CAACG,WAAW,CAAC,CAAC,EAAEH,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IAClF,MAAMC,SAAS,GAAG,IAAIZ,IAAI,CAACO,KAAK,CAACE,WAAW,CAAC,CAAC,EAAEF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;;IAElF;IACA,OAAOH,SAAS,CAACK,OAAO,CAAC,CAAC,IAAID,SAAS,CAACC,OAAO,CAAC,CAAC;EACnD,CAAC;EAED,MAAM/C,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFpC,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,MAAMoF,WAAW,GAAG9G,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC;MAC9C,MAAMgH,gBAAgB,GAAG,MAAM9G,OAAO,CAAC6G,WAAW,CAAC;MAEnD,IAAIC,gBAAgB,CAACC,KAAK,EAAE;QAC1Bd,OAAO,CAACe,GAAG,CAAC,oCAAoC,CAAC;QACjDvF,QAAQ,CAAC,yDAAyD,CAAC;QACnEF,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA0E,OAAO,CAACe,GAAG,CAAC,gCAAgC,EAAEF,gBAAgB,CAACG,IAAI,CAACC,MAAM,CAAC;;MAE3E;MACAjB,OAAO,CAACe,GAAG,CAAC,6BAA6B,CAAC;MAC1CF,gBAAgB,CAACG,IAAI,CAACE,OAAO,CAAC,CAAChH,GAAG,EAAEiH,KAAK,KAAK;QAC5CnB,OAAO,CAACe,GAAG,CAAC,YAAYI,KAAK,GAAG,CAAC,SAASjH,GAAG,CAACkH,EAAE,IAAI,EAAElH,GAAG,CAACmH,IAAI,CAAC,CAAC,CAAC;MACnE,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAGT,gBAAgB,CAACG,IAAI,CAACO,GAAG,CAACrH,GAAG,IAAI;QACpD,MAAMmH,IAAI,GAAGnH,GAAG,CAACmH,IAAI,CAAC,CAAC;;QAEvB;QACArB,OAAO,CAACe,GAAG,CAAC,yBAAyB,EAAES,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAAC;;QAEzD;QACA,MAAMK,cAAc,GAAG;UACrBN,EAAE,EAAElH,GAAG,CAACkH,EAAE;UACVrC,UAAU,EAAEsC,IAAI,CAACM,UAAU,IAAIN,IAAI,CAACtC,UAAU,IAAI,EAAE;UACpDW,eAAe,EAAE2B,IAAI,CAACO,QAAQ,IAAIP,IAAI,CAAC3B,eAAe;UACtD/C,OAAO,EAAE0E,IAAI,CAAC1E,OAAO,IAAI,EAAE;UAC3BN,MAAM,EAAEgF,IAAI,CAAChF,MAAM,IAAI,UAAU;UACjC4C,OAAO,EAAEoC,IAAI,CAACpC,OAAO,IAAI,EAAE;UAC3B4C,YAAY,EAAER,IAAI,CAACS,WAAW,IAAIT,IAAI,CAACQ,YAAY;UACnD3C,kBAAkB,EAAEmC,IAAI,CAACU,aAAa,IAAIV,IAAI,CAACnC,kBAAkB,IAAI,EAAE;UACvEC,iBAAiB,EAAEkC,IAAI,CAAClC,iBAAiB,IAAI,EAAE;UAC/CI,UAAU,EAAE8B,IAAI,CAACW,QAAQ,IAAIX,IAAI,CAAC9B,UAAU,IAAI,EAAE;UAClDF,SAAS,EAAEgC,IAAI,CAACY,OAAO,IAAIZ,IAAI,CAAChC,SAAS,IAAI,EAAE;UAC/CX,IAAI,EAAE2C,IAAI,CAAC3C,IAAI,IAAI;QACrB,CAAY;QAEZ,OAAOgD,cAAc;MACvB,CAAC,CAAC;MAEF1B,OAAO,CAACe,GAAG,CAAC,uDAAuD,EAAEO,YAAY,CAAC;MAElFlG,cAAc,CAACkG,YAAY,CAAC;MAC5BpG,WAAW,CAACoG,YAAY,CAAC;MACzBhG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdyE,OAAO,CAACzE,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpEC,QAAQ,CAAC,4CAA4C,CAAC;MACtDF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMqC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMuE,WAAW,GAAGpI,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC;MAC9C,MAAMsI,QAAQ,GAAG,MAAMpI,OAAO,CAACmI,WAAW,CAAC;MAE3C,IAAI,CAACC,QAAQ,CAACrB,KAAK,EAAE;QACnB,MAAMsB,YAAY,GAAGD,QAAQ,CAACnB,IAAI,CAACO,GAAG,CAACrH,GAAG,IAAI;UAC5C,MAAMmH,IAAI,GAAGnH,GAAG,CAACmH,IAAI,CAAC,CAAC;UACvB,OAAO;YACLD,EAAE,EAAElH,GAAG,CAACkH,EAAE;YACViB,GAAG,EAAEhB,IAAI,CAACgB,GAAG,IAAI,EAAE;YACnBC,IAAI,EAAEjB,IAAI,CAACiB,IAAI,IAAItI,SAAS,CAACuI,QAAQ,CAAC,IAAI3C,IAAI,CAAC,CAAC,CAAC;YACjD4C,WAAW,EAAEnB,IAAI,CAACmB,WAAW,IAAI,EAAE;YACnCC,cAAc,EAAEpB,IAAI,CAACoB,cAAc,IAAI,EAAE;YACzCC,cAAc,EAAErB,IAAI,CAACqB,cAAc,IAAI,EAAE;YACzCC,QAAQ,EAAEtB,IAAI,CAACsB,QAAQ,IAAI,EAAE;YAC7BlG,QAAQ,EAAE4E,IAAI,CAAC5E,QAAQ,IAAI,EAAE;YAC7BmG,WAAW,EAAEvB,IAAI,CAACuB,WAAW,IAAI,CAAC;YAClCvG,MAAM,EAAEgF,IAAI,CAAChF,MAAM,IAAI,YAAY;YACnC0C,UAAU,EAAEsC,IAAI,CAACtC,UAAU,IAAI;UACjC,CAAC;QACH,CAAC,CAAC;QAEFrD,WAAW,CAAC0G,YAAY,CAAC;MAC3B,CAAC,MAAM;QACLpC,OAAO,CAACe,GAAG,CAAC,sCAAsC,CAAC;QACnD;QACA,MAAM8B,eAAe,GAAG,CACtB;UACEzB,EAAE,EAAE,GAAG;UACPiB,GAAG,EAAE,OAAO;UACZC,IAAI,EAAEtI,SAAS,CAACuI,QAAQ,CAAC,IAAI3C,IAAI,CAAC,CAAC,CAAC;UACpC4C,WAAW,EAAE,OAAO;UACpBC,cAAc,EAAE,OAAO;UACvBE,QAAQ,EAAE,oBAAoB;UAC9BlG,QAAQ,EAAE,WAAW;UACrBmG,WAAW,EAAE,EAAE;UACfvG,MAAM,EAAE,YAAqB;UAC7B0C,UAAU,EAAE;QACd,CAAC,EACD;UACEqC,EAAE,EAAE,GAAG;UACPiB,GAAG,EAAE,MAAM;UACXC,IAAI,EAAEtI,SAAS,CAACuI,QAAQ,CAAC,IAAI3C,IAAI,CAAC,CAAC,CAAC;UACpC4C,WAAW,EAAE,OAAO;UACpBC,cAAc,EAAE,OAAO;UACvBE,QAAQ,EAAE,gBAAgB;UAC1BlG,QAAQ,EAAE,WAAW;UACrBmG,WAAW,EAAE,EAAE;UACfvG,MAAM,EAAE,YAAqB;UAC7B0C,UAAU,EAAE;QACd,CAAC,EACD;UACEqC,EAAE,EAAE,GAAG;UACPiB,GAAG,EAAE,MAAM;UACXC,IAAI,EAAEtI,SAAS,CAACuI,QAAQ,CAAC,IAAI3C,IAAI,CAAC,CAAC,CAAC;UACpC4C,WAAW,EAAE,OAAO;UACpBC,cAAc,EAAE,OAAO;UACvBE,QAAQ,EAAE,oBAAoB;UAC9BlG,QAAQ,EAAE,WAAW;UACrBmG,WAAW,EAAE,EAAE;UACfvG,MAAM,EAAE,YAAqB;UAC7B0C,UAAU,EAAE;QACd,CAAC,CACF;QACDrD,WAAW,CAACmH,eAAe,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOtH,KAAK,EAAE;MACdyE,OAAO,CAACzE,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACtE;EACF,CAAC;;EAED;EACA,MAAMqC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMkF,QAAQ,GAAGhJ,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC;MACxC,MAAMsI,QAAQ,GAAG,MAAMpI,OAAO,CAAC+I,QAAQ,CAAC;MAExC,IAAI,CAACX,QAAQ,CAACrB,KAAK,EAAE;QACnB,MAAMiC,SAAS,GAAGZ,QAAQ,CAACnB,IAAI,CAACO,GAAG,CAACrH,GAAG,IAAI;UACzC,MAAMmH,IAAI,GAAGnH,GAAG,CAACmH,IAAI,CAAC,CAAC;UACvB,OAAO;YACLD,EAAE,EAAElH,GAAG,CAACkH,EAAE;YACViB,GAAG,EAAEhB,IAAI,CAACgB,GAAG,IAAI,EAAE;YACnBW,OAAO,EAAE3B,IAAI,CAAC2B,OAAO,IAAI,EAAE;YAC3BC,KAAK,EAAE5B,IAAI,CAAC4B,KAAK,IAAI,EAAE;YACvBC,UAAU,EAAE7B,IAAI,CAAC6B,UAAU,IAAI,EAAE;YACjCC,SAAS,EAAE9B,IAAI,CAAC8B,SAAS,IAAI,EAAE;YAC/BC,KAAK,EAAE/B,IAAI,CAAC+B,KAAK,IAAI,EAAE;YACvBC,IAAI,EAAEhC,IAAI,CAACgC,IAAI,IAAI,EAAE;YACrBhH,MAAM,EAAEgF,IAAI,CAAChF,MAAM,IAAI;UACzB,CAAC;QACH,CAAC,CAAC;QAEFT,QAAQ,CAACmH,SAAS,CAAC;MACrB,CAAC,MAAM;QACL/C,OAAO,CAACe,GAAG,CAAC,iCAAiC,CAAC;QAC9C;QACA,MAAMuC,YAAY,GAAG,CACnB;UACElC,EAAE,EAAE,GAAG;UACPiB,GAAG,EAAE,qBAAqB;UAC1BW,OAAO,EAAE,qBAAqB;UAC9BC,KAAK,EAAE,UAAU;UACjBC,UAAU,EAAE,OAAO;UACnBC,SAAS,EAAE,gBAAgB;UAC3BC,KAAK,EAAE,yBAAyB;UAChCC,IAAI,EAAE,aAAa;UACnBhH,MAAM,EAAE;QACV,CAAC,EACD;UACE+E,EAAE,EAAE,GAAG;UACPiB,GAAG,EAAE,oBAAoB;UACzBW,OAAO,EAAE,+BAA+B;UACxCC,KAAK,EAAE,UAAU;UACjBC,UAAU,EAAE,OAAO;UACnBC,SAAS,EAAE,gBAAgB;UAC3BC,KAAK,EAAE,wBAAwB;UAC/BC,IAAI,EAAE,aAAa;UACnBhH,MAAM,EAAE;QACV,CAAC,CACF;QACDT,QAAQ,CAAC0H,YAAY,CAAC;MACxB;IACF,CAAC,CAAC,OAAO/H,KAAK,EAAE;MACdyE,OAAO,CAACzE,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE;EACF,CAAC;;EAED;EACA,MAAMsC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAM0F,YAAY,GAAGzJ,UAAU,CAACD,EAAE,EAAE,WAAW,CAAC;MAChD,MAAMsI,QAAQ,GAAG,MAAMpI,OAAO,CAACwJ,YAAY,CAAC;MAE5C,IAAI,CAACpB,QAAQ,CAACrB,KAAK,EAAE;QACnB,MAAM0C,aAAa,GAAGrB,QAAQ,CAACnB,IAAI,CAACO,GAAG,CAACrH,GAAG,IAAI;UAC7C,MAAMmH,IAAI,GAAGnH,GAAG,CAACmH,IAAI,CAAC,CAAC;UACvB,OAAO;YACLD,EAAE,EAAElH,GAAG,CAACkH,EAAE;YACVqC,eAAe,EAAEpC,IAAI,CAACoC,eAAe,IAAI,EAAE;YAC3CC,MAAM,EAAErC,IAAI,CAACqC,MAAM,IAAI,EAAE;YACzBC,MAAM,EAAEtC,IAAI,CAACsC,MAAM,IAAI,EAAE;YACzBN,IAAI,EAAEhC,IAAI,CAACgC,IAAI,IAAI,EAAE;YACrBO,KAAK,EAAEvC,IAAI,CAACuC,KAAK,IAAI,IAAI;YACzBvH,MAAM,EAAEgF,IAAI,CAAChF,MAAM,IAAI,OAAO;YAC9BwH,gBAAgB,EAAExC,IAAI,CAACwC,gBAAgB,IAAI,EAAE;YAC7CC,eAAe,EAAEzC,IAAI,CAACyC,eAAe,IAAI,EAAE;YAC3CC,WAAW,EAAE1C,IAAI,CAAC0C,WAAW,IAAI;UACnC,CAAC;QACH,CAAC,CAAC;QAEFjI,YAAY,CAAC0H,aAAa,CAAC;MAC7B,CAAC,MAAM;QACLxD,OAAO,CAACe,GAAG,CAAC,qCAAqC,CAAC;QAClD;QACA,MAAMiD,gBAAgB,GAAG,CACvB;UACE5C,EAAE,EAAE,GAAG;UACPqC,eAAe,EAAE,WAAW;UAC5BC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE,QAAQ;UAChBN,IAAI,EAAE,YAAY;UAClBO,KAAK,EAAE,IAAI;UACXvH,MAAM,EAAE,OAAgB;UACxBwH,gBAAgB,EAAE,YAAY;UAC9BC,eAAe,EAAE,oBAAoB;UACrCC,WAAW,EAAE;QACf,CAAC,EACD;UACE3C,EAAE,EAAE,GAAG;UACPqC,eAAe,EAAE,WAAW;UAC5BC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE,UAAU;UAClBN,IAAI,EAAE,YAAY;UAClBO,KAAK,EAAE,IAAI;UACXvH,MAAM,EAAE,OAAgB;UACxBwH,gBAAgB,EAAE,YAAY;UAC9BC,eAAe,EAAE,gBAAgB;UACjCC,WAAW,EAAE;QACf,CAAC,CACF;QACDjI,YAAY,CAACkI,gBAAgB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOzI,KAAK,EAAE;MACdyE,OAAO,CAACzE,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACvE;EACF,CAAC;;EAED;EACA,MAAM6D,cAAc,GAAIC,SAA6B,IAAa;IAChE,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;IACzB,MAAM4E,YAAY,GAAGxI,QAAQ,CAACyI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC/C,EAAE,KAAK/B,SAAS,CAAC;IAC3D,OAAO4E,YAAY,GAAGA,YAAY,CAAC5B,GAAG,GAAGhD,SAAS;EACpD,CAAC;;EAED;EACA,MAAMP,WAAW,GAAIsF,MAA0B,IAAa;IAC1D,IAAI,CAACA,MAAM,EAAE,OAAO,EAAE;IACtB,MAAMC,SAAS,GAAG1I,KAAK,CAACuI,IAAI,CAACI,CAAC,IAAIA,CAAC,CAAClD,EAAE,KAAKgD,MAAM,CAAC;IAClD,OAAOC,SAAS,GAAGA,SAAS,CAAChC,GAAG,GAAG+B,MAAM;EAC3C,CAAC;;EAED;EACA,MAAM9E,0BAA0B,GAAIC,UAA8B,IAAa;IAC7E,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;IAC1B,MAAMgF,aAAa,GAAG1I,SAAS,CAACqI,IAAI,CAACM,CAAC,IAAIA,CAAC,CAACpD,EAAE,KAAK7B,UAAU,CAAC;IAC9D,OAAOgF,aAAa,GAAGA,aAAa,CAACd,eAAe,GAAGlE,UAAU;EACnE,CAAC;;EAED;EACA,MAAMC,YAAY,GAAI8C,IAAiB,IAAa;IAClD,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;IACpB,MAAMmC,GAAG,GAAGnC,IAAI,CAAC/B,OAAO,CAAC,CAAC,CAACmE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACtD,MAAMC,KAAK,GAAG,CAACtC,IAAI,CAAChC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEoE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC/D,MAAME,IAAI,GAAGvC,IAAI,CAACjC,WAAW,CAAC,CAAC;IAC/B,OAAO,GAAGoE,GAAG,IAAIG,KAAK,IAAIC,IAAI,EAAE;EAClC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAIC,MAA0B,IAAa;IAC9D,IAAI,CAACA,MAAM,EAAE,OAAO,GAAG;IACvB,MAAMrG,IAAI,GAAGjB,KAAK,CAACyG,IAAI,CAACc,CAAC,IAAIA,CAAC,CAAC5D,EAAE,KAAK2D,MAAM,CAAC;IAC7C,OAAOrG,IAAI,GAAGA,IAAI,CAAC2D,GAAG,GAAG0C,MAAM;EACjC,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAIvG,IAAY,IAAK;IACzCxB,eAAe,CAACwB,IAAI,CAAC;EACvB,CAAC;EAED,MAAMwG,YAAY,GAAGA,CAAA,KAAM;IACzBlF,OAAO,CAACe,GAAG,CAAC,gDAAgD,CAAC;IAC7Df,OAAO,CAACe,GAAG,CAAC,aAAa,EAAEhF,SAAS,CAAC;IACrCiE,OAAO,CAACe,GAAG,CAAC,WAAW,EAAE9E,OAAO,CAAC;IACjC+D,OAAO,CAACe,GAAG,CAAC,UAAU,EAAE5E,OAAO,CAAC;IAChC6D,OAAO,CAACe,GAAG,CAAC,SAAS,EAAE1E,MAAM,CAAC;IAC9B2D,OAAO,CAACe,GAAG,CAAC,OAAO,EAAExE,IAAI,CAAC;IAC1ByD,OAAO,CAACe,GAAG,CAAC,WAAW,EAAEtE,QAAQ,CAAC;IAClCuD,OAAO,CAACe,GAAG,CAAC,WAAW,EAAEpE,OAAO,CAAC;IACjCqD,OAAO,CAACe,GAAG,CAAC,0CAA0C,EAAE5F,WAAW,CAAC8F,MAAM,CAAC;IAE3E,IAAI;MACF;MACA,IAAIkE,eAAe,GAAG,CAAC,GAAGhK,WAAW,CAAC;;MAEtC;MACA,IAAIY,SAAS,EAAE;QACboJ,eAAe,GAAGA,eAAe,CAAC3G,MAAM,CAACC,OAAO,IAAI;UAClD,MAAM2G,WAAW,GAAG3F,sBAAsB,CAAChB,OAAO,CAACiB,eAAe,CAAC;UACnE,OAAO0F,WAAW,IAAI1E,oBAAoB,CAAC0E,WAAW,EAAErJ,SAAS,CAAC;QACpE,CAAC,CAAC;MACJ;;MAEA;MACA,IAAIE,OAAO,EAAE;QACXkJ,eAAe,GAAGA,eAAe,CAAC3G,MAAM,CAACC,OAAO,IAAI;UAClD,MAAM2G,WAAW,GAAG3F,sBAAsB,CAAChB,OAAO,CAACiB,eAAe,CAAC;UACnE,OAAO0F,WAAW,IAAIzE,iBAAiB,CAACyE,WAAW,EAAEnJ,OAAO,CAAC;QAC/D,CAAC,CAAC;MACJ;;MAEA;MACA,IAAIE,OAAO,EAAE;QACXgJ,eAAe,GAAGA,eAAe,CAAC3G,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACY,SAAS,KAAKlD,OAAO,CAAC;MACpF;;MAEA;MACA,IAAIE,MAAM,EAAE;QACV8I,eAAe,GAAGA,eAAe,CAAC3G,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACpC,MAAM,KAAKA,MAAM,CAAC;MAChF;;MAEA;MACA,IAAIE,IAAI,EAAE;QACR4I,eAAe,GAAGA,eAAe,CAAC3G,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACM,UAAU,KAAKxC,IAAI,IAAIkC,OAAO,CAACQ,OAAO,KAAK1C,IAAI,CAAC;MAC9G;;MAEA;MACA,IAAIE,QAAQ,EAAE;QACZ0I,eAAe,GAAGA,eAAe,CAAC3G,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACc,UAAU,KAAK9C,QAAQ,CAAC;MACtF;;MAEA;MACA,IAAIE,OAAO,EAAE;QACXwI,eAAe,GAAGA,eAAe,CAAC3G,MAAM,CAACC,OAAO,IAC9CA,OAAO,CAAC9B,OAAO,IAAI8B,OAAO,CAAC9B,OAAO,CAACkC,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACrC,OAAO,CAACkC,WAAW,CAAC,CAAC,CACjF,CAAC;MACH;MAEAmB,OAAO,CAACe,GAAG,CAAC,oCAAoC,EAAEoE,eAAe,CAAClE,MAAM,CAAC;;MAEzE;MACA/F,WAAW,CAACiK,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAO5J,KAAK,EAAE;MACdyE,OAAO,CAACzE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAAC,kDAAkD,CAAC;IAC9D;EACF,CAAC;EAED,MAAM6J,YAAY,GAAGA,CAAA,KAAM;IACzBrJ,YAAY,CAAC,IAAI,CAAC;IAClBE,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,EAAE,CAAC;IACdE,SAAS,CAAC,EAAE,CAAC;IACbE,OAAO,CAAC,EAAE,CAAC;IACXE,WAAW,CAAC,EAAE,CAAC;IACfE,UAAU,CAAC,EAAE,CAAC;IACdE,cAAc,CAAC,EAAE,CAAC;IAClBI,eAAe,CAAC,EAAE,CAAC;IACnBF,mBAAmB,CAAC/B,QAAQ,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMqK,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAIjI,gBAAgB,CAAC4D,MAAM,KAAK,CAAC,EAAE;MACjCsE,KAAK,CAAC,uDAAuD,CAAC;MAC9D;IACF;IAEA,IAAIC,MAAM,CAACC,OAAO,CAAC,sCAAsCpI,gBAAgB,CAAC4D,MAAM,eAAe,CAAC,EAAE;MAChG,IAAI;QACF;QACA,MAAMyE,cAAc,GAAGrI,gBAAgB,CAACkE,GAAG,CAACH,EAAE,IAAInH,SAAS,CAACC,GAAG,CAACL,EAAE,EAAE,UAAU,EAAEuH,EAAE,CAAC,CAAC,CAAC;QACrF,MAAMuE,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;;QAEjC;QACAxK,WAAW,CAACD,QAAQ,CAACuD,MAAM,CAACC,OAAO,IAAI,CAACpB,gBAAgB,CAAC2B,QAAQ,CAACP,OAAO,CAAC2C,EAAE,CAAC,CAAC,CAAC;QAC/E9D,mBAAmB,CAAC,EAAE,CAAC;MACzB,CAAC,CAAC,OAAO/B,KAAK,EAAE;QACdyE,OAAO,CAACzE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDC,QAAQ,CAAC,+BAA+B,CAAC;MAC3C;IACF;EACF,CAAC;;EAED;EACA,MAAMqK,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC1I,QAAQ,EAAE;MACb;MACA6C,OAAO,CAACe,GAAG,CAAC,wBAAwB,CAAC;MACrC,MAAM+E,gBAA0C,GAAG,CAAC,CAAC;MACrD7K,QAAQ,CAACiG,OAAO,CAACzC,OAAO,IAAI;QAC1BqH,gBAAgB,CAACrH,OAAO,CAAC2C,EAAE,CAAC,GAAG;UAAC,GAAG3C;QAAO,CAAC;MAC7C,CAAC,CAAC;MACFjB,kBAAkB,CAACsI,gBAAgB,CAAC;MACpC;MACA1I,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACL;MACA,IAAIoI,MAAM,CAACC,OAAO,CAAC,6CAA6C,CAAC,EAAE;QACjEzF,OAAO,CAACe,GAAG,CAAC,+DAA+D,CAAC;QAC5E;QACAgF,cAAc,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;UAC1B;UACA1I,mBAAmB,CAAC,EAAE,CAAC;UACvBF,WAAW,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC6I,KAAK,CAAC1K,KAAK,IAAI;UAChByE,OAAO,CAACzE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD;UACAgK,KAAK,CAAC,oEAAoE,CAAC;QAC7E,CAAC,CAAC;MACJ,CAAC,MAAM;QACLvF,OAAO,CAACe,GAAG,CAAC,wDAAwD,CAAC;QACrE;QACAvD,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACtBF,mBAAmB,CAAC,EAAE,CAAC;QACvBF,WAAW,CAAC,KAAK,CAAC;MACpB;IACF;EACF,CAAC;;EAED;EACA,MAAM2I,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF/F,OAAO,CAACe,GAAG,CAAC,6CAA6C,CAAC;MAC1Df,OAAO,CAACe,GAAG,CAAC,2BAA2B,EAAES,MAAM,CAACC,IAAI,CAAClE,eAAe,CAAC,CAAC0D,MAAM,CAAC;;MAE7E;MACA,MAAMiF,cAAc,GAAG1E,MAAM,CAAC2E,OAAO,CAAC5I,eAAe,CAAC,CAACgE,GAAG,CAAC,OAAO,CAACH,EAAE,EAAE3C,OAAO,CAAC,KAAK;QAClF,IAAI;UACFuB,OAAO,CAACe,GAAG,CAAC,0BAA0BK,EAAE,GAAG,EAAE3C,OAAO,CAAC;;UAErD;UACA,MAAM2H,UAA4B,GAAG,CAAC,CAAC;;UAEvC;UACA,IAAI3H,OAAO,CAACM,UAAU,KAAKsH,SAAS,EAAED,UAAU,CAACrH,UAAU,GAAGN,OAAO,CAACM,UAAU;UAChF,IAAIN,OAAO,CAACiB,eAAe,KAAK2G,SAAS,EAAED,UAAU,CAAC1G,eAAe,GAAGjB,OAAO,CAACiB,eAAe;UAC/F,IAAIjB,OAAO,CAAC9B,OAAO,KAAK0J,SAAS,EAAED,UAAU,CAACzJ,OAAO,GAAG8B,OAAO,CAAC9B,OAAO;UACvE,IAAI8B,OAAO,CAACpC,MAAM,KAAKgK,SAAS,EAAED,UAAU,CAAC/J,MAAM,GAAGoC,OAAO,CAACpC,MAAM;UACpE,IAAIoC,OAAO,CAACQ,OAAO,KAAKoH,SAAS,EAAED,UAAU,CAACnH,OAAO,GAAGR,OAAO,CAACQ,OAAO;UACvE,IAAIR,OAAO,CAACoD,YAAY,KAAKwE,SAAS,EAAED,UAAU,CAACvE,YAAY,GAAGpD,OAAO,CAACoD,YAAY;UACtF,IAAIpD,OAAO,CAACS,kBAAkB,KAAKmH,SAAS,EAAED,UAAU,CAAClH,kBAAkB,GAAGT,OAAO,CAACS,kBAAkB;UACxG,IAAIT,OAAO,CAACU,iBAAiB,KAAKkH,SAAS,EAAED,UAAU,CAACjH,iBAAiB,GAAGV,OAAO,CAACU,iBAAiB;UACrG,IAAIV,OAAO,CAACc,UAAU,KAAK8G,SAAS,EAAED,UAAU,CAAC7G,UAAU,GAAGd,OAAO,CAACc,UAAU;UAChF,IAAId,OAAO,CAACY,SAAS,KAAKgH,SAAS,EAAED,UAAU,CAAC/G,SAAS,GAAGZ,OAAO,CAACY,SAAS;UAC7E,IAAIZ,OAAO,CAACC,IAAI,KAAK2H,SAAS,EAAED,UAAU,CAAC1H,IAAI,GAAGD,OAAO,CAACC,IAAI;UAE9D,MAAMvE,SAAS,CAACD,GAAG,CAACL,EAAE,EAAE,UAAU,EAAEuH,EAAE,CAAC,EAAEgF,UAAU,CAAC;UACpDpG,OAAO,CAACe,GAAG,CAAC,WAAWK,EAAE,yBAAyB,CAAC;UACnD,OAAOA,EAAE;QACX,CAAC,CAAC,OAAO7F,KAAK,EAAE;UACdyE,OAAO,CAACzE,KAAK,CAAC,4CAA4C6F,EAAE,GAAG,EAAE7F,KAAK,CAAC;UACvE,MAAMA,KAAK;QACb;MACF,CAAC,CAAC;;MAEF;MACA,MAAMgD,OAAO,GAAG,MAAMoH,OAAO,CAACW,UAAU,CAACJ,cAAc,CAAC;;MAExD;MACA,MAAMK,SAAS,GAAGhI,OAAO,CAACC,MAAM,CAACgI,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,WAAW,CAAC,CAACxF,MAAM;MAChF,MAAMyF,QAAQ,GAAGnI,OAAO,CAACC,MAAM,CAACgI,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,UAAU,CAAC,CAACxF,MAAM;MAE9EjB,OAAO,CAACe,GAAG,CAAC,yBAAyBwF,SAAS,cAAcG,QAAQ,WAAW,CAAC;MAEhF,IAAIA,QAAQ,GAAG,CAAC,EAAE;QAChB1G,OAAO,CAAC2G,IAAI,CAAC,8DAA8D,CAAC;MAC9E;;MAEA;MACAzL,WAAW,CAACD,QAAQ,CAACsG,GAAG,CAAC9C,OAAO,IAAI;QAClC,IAAIlB,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,EAAE;UAC/B,OAAO7D,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC;QACpC;QACA,OAAO3C,OAAO;MAChB,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMf,aAAa,CAAC,CAAC;;MAErB;MACAF,kBAAkB,CAAC,CAAC,CAAC,CAAC;MAEtB,IAAIkJ,QAAQ,GAAG,CAAC,EAAE;QAChBnB,KAAK,CAAC,6CAA6CmB,QAAQ,yBAAyB,CAAC;MACvF,CAAC,MAAM;QACLnB,KAAK,CAAC,wCAAwC,CAAC;MACjD;MAEAvF,OAAO,CAACe,GAAG,CAAC,2DAA2D,CAAC;MACxE,OAAO,IAAI;IACb,CAAC,CAAC,OAAOxF,KAAK,EAAE;MACdyE,OAAO,CAACzE,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACvEgK,KAAK,CAAC,qEAAqE,CAAC;MAC5E,MAAMhK,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMqL,gBAAgB,GAAGA,CAACxF,EAAU,EAAEyF,KAAoB,EAAEC,KAAU,KAAK;IACzEtJ,kBAAkB,CAAC;MACjB,GAAGD,eAAe;MAClB,CAAC6D,EAAE,GAAG;QACJ,GAAG7D,eAAe,CAAC6D,EAAE,CAAC;QACtB,CAACyF,KAAK,GAAGC;MACX;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIzE,IAAiB,IAAa;IACxD,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;IACpB,MAAMuC,IAAI,GAAGvC,IAAI,CAACjC,WAAW,CAAC,CAAC;IAC/B,MAAMuE,KAAK,GAAG,CAACtC,IAAI,CAAChC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEoE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC/D,MAAMF,GAAG,GAAGnC,IAAI,CAAC/B,OAAO,CAAC,CAAC,CAACmE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACtD,OAAO,GAAGE,IAAI,IAAID,KAAK,IAAIH,GAAG,EAAE;EAClC,CAAC;;EAED;EACA,MAAMuC,sBAAsB,GAAIrH,SAAc,IAAa;IACzD,MAAM2C,IAAI,GAAG7C,sBAAsB,CAACE,SAAS,CAAC;IAC9C,IAAI,CAAC2C,IAAI,EAAE,OAAO,EAAE;IAEpB,MAAM2E,KAAK,GAAG3E,IAAI,CAAC4E,QAAQ,CAAC,CAAC,CAACxC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMwC,OAAO,GAAG7E,IAAI,CAAC8E,UAAU,CAAC,CAAC,CAAC1C,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAE7D,OAAO,GAAGsC,KAAK,IAAIE,OAAO,EAAE;EAC9B,CAAC;;EAED;EACA,MAAME,sBAAsB,GAAIjG,EAAU,IAAK;IAC7C,IAAI/D,gBAAgB,CAAC2B,QAAQ,CAACoC,EAAE,CAAC,EAAE;MACjC9D,mBAAmB,CAACD,gBAAgB,CAACmB,MAAM,CAAC8I,SAAS,IAAIA,SAAS,KAAKlG,EAAE,CAAC,CAAC;IAC7E,CAAC,MAAM;MACL9D,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAE+D,EAAE,CAAC,CAAC;IAChD;EACF,CAAC;EAED,IAAI/F,OAAO,EAAE;IACX,oBACEV,OAAA;MAAK4M,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC7M,OAAA;QAAK4M,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCjN,OAAA;QAAA6M,QAAA,EAAG;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAEV;EAEA,IAAIrM,KAAK,EAAE;IACT,oBACEZ,OAAA;MAAK4M,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B7M,OAAA;QAAG4M,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEjM;MAAK;QAAAkM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCjN,OAAA;QAAQ4M,SAAS,EAAC,QAAQ;QAACM,OAAO,EAAEnK,aAAc;QAAA8J,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAEV;EAEA,oBACEjN,OAAA;IAAA6M,QAAA,gBACE7M,OAAA;MAAK4M,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B7M,OAAA;QAAI4M,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAGNjN,OAAA;MAAK4M,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtC7M,OAAA;QAAK4M,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BrK,QAAQ,gBACPxC,OAAA,CAAAE,SAAA;UAAA2M,QAAA,gBACE7M,OAAA;YACE4M,SAAS,EAAC,uBAAuB;YACjCM,OAAO,EAAEhC,cAAe;YAAA2B,QAAA,gBAExB7M,OAAA;cAAG4M,SAAS,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,gBACjC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTjN,OAAA;YACE4M,SAAS,EAAC,yBAAyB;YACnCM,OAAO,EAAEA,CAAA,KAAM;cACb,IAAIrC,MAAM,CAACC,OAAO,CAAC,6DAA6D,CAAC,EAAE;gBACjFjI,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACtBF,mBAAmB,CAAC,EAAE,CAAC;gBACvBF,WAAW,CAAC,KAAK,CAAC;cACpB;YACF,CAAE;YACF0K,KAAK,EAAE;cAAEC,UAAU,EAAE;YAAO,CAAE;YAAAP,QAAA,gBAE9B7M,OAAA;cAAG4M,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,YAClC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eACT,CAAC,gBAEHjN,OAAA;UACE4M,SAAS,EAAC,QAAQ;UAClBM,OAAO,EAAEhC,cAAe;UAAA2B,QAAA,gBAExB7M,OAAA;YAAG4M,SAAS,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,aACjC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MACT;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELzK,QAAQ,iBACPxC,OAAA;QAAK4M,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3B7M,OAAA;UACE4M,SAAS,EAAC,sBAAsB;UAChCM,OAAO,EAAEvC,oBAAqB;UAC9B0C,QAAQ,EAAE3K,gBAAgB,CAAC4D,MAAM,KAAK,CAAE;UAAAuG,QAAA,gBAExC7M,OAAA;YAAG4M,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,gBAAY,EAACvK,gBAAgB,CAAC4D,MAAM,EAAC,GAC3E;QAAA;UAAAwG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,eAEDjN,OAAA;QAAK4M,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrC7M,OAAA;UACE0I,IAAI,EAAC,MAAM;UACXkE,SAAS,EAAC,oBAAoB;UAC9BU,WAAW,EAAC,qBAAqB;UACjCnB,KAAK,EAAEjK,WAAY;UACnBqL,QAAQ,EAAGC,CAAC,IAAKrL,cAAc,CAACqL,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;UAChDuB,KAAK,EAAC;QAA4B;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACFjN,OAAA;UAAK4M,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1B7M,OAAA,CAACF,UAAU;YACT6N,YAAY,EAAErD,gBAAiB;YAC/BhI,YAAY,EAAEA,YAAa;YAC3BsL,KAAK,EAAC,qBAAkB;YACxBhB,SAAS,EAAC;UAAuB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNjN,OAAA;MAAK4M,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvC7M,OAAA;QAAK4M,SAAS,EAAC,gBAAgB;QAACO,KAAK,EAAE;UAAEU,OAAO,EAAE,MAAM;UAAEC,QAAQ,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAlB,QAAA,gBACxF7M,OAAA;UAAK4M,SAAS,EAAC,cAAc;UAACO,KAAK,EAAE;YAAEU,OAAO,EAAE,MAAM;YAAEG,aAAa,EAAE,QAAQ;YAAED,GAAG,EAAE;UAAM,CAAE;UAAAlB,QAAA,gBAC5F7M,OAAA;YAAA6M,QAAA,EAAO;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1BjN,OAAA;YAAK4M,SAAS,EAAC,2BAA2B;YAAAC,QAAA,gBACxC7M,OAAA,CAACP,UAAU;cACTwO,QAAQ,EAAE7M,SAAU;cACpBmM,QAAQ,EAAG5F,IAAiB,IAAKtG,YAAY,CAACsG,IAAI,CAAE;cACpDuG,MAAM,EAAC,IAAI;cACXC,UAAU,EAAC,YAAY;cACvBC,eAAe,EAAC,YAAY;cAC5BxB,SAAS,EAAC,yBAAyB;cACnCyB,eAAe,EAAC,cAAc;cAC9BC,eAAe,EAAE,CACf;gBACEC,IAAI,EAAE,QAAQ;gBACdC,OAAO,EAAE;kBACPC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;gBACf,CAAC;gBACDC,EAAE,EAAGC,KAAK,IAAKA;cACjB,CAAC,CACD;cACFC,iBAAiB;cACjBC,gBAAgB;cAChBC,YAAY,EAAC,QAAQ;cACrBC,WAAW;YAAA;cAAAjC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eACFjN,OAAA;cAAM4M,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjN,OAAA;UAAK4M,SAAS,EAAC,cAAc;UAACO,KAAK,EAAE;YAAEU,OAAO,EAAE,MAAM;YAAEG,aAAa,EAAE,QAAQ;YAAED,GAAG,EAAE;UAAM,CAAE;UAAAlB,QAAA,gBAC5F7M,OAAA;YAAA6M,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBjN,OAAA;YAAK4M,SAAS,EAAC,2BAA2B;YAAAC,QAAA,gBACxC7M,OAAA,CAACP,UAAU;cACTwO,QAAQ,EAAE3M,OAAQ;cAClBiM,QAAQ,EAAG5F,IAAiB,IAAKpG,UAAU,CAACoG,IAAI,CAAE;cAClDuG,MAAM,EAAC,IAAI;cACXC,UAAU,EAAC,YAAY;cACvBC,eAAe,EAAC,YAAY;cAC5BxB,SAAS,EAAC,yBAAyB;cACnCyB,eAAe,EAAC,cAAc;cAC9BC,eAAe,EAAE,CACf;gBACEC,IAAI,EAAE,QAAQ;gBACdC,OAAO,EAAE;kBACPC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;gBACf,CAAC;gBACDC,EAAE,EAAGC,KAAK,IAAKA;cACjB,CAAC,CACD;cACFC,iBAAiB;cACjBC,gBAAgB;cAChBC,YAAY,EAAC,QAAQ;cACrBC,WAAW;YAAA;cAAAjC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eACFjN,OAAA;cAAM4M,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjN,OAAA;UAAK4M,SAAS,EAAC,cAAc;UAACO,KAAK,EAAE;YAAEU,OAAO,EAAE,MAAM;YAAEG,aAAa,EAAE,QAAQ;YAAED,GAAG,EAAE;UAAM,CAAE;UAAAlB,QAAA,gBAC5F7M,OAAA;YAAA6M,QAAA,EAAO;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrBjN,OAAA;YACE4M,SAAS,EAAC,cAAc;YACxBT,KAAK,EAAEvK,IAAK;YACZ2L,QAAQ,EAAGC,CAAC,IAAK3L,OAAO,CAAC2L,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;YACzCgB,KAAK,EAAE;cACL6B,OAAO,EAAE,UAAU;cACnBC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,gBAAgB;cACxBC,QAAQ,EAAE,MAAM;cAChBC,KAAK,EAAE,OAAO;cACdC,eAAe,EAAE;YACnB,CAAE;YACF3B,KAAK,EAAC,kBAAkB;YAAAb,QAAA,gBAExB7M,OAAA;cAAQmM,KAAK,EAAC,EAAE;cAAAU,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC7BjM,KAAK,CAAC4F,GAAG,CAAE+C,CAAC,iBACX3J,OAAA;cAAmBmM,KAAK,EAAExC,CAAC,CAAClD,EAAG;cAAAoG,QAAA,EAAElD,CAAC,CAACjC;YAAG,GAAzBiC,CAAC,CAAClD,EAAE;cAAAqG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA8B,CAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNjN,OAAA;UAAK4M,SAAS,EAAC,cAAc;UAACO,KAAK,EAAE;YAAEU,OAAO,EAAE,MAAM;YAAEG,aAAa,EAAE,QAAQ;YAAED,GAAG,EAAE;UAAM,CAAE;UAAAlB,QAAA,gBAC5F7M,OAAA;YAAA6M,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBjN,OAAA;YACE4M,SAAS,EAAC,cAAc;YACxBT,KAAK,EAAE3K,OAAQ;YACf+L,QAAQ,EAAGC,CAAC,IAAK/L,UAAU,CAAC+L,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;YAC5CgB,KAAK,EAAE;cACL6B,OAAO,EAAE,UAAU;cACnBC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,gBAAgB;cACxBC,QAAQ,EAAE,MAAM;cAChBC,KAAK,EAAE,OAAO;cACdC,eAAe,EAAE;YACnB,CAAE;YACF3B,KAAK,EAAC,wBAAqB;YAAAb,QAAA,gBAE3B7M,OAAA;cAAQmM,KAAK,EAAC,EAAE;cAAAU,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC/BnM,QAAQ,CAAC8F,GAAG,CAAE4C,CAAC,iBACdxJ,OAAA;cAAmBmM,KAAK,EAAE3C,CAAC,CAAC/C,EAAG;cAAAoG,QAAA,EAAErD,CAAC,CAAC9B;YAAG,GAAzB8B,CAAC,CAAC/C,EAAE;cAAAqG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA8B,CAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNjN,OAAA;UAAK4M,SAAS,EAAC,cAAc;UAACO,KAAK,EAAE;YAAEU,OAAO,EAAE,MAAM;YAAEG,aAAa,EAAE,QAAQ;YAAED,GAAG,EAAE;UAAM,CAAE;UAAAlB,QAAA,gBAC5F7M,OAAA;YAAA6M,QAAA,EAAO;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzBjN,OAAA;YACE4M,SAAS,EAAC,cAAc;YACxBT,KAAK,EAAErK,QAAS;YAChByL,QAAQ,EAAGC,CAAC,IAAKzL,WAAW,CAACyL,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;YAC7CgB,KAAK,EAAE;cACL6B,OAAO,EAAE,UAAU;cACnBC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,gBAAgB;cACxBC,QAAQ,EAAE,MAAM;cAChBC,KAAK,EAAE,OAAO;cACdC,eAAe,EAAE;YACnB,CAAE;YACF3B,KAAK,EAAC,yBAAsB;YAAAb,QAAA,gBAE5B7M,OAAA;cAAQmM,KAAK,EAAC,EAAE;cAAAU,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC7B/L,SAAS,CAAC0F,GAAG,CAAEiD,CAAC,iBACf7J,OAAA;cAAmBmM,KAAK,EAAEtC,CAAC,CAACpD,EAAG;cAAAoG,QAAA,EAAEhD,CAAC,CAACf;YAAe,GAArCe,CAAC,CAACpD,EAAE;cAAAqG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA0C,CAC5D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNjN,OAAA;UAAK4M,SAAS,EAAC,cAAc;UAACO,KAAK,EAAE;YAAEU,OAAO,EAAE,MAAM;YAAEG,aAAa,EAAE,QAAQ;YAAED,GAAG,EAAE;UAAM,CAAE;UAAAlB,QAAA,gBAC5F7M,OAAA;YAAA6M,QAAA,EAAO;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBjN,OAAA;YACE4M,SAAS,EAAC,cAAc;YACxBT,KAAK,EAAEzK,MAAO;YACd6L,QAAQ,EAAGC,CAAC,IAAK7L,SAAS,CAAC6L,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;YAC3CgB,KAAK,EAAE;cACL6B,OAAO,EAAE,UAAU;cACnBC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,gBAAgB;cACxBC,QAAQ,EAAE,MAAM;cAChBC,KAAK,EAAE,OAAO;cACdC,eAAe,EAAE;YACnB,CAAE;YACF3B,KAAK,EAAC,oBAAoB;YAAAb,QAAA,gBAE1B7M,OAAA;cAAQmM,KAAK,EAAC,EAAE;cAAAU,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9BjN,OAAA;cAAQmM,KAAK,EAAC,UAAO;cAAAU,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpCjN,OAAA;cAAQmM,KAAK,EAAC,UAAU;cAAAU,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNjN,OAAA;UAAK4M,SAAS,EAAC,cAAc;UAACO,KAAK,EAAE;YAAEU,OAAO,EAAE,MAAM;YAAEG,aAAa,EAAE,QAAQ;YAAED,GAAG,EAAE;UAAM,CAAE;UAAAlB,QAAA,gBAC5F7M,OAAA;YAAA6M,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBjN,OAAA;YACE0I,IAAI,EAAC,MAAM;YACXkE,SAAS,EAAC,YAAY;YACtBU,WAAW,EAAC,UAAU;YACtBnB,KAAK,EAAEnK,OAAQ;YACfuL,QAAQ,EAAGC,CAAC,IAAKvL,UAAU,CAACuL,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;YAC5CgB,KAAK,EAAE;cACL6B,OAAO,EAAE,UAAU;cACnBC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,gBAAgB;cACxBC,QAAQ,EAAE,MAAM;cAChBC,KAAK,EAAE;YACT,CAAE;YACF1B,KAAK,EAAC;UAAyB;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNjN,OAAA;QAAK4M,SAAS,EAAC,gBAAgB;QAACO,KAAK,EAAE;UAAEU,OAAO,EAAE,MAAM;UAAEyB,cAAc,EAAE,YAAY;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAA1C,QAAA,gBAC1G7M,OAAA;UACE4M,SAAS,EAAC,eAAe;UACzBM,OAAO,EAAE3C,YAAa;UACtB4C,KAAK,EAAE;YACLkC,eAAe,EAAE,SAAS;YAC1BG,KAAK,EAAE,OAAO;YACdR,OAAO,EAAE,WAAW;YACpBE,MAAM,EAAE,MAAM;YACdD,YAAY,EAAE,KAAK;YACnBQ,MAAM,EAAE,SAAS;YACjBN,QAAQ,EAAE,MAAM;YAChBO,UAAU,EAAE,MAAM;YAClBC,SAAS,EAAE,2BAA2B;YACtCC,UAAU,EAAE,eAAe;YAC3B/B,OAAO,EAAE,MAAM;YACfgC,UAAU,EAAE,QAAQ;YACpBP,cAAc,EAAE,QAAQ;YACxBQ,WAAW,EAAE;UACf,CAAE;UACFC,WAAW,EAAGvC,CAAC,IAAKA,CAAC,CAACwC,aAAa,CAAC7C,KAAK,CAACkC,eAAe,GAAG,SAAU;UACtEY,UAAU,EAAGzC,CAAC,IAAKA,CAAC,CAACwC,aAAa,CAAC7C,KAAK,CAACkC,eAAe,GAAG,SAAU;UAAAxC,QAAA,gBAErE7M,OAAA;YAAG4M,SAAS,EAAC,eAAe;YAACO,KAAK,EAAE;cAAE2C,WAAW,EAAE;YAAM;UAAE;YAAAhD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjN,OAAA;UACE4M,SAAS,EAAC,cAAc;UACxBM,OAAO,EAAExC,YAAa;UACtByC,KAAK,EAAE;YACLkC,eAAe,EAAE,SAAS;YAC1BG,KAAK,EAAE,MAAM;YACbR,OAAO,EAAE,WAAW;YACpBE,MAAM,EAAE,gBAAgB;YACxBD,YAAY,EAAE,KAAK;YACnBQ,MAAM,EAAE,SAAS;YACjBN,QAAQ,EAAE,MAAM;YAChBO,UAAU,EAAE,MAAM;YAClBE,UAAU,EAAE,eAAe;YAC3B/B,OAAO,EAAE,MAAM;YACfgC,UAAU,EAAE,QAAQ;YACpBP,cAAc,EAAE;UAClB,CAAE;UACFS,WAAW,EAAGvC,CAAC,IAAKA,CAAC,CAACwC,aAAa,CAAC7C,KAAK,CAACkC,eAAe,GAAG,SAAU;UACtEY,UAAU,EAAGzC,CAAC,IAAKA,CAAC,CAACwC,aAAa,CAAC7C,KAAK,CAACkC,eAAe,GAAG,SAAU;UAAAxC,QAAA,gBAErE7M,OAAA;YAAG4M,SAAS,EAAC,aAAa;YAACO,KAAK,EAAE;cAAE2C,WAAW,EAAE;YAAM;UAAE;YAAAhD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,qBAChE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENjN,OAAA;MAAK4M,SAAS,EAAC,0BAA0B;MAACO,KAAK,EAAE;QAAE+C,SAAS,EAAE;MAAO,CAAE;MAAArD,QAAA,gBACrE7M,OAAA;QAAK4M,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3B7M,OAAA;UAAA6M,QAAA,GAAIzK,gBAAgB,CAACkE,MAAM,EAAC,8BAAsB,EAACpE,WAAW,GAAG,uBAAuBA,WAAW,GAAG,GAAG,EAAE;QAAA;UAAA4K,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7G,CAAC,eAENjN,OAAA;QAAK4M,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9B7M,OAAA;UAAO4M,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAC3B7M,OAAA;YAAA6M,QAAA,eACE7M,OAAA;cAAA6M,QAAA,GACGrK,QAAQ,iBACPxC,OAAA;gBAAA6M,QAAA,eACE7M,OAAA;kBACE0I,IAAI,EAAC,UAAU;kBACfyH,OAAO,EAAEzN,gBAAgB,CAAC4D,MAAM,KAAKlE,gBAAgB,CAACkE,MAAO;kBAC7DiH,QAAQ,EAAGC,CAAC,IAAK;oBACf,IAAIA,CAAC,CAACC,MAAM,CAAC0C,OAAO,EAAE;sBACpBxN,mBAAmB,CAACP,gBAAgB,CAACwE,GAAG,CAAC9C,OAAO,IAAIA,OAAO,CAAC2C,EAAE,CAAC,CAAC;oBAClE,CAAC,MAAM;sBACL9D,mBAAmB,CAAC,EAAE,CAAC;oBACzB;kBACF,CAAE;kBACF+K,KAAK,EAAC,wDAA+C;kBACrD,cAAW;gBAAgC;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CACL,eACDjN,OAAA;gBAAA6M,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbjN,OAAA;gBAAA6M,QAAA,EAAI;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvBjN,OAAA;gBAAA6M,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbjN,OAAA;gBAAA6M,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdjN,OAAA;gBAAA6M,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfjN,OAAA;gBAAA6M,QAAA,EAAI;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvBjN,OAAA;gBAAA6M,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBjN,OAAA;gBAAA6M,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBjN,OAAA;gBAAA6M,QAAA,EAAI;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRjN,OAAA;YAAA6M,QAAA,EACGzK,gBAAgB,CAACwE,GAAG,CAAE9C,OAAO;cAAA,IAAAsM,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAAC,uBAAA;cAAA,oBAC5B9Q,OAAA;gBAAqB4M,SAAS,EAAElK,gBAAgB,CAAC2B,QAAQ,CAACP,OAAO,CAAC2C,EAAE,CAAC,GAAG,cAAc,GAAG,EAAG;gBAAAoG,QAAA,GACzFrK,QAAQ,iBACPxC,OAAA;kBAAA6M,QAAA,eACE7M,OAAA;oBACE0I,IAAI,EAAC,UAAU;oBACfyH,OAAO,EAAEzN,gBAAgB,CAAC2B,QAAQ,CAACP,OAAO,CAAC2C,EAAE,CAAE;oBAC/C8G,QAAQ,EAAEA,CAAA,KAAMb,sBAAsB,CAAC5I,OAAO,CAAC2C,EAAE,CAAE;oBACnDiH,KAAK,EAAE,2BAA2B5J,OAAO,CAAC2C,EAAE,EAAG;oBAC/C,cAAY,2BAA2B3C,OAAO,CAAC2C,EAAE;kBAAG;oBAAAqG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrD;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CACL,eACDjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA,CAACH,YAAY;oBACXsM,KAAK,EAAE,EAAAiE,qBAAA,GAAAxN,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAA2J,qBAAA,uBAA3BA,qBAAA,CAA6BrM,IAAI,KAAID,OAAO,CAACC,IAAI,IAAI,EAAG;oBAC/DwJ,QAAQ,EAAGpB,KAAK,IAAKF,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,MAAM,EAAE0F,KAAK,CAAE;oBACjEmB,WAAW,EAAC,4BAAsB;oBAClCH,KAAK,EAAE;sBAAEiC,KAAK,EAAE;oBAAO,CAAE;oBACzB2B,UAAU;oBACVC,UAAU;kBAAA;oBAAAlE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX,CAAC,GAEF9C,eAAe,CAACrG,OAAO,CAACC,IAAI;gBAC7B;kBAAA+I,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACEmM,KAAK,EAAE,EAAAkE,sBAAA,GAAAzN,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAA4J,sBAAA,uBAA3BA,sBAAA,CAA6BjM,UAAU,KAAIN,OAAO,CAACM,UAAW;oBACrEmJ,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,YAAY,EAAE+G,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;oBAC5ES,SAAS,EAAC,oBAAoB;oBAC9Bc,KAAK,EAAC,sCAAgC;oBACtC,cAAW,mBAAgB;oBAAAb,QAAA,gBAE3B7M,OAAA;sBAAQmM,KAAK,EAAC,EAAE;sBAAAU,QAAA,EAAC;oBAAoB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,EAC7CjM,KAAK,CAAC4F,GAAG,CAAChF,IAAI,iBACb5B,OAAA;sBAAsBmM,KAAK,EAAEvK,IAAI,CAAC6E,EAAG;sBAAAoG,QAAA,EAAEjL,IAAI,CAAC8F;oBAAG,GAAlC9F,IAAI,CAAC6E,EAAE;sBAAAqG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAoC,CACzD,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACI,CAAC,GAET9I,WAAW,CAACL,OAAO,CAACM,UAAU;gBAC/B;kBAAA0I,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACE0I,IAAI,EAAC,MAAM;oBACXyD,KAAK,EAAEC,kBAAkB,CAACtH,sBAAsB,CAAC,EAAAwL,sBAAA,GAAA1N,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAA6J,sBAAA,uBAA3BA,sBAAA,CAA6BvL,eAAe,KAAIjB,OAAO,CAACiB,eAAe,CAAC,CAAE;oBAC3HwI,QAAQ,EAAGC,CAAC,IAAK;sBACf,MAAMyD,OAAO,GAAG,IAAIhM,IAAI,CAACuI,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC;sBACxCF,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,iBAAiB,EAAEpH,SAAS,CAACuI,QAAQ,CAACqJ,OAAO,CAAC,CAAC;oBAC9E,CAAE;oBACFrE,SAAS,EAAC,mBAAmB;oBAC7BM,OAAO,EAAGM,CAAC,IAAKA,CAAC,CAAC0D,eAAe,CAAC;kBAAE;oBAAApE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrC,CAAC,GAEFpI,YAAY,CAACC,sBAAsB,CAAChB,OAAO,CAACiB,eAAe,CAAC;gBAC7D;kBAAA+H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACE0I,IAAI,EAAC,MAAM;oBACXyD,KAAK,EAAEE,sBAAsB,CAAC,EAAAkE,sBAAA,GAAA3N,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAA8J,sBAAA,uBAA3BA,sBAAA,CAA6BxL,eAAe,KAAIjB,OAAO,CAACiB,eAAe,CAAE;oBACvGwI,QAAQ,EAAGC,CAAC,IAAK;sBAAA,IAAA2D,sBAAA;sBACf;sBACA,MAAMC,WAAW,GAAGtM,sBAAsB,CAAC,EAAAqM,sBAAA,GAAAvO,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAA0K,sBAAA,uBAA3BA,sBAAA,CAA6BpM,eAAe,KAAIjB,OAAO,CAACiB,eAAe,CAAC;sBACnH,IAAIqM,WAAW,EAAE;wBACf,MAAM,CAAC9E,KAAK,EAAEE,OAAO,CAAC,GAAGgB,CAAC,CAACC,MAAM,CAACtB,KAAK,CAACkF,KAAK,CAAC,GAAG,CAAC,CAACzK,GAAG,CAAC0K,MAAM,CAAC;wBAC9DF,WAAW,CAACG,QAAQ,CAACjF,KAAK,EAAEE,OAAO,CAAC;wBACpCP,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,iBAAiB,EAAEpH,SAAS,CAACuI,QAAQ,CAACwJ,WAAW,CAAC,CAAC;sBAClF;oBACF,CAAE;oBACFxE,SAAS,EAAC,mBAAmB;oBAC7BM,OAAO,EAAGM,CAAC,IAAKA,CAAC,CAAC0D,eAAe,CAAC;kBAAE;oBAAApE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrC,CAAC,GAEFnJ,OAAO,CAACiB,eAAe,IAAAyL,qBAAA,GAAG1L,sBAAsB,CAAChB,OAAO,CAACiB,eAAe,CAAC,cAAAyL,qBAAA,uBAA/CA,qBAAA,CAAiDgB,kBAAkB,CAAC,OAAO,EAAE;oBACrGC,IAAI,EAAE,SAAS;oBACfC,MAAM,EAAE;kBACV,CAAC,CAAC,GAAG;gBACN;kBAAA5E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACEmM,KAAK,EAAE,EAAAsE,sBAAA,GAAA7N,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAAgK,sBAAA,uBAA3BA,sBAAA,CAA6B/O,MAAM,KAAIoC,OAAO,CAACpC,MAAO;oBAC7D6L,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,QAAQ,EAAE+G,CAAC,CAACC,MAAM,CAACtB,KAA6B,CAAE;oBAChGS,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,gBAE9B7M,OAAA;sBAAQmM,KAAK,EAAC,UAAO;sBAAAU,QAAA,EAAC;oBAAK;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACpCjN,OAAA;sBAAQmM,KAAK,EAAC,UAAU;sBAAAU,QAAA,EAAC;oBAAQ;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpC,CAAC,gBAETjN,OAAA;oBAAM4M,SAAS,EAAE9I,OAAO,CAACpC,MAAM,KAAK,OAAO,GAAG,OAAO,GAAG,UAAW;oBAAAmL,QAAA,EAChE/I,OAAO,CAACpC;kBAAM;oBAAAoL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX;gBACP;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACEmM,KAAK,EAAE,EAAAuE,sBAAA,GAAA9N,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAAiK,sBAAA,uBAA3BA,sBAAA,CAA6BpM,OAAO,KAAIR,OAAO,CAACQ,OAAQ;oBAC/DiJ,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,SAAS,EAAE+G,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;oBACzES,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,gBAE9B7M,OAAA;sBAAQmM,KAAK,EAAC,EAAE;sBAAAU,QAAA,EAAC;oBAAoB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,EAC7CjM,KAAK,CAAC4F,GAAG,CAAChF,IAAI,iBACb5B,OAAA;sBAAsBmM,KAAK,EAAEvK,IAAI,CAAC8F,GAAI;sBAAAmF,QAAA,EACnCjL,IAAI,CAAC8F;oBAAG,GADE9F,IAAI,CAAC6E,EAAE;sBAAAqG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEZ,CACT,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACI,CAAC,GAET9I,WAAW,CAACL,OAAO,CAACQ,OAAO;gBAC5B;kBAAAwI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACE0I,IAAI,EAAC,MAAM;oBACXyD,KAAK,EAAE,EAAAwE,sBAAA,GAAA/N,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAAkK,sBAAA,uBAA3BA,sBAAA,CAA6BpM,kBAAkB,KAAIT,OAAO,CAACS,kBAAkB,IAAI,EAAG;oBAC3FgJ,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,oBAAoB,EAAE+G,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;oBACpFS,SAAS,EAAC;kBAAmB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9B,CAAC,GAEFnJ,OAAO,CAACS,kBAAkB,IAAI;gBAC/B;kBAAAuI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACE0I,IAAI,EAAC,MAAM;oBACXyD,KAAK,EAAE,EAAAyE,sBAAA,GAAAhO,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAAmK,sBAAA,uBAA3BA,sBAAA,CAA6BpM,iBAAiB,KAAIV,OAAO,CAACU,iBAAiB,IAAI,EAAG;oBACzF+I,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,mBAAmB,EAAE+G,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;oBACnFS,SAAS,EAAC;kBAAmB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9B,CAAC,GAEFnJ,OAAO,CAACU,iBAAiB,IAAI;gBAC9B;kBAAAsI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACEmM,KAAK,EAAE,EAAA0E,uBAAA,GAAAjO,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAAoK,uBAAA,uBAA3BA,uBAAA,CAA6BnM,SAAS,KAAIZ,OAAO,CAACY,SAAU;oBACnE6I,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,WAAW,EAAE+G,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;oBAC3ES,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,gBAE9B7M,OAAA;sBAAQmM,KAAK,EAAC,EAAE;sBAAAU,QAAA,EAAC;oBAAwB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,EACjDnM,QAAQ,CAAC8F,GAAG,CAACpF,OAAO,iBACnBxB,OAAA;sBAAyBmM,KAAK,EAAE3K,OAAO,CAACiF,EAAG;sBAAAoG,QAAA,EACxCrL,OAAO,CAACkG;oBAAG,GADDlG,OAAO,CAACiF,EAAE;sBAAAqG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEf,CACT,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACI,CAAC,GAETxI,cAAc,CAACX,OAAO,CAACY,SAAS;gBACjC;kBAAAoI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLjN,OAAA;kBAAA6M,QAAA,EACGrK,QAAQ,gBACPxC,OAAA;oBACEmM,KAAK,EAAE,EAAA2E,uBAAA,GAAAlO,eAAe,CAACkB,OAAO,CAAC2C,EAAE,CAAC,cAAAqK,uBAAA,uBAA3BA,uBAAA,CAA6BlM,UAAU,KAAId,OAAO,CAACc,UAAW;oBACrE2I,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACnI,OAAO,CAAC2C,EAAE,EAAE,YAAY,EAAE+G,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;oBAC5ES,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,gBAE9B7M,OAAA;sBAAQmM,KAAK,EAAC,EAAE;sBAAAU,QAAA,EAAC;oBAAwB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,EACjD/L,SAAS,CAAC0F,GAAG,CAAC9E,QAAQ,iBACrB9B,OAAA;sBAA0BmM,KAAK,EAAErK,QAAQ,CAAC2E,EAAG;sBAAAoG,QAAA,EAC1C/K,QAAQ,CAACgH;oBAAe,GADdhH,QAAQ,CAAC2E,EAAE;sBAAAqG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEhB,CACT,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACI,CAAC,GAETtI,0BAA0B,CAACb,OAAO,CAACc,UAAU;gBAC9C;kBAAAkI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,GAjLEnJ,OAAO,CAAC2C,EAAE;gBAAAqG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAkLf,CAAC;YAAA,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5M,EAAA,CAvtCID,QAAkB;EAAA,QA+BJR,QAAQ;AAAA;AAAA+R,EAAA,GA/BtBvR,QAAkB;AAytCxB,eAAeA,QAAQ;AAAC,IAAAuR,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}