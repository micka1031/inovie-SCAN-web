{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\PoleFilter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport './PoleFilter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PoleFilter = ({\n  onPoleChange,\n  selectedPole,\n  label = \"Filtrer par pôle\",\n  className = \"\"\n}) => {\n  _s();\n  const [poles, setPoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchPoles();\n  }, []);\n  const fetchPoles = async () => {\n    try {\n      setLoading(true);\n\n      // Récupérer les pôles depuis la collection dédiée 'poles'\n      const polesRef = collection(db, 'poles');\n      const snapshot = await getDocs(polesRef);\n\n      // Extraire les noms des pôles\n      const polesArray = snapshot.docs.map(doc => doc.data().nom).filter(Boolean) // Filtrer les valeurs nulles ou vides\n      .sort((a, b) => a.localeCompare(b, 'fr', {\n        sensitivity: 'base'\n      }));\n      console.log('Liste des pôles disponibles:', polesArray);\n      setPoles(polesArray);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors du chargement des pôles:', error);\n      setPoles([]);\n      setLoading(false);\n    }\n  };\n  const handleChange = event => {\n    const newPole = event.target.value;\n    onPoleChange(newPole);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `pole-filter-container ${className}`,\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      variant: \"outlined\",\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"pole-filter-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"pole-filter-label\",\n        id: \"pole-filter\",\n        value: selectedPole,\n        onChange: handleChange,\n        label: label,\n        disabled: loading,\n        className: \"pole-filter-select\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Tous les p\\xF4les\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), poles.map(pole => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: pole,\n          children: pole\n        }, pole, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(PoleFilter, \"aIhHL6eHxPf6acK26ViX0KSgd0w=\");\n_c = PoleFilter;\nexport default PoleFilter;\nvar _c;\n$RefreshReg$(_c, \"PoleFilter\");","map":{"version":3,"names":["React","useState","useEffect","Select","MenuItem","FormControl","InputLabel","collection","getDocs","db","jsxDEV","_jsxDEV","PoleFilter","onPoleChange","selectedPole","label","className","_s","poles","setPoles","loading","setLoading","fetchPoles","polesRef","snapshot","polesArray","docs","map","doc","data","nom","filter","Boolean","sort","a","b","localeCompare","sensitivity","console","log","error","handleChange","event","newPole","target","value","children","fullWidth","variant","size","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","onChange","disabled","pole","_c","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/PoleFilter.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport './PoleFilter.css';\n\ninterface PoleFilterProps {\n  onPoleChange: (pole: string) => void;\n  selectedPole: string;\n  label?: string;\n  className?: string;\n}\n\nconst PoleFilter: React.FC<PoleFilterProps> = ({ \n  onPoleChange, \n  selectedPole, \n  label = \"Filtrer par pôle\", \n  className = \"\" \n}) => {\n  const [poles, setPoles] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    fetchPoles();\n  }, []);\n\n  const fetchPoles = async () => {\n    try {\n      setLoading(true);\n      \n      // Récupérer les pôles depuis la collection dédiée 'poles'\n      const polesRef = collection(db, 'poles');\n      const snapshot = await getDocs(polesRef);\n      \n      // Extraire les noms des pôles\n      const polesArray = snapshot.docs\n        .map(doc => doc.data().nom as string)\n        .filter(Boolean) // Filtrer les valeurs nulles ou vides\n        .sort((a, b) => a.localeCompare(b, 'fr', { sensitivity: 'base' }));\n      \n      console.log('Liste des pôles disponibles:', polesArray);\n      setPoles(polesArray);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors du chargement des pôles:', error);\n      setPoles([]);\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newPole = event.target.value as string;\n    onPoleChange(newPole);\n  };\n\n  return (\n    <div className={`pole-filter-container ${className}`}>\n      <FormControl fullWidth variant=\"outlined\" size=\"small\">\n        <InputLabel id=\"pole-filter-label\">{label}</InputLabel>\n        <Select\n          labelId=\"pole-filter-label\"\n          id=\"pole-filter\"\n          value={selectedPole}\n          onChange={handleChange as any}\n          label={label}\n          disabled={loading}\n          className=\"pole-filter-select\"\n        >\n          <MenuItem value=\"\">\n            <em>Tous les pôles</em>\n          </MenuItem>\n          {poles.map((pole) => (\n            <MenuItem key={pole} value={pole}>\n              {pole}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default PoleFilter; \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}