{"ast":null,"code":"import { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore, enableIndexedDbPersistence, setLogLevel } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport { getAuth, setPersistence, browserSessionPersistence } from 'firebase/auth';\n\n// Configuration Firebase\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,\n  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,\n  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,\n  appId: import.meta.env.VITE_FIREBASE_APP_ID\n};\n\n// Configuration des logs\nsetLogLevel('warn');\n\n// URL de base pour les redirections\nconst PRODUCTION_URL = 'https://application-inovie-scan.web.app';\n\n// Configuration des liens de réinitialisation de mot de passe\nconst actionCodeSettings = {\n  url: `${PRODUCTION_URL}/login?reset=true`,\n  handleCodeInApp: true,\n  dynamicLinkDomain: null\n};\n\n// Liste des domaines autorisés\nconst ALLOWED_DOMAINS = ['application-inovie-scan.web.app', 'application-inovie-scan.firebaseapp.com', 'localhost', '127.0.0.1'];\n\n// Initialize Firebase only if it hasn't been initialized yet\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApp();\n\n// Initialize services\nconst db = getFirestore(app);\nconst storage = getStorage(app);\nconst auth = getAuth(app);\n\n// Configuration de la persistance\ntry {\n  // Persistance de l'authentification\n  setPersistence(auth, browserSessionPersistence).then(() => {\n    console.log('Persistance de session configurée');\n  }).catch(error => {\n    console.error('Erreur de configuration de la persistance:', error);\n  });\n\n  // Persistance Firestore\n  enableIndexedDbPersistence(db).then(() => {\n    console.log('✅ Persistance Firestore activée');\n  }).catch(error => {\n    if (error.code === 'failed-precondition') {\n      console.warn('⚠️ La persistance Firestore ne peut pas être activée car plusieurs onglets sont ouverts');\n    } else if (error.code === 'unimplemented') {\n      console.warn('⚠️ Le navigateur ne prend pas en charge la persistance Firestore');\n    }\n  });\n} catch (error) {\n  console.error('❌ Erreur lors de la configuration de la persistance', error);\n}\n\n// Fonction de gestion des erreurs Firebase\nconst handleFirebaseError = error => {\n  console.error('Erreur Firebase:', error);\n  return error;\n};\n\n// Export services and utilities\nexport { db, storage, auth, PRODUCTION_URL, actionCodeSettings, ALLOWED_DOMAINS, handleFirebaseError };","map":{"version":3,"names":["initializeApp","getApps","getApp","getFirestore","enableIndexedDbPersistence","setLogLevel","getStorage","getAuth","setPersistence","browserSessionPersistence","firebaseConfig","apiKey","import","meta","env","VITE_FIREBASE_API_KEY","authDomain","VITE_FIREBASE_AUTH_DOMAIN","projectId","VITE_FIREBASE_PROJECT_ID","storageBucket","VITE_FIREBASE_STORAGE_BUCKET","messagingSenderId","VITE_FIREBASE_MESSAGING_SENDER_ID","appId","VITE_FIREBASE_APP_ID","PRODUCTION_URL","actionCodeSettings","url","handleCodeInApp","dynamicLinkDomain","ALLOWED_DOMAINS","app","length","db","storage","auth","then","console","log","catch","error","code","warn","handleFirebaseError"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/config/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from 'firebase/app';\r\nimport { getFirestore, enableIndexedDbPersistence, setLogLevel } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\nimport { getAuth, setPersistence, browserSessionPersistence } from 'firebase/auth';\r\n\r\n// Configuration Firebase\r\nconst firebaseConfig = {\r\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,\r\n  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,\r\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,\r\n  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: import.meta.env.VITE_FIREBASE_APP_ID\r\n};\r\n\r\n// Configuration des logs\r\nsetLogLevel('warn');\r\n\r\n// URL de base pour les redirections\r\nconst PRODUCTION_URL = 'https://application-inovie-scan.web.app';\r\n\r\n// Configuration des liens de réinitialisation de mot de passe\r\nconst actionCodeSettings = {\r\n  url: `${PRODUCTION_URL}/login?reset=true`,\r\n  handleCodeInApp: true,\r\n  dynamicLinkDomain: null\r\n};\r\n\r\n// Liste des domaines autorisés\r\nconst ALLOWED_DOMAINS = [\r\n  'application-inovie-scan.web.app',\r\n  'application-inovie-scan.firebaseapp.com',\r\n  'localhost',\r\n  '127.0.0.1'\r\n];\r\n\r\n// Initialize Firebase only if it hasn't been initialized yet\r\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApp();\r\n\r\n// Initialize services\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app);\r\nconst auth = getAuth(app);\r\n\r\n// Configuration de la persistance\r\ntry {\r\n  // Persistance de l'authentification\r\n  setPersistence(auth, browserSessionPersistence)\r\n    .then(() => {\r\n      console.log('Persistance de session configurée');\r\n    })\r\n    .catch((error) => {\r\n      console.error('Erreur de configuration de la persistance:', error);\r\n    });\r\n\r\n  // Persistance Firestore\r\n  enableIndexedDbPersistence(db)\r\n    .then(() => {\r\n      console.log('✅ Persistance Firestore activée');\r\n    })\r\n    .catch((error) => {\r\n      if (error.code === 'failed-precondition') {\r\n        console.warn('⚠️ La persistance Firestore ne peut pas être activée car plusieurs onglets sont ouverts');\r\n      } else if (error.code === 'unimplemented') {\r\n        console.warn('⚠️ Le navigateur ne prend pas en charge la persistance Firestore');\r\n      }\r\n    });\r\n} catch (error) {\r\n  console.error('❌ Erreur lors de la configuration de la persistance', error);\r\n}\r\n\r\n// Fonction de gestion des erreurs Firebase\r\nconst handleFirebaseError = (error: any) => {\r\n  console.error('Erreur Firebase:', error);\r\n  return error;\r\n};\r\n\r\n// Export services and utilities\r\nexport { \r\n  db, \r\n  storage, \r\n  auth,\r\n  PRODUCTION_URL,\r\n  actionCodeSettings,\r\n  ALLOWED_DOMAINS,\r\n  handleFirebaseError\r\n}; \r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,cAAc;AAC7D,SAASC,YAAY,EAAEC,0BAA0B,EAAEC,WAAW,QAAQ,oBAAoB;AAC1F,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,OAAO,EAAEC,cAAc,EAAEC,yBAAyB,QAAQ,eAAe;;AAElF;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,qBAAqB;EAC7CC,UAAU,EAAEJ,MAAM,CAACC,IAAI,CAACC,GAAG,CAACG,yBAAyB;EACrDC,SAAS,EAAEN,MAAM,CAACC,IAAI,CAACC,GAAG,CAACK,wBAAwB;EACnDC,aAAa,EAAER,MAAM,CAACC,IAAI,CAACC,GAAG,CAACO,4BAA4B;EAC3DC,iBAAiB,EAAEV,MAAM,CAACC,IAAI,CAACC,GAAG,CAACS,iCAAiC;EACpEC,KAAK,EAAEZ,MAAM,CAACC,IAAI,CAACC,GAAG,CAACW;AACzB,CAAC;;AAED;AACApB,WAAW,CAAC,MAAM,CAAC;;AAEnB;AACA,MAAMqB,cAAc,GAAG,yCAAyC;;AAEhE;AACA,MAAMC,kBAAkB,GAAG;EACzBC,GAAG,EAAE,GAAGF,cAAc,mBAAmB;EACzCG,eAAe,EAAE,IAAI;EACrBC,iBAAiB,EAAE;AACrB,CAAC;;AAED;AACA,MAAMC,eAAe,GAAG,CACtB,iCAAiC,EACjC,yCAAyC,EACzC,WAAW,EACX,WAAW,CACZ;;AAED;AACA,MAAMC,GAAG,GAAG/B,OAAO,CAAC,CAAC,CAACgC,MAAM,KAAK,CAAC,GAAGjC,aAAa,CAACU,cAAc,CAAC,GAAGR,MAAM,CAAC,CAAC;;AAE7E;AACA,MAAMgC,EAAE,GAAG/B,YAAY,CAAC6B,GAAG,CAAC;AAC5B,MAAMG,OAAO,GAAG7B,UAAU,CAAC0B,GAAG,CAAC;AAC/B,MAAMI,IAAI,GAAG7B,OAAO,CAACyB,GAAG,CAAC;;AAEzB;AACA,IAAI;EACF;EACAxB,cAAc,CAAC4B,IAAI,EAAE3B,yBAAyB,CAAC,CAC5C4B,IAAI,CAAC,MAAM;IACVC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;EACpE,CAAC,CAAC;;EAEJ;EACArC,0BAA0B,CAAC8B,EAAE,CAAC,CAC3BG,IAAI,CAAC,MAAM;IACVC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChB,IAAIA,KAAK,CAACC,IAAI,KAAK,qBAAqB,EAAE;MACxCJ,OAAO,CAACK,IAAI,CAAC,yFAAyF,CAAC;IACzG,CAAC,MAAM,IAAIF,KAAK,CAACC,IAAI,KAAK,eAAe,EAAE;MACzCJ,OAAO,CAACK,IAAI,CAAC,kEAAkE,CAAC;IAClF;EACF,CAAC,CAAC;AACN,CAAC,CAAC,OAAOF,KAAK,EAAE;EACdH,OAAO,CAACG,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;AAC7E;;AAEA;AACA,MAAMG,mBAAmB,GAAIH,KAAU,IAAK;EAC1CH,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EACxC,OAAOA,KAAK;AACd,CAAC;;AAED;AACA,SACEP,EAAE,EACFC,OAAO,EACPC,IAAI,EACJV,cAAc,EACdC,kBAAkB,EAClBI,eAAe,EACfa,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}