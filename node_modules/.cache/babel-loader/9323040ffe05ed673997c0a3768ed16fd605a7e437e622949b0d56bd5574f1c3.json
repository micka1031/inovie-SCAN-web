{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\LoginScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { sendPasswordResetEmail } from 'firebase/auth';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { auth, db } from '../config/firebase';\nimport logoInovie from '../assets/logo-inovie.png';\n// import * as LogoIcons from '../assets/inovie-logo.js';\nimport './LoginScreen.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  _s();\n  const [identifier, setIdentifier] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [welcomeMessage, setWelcomeMessage] = useState('');\n  const [infoMessage, setInfoMessage] = useState('');\n  const [isNewUserLogin, setIsNewUserLogin] = useState(false);\n  const [isPasswordReset, setIsPasswordReset] = useState(false);\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  const [resetEmail, setResetEmail] = useState('');\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate();\n  const {\n    login,\n    currentUser\n  } = useAuth();\n\n  // Effet pour rediriger automatiquement si l'utilisateur est connect√©\n  useEffect(() => {\n    if (currentUser && isSubmitted) {\n      console.log(\"Redirection automatique vers / car utilisateur connect√©:\", currentUser);\n      navigate('/');\n    }\n  }, [currentUser, isSubmitted, navigate]);\n  useEffect(() => {\n    // R√©cup√©rer les param√®tres de l'URL\n    const params = new URLSearchParams(window.location.search);\n    const email = params.get('email');\n    const isNewUser = params.get('newUser') === 'true';\n    const isReset = params.get('reset') === 'true';\n    const nom = params.get('nom');\n    const role = params.get('role');\n    console.log('üîç Param√®tres URL d√©tect√©s:', {\n      email,\n      isNewUser,\n      isReset,\n      nom,\n      role,\n      fullUrl: window.location.href\n    });\n\n    // Pr√©-remplir l'email s'il est pr√©sent dans l'URL\n    if (email) {\n      setIdentifier(email);\n      console.log('üìù Email pr√©-rempli:', email);\n    }\n\n    // Afficher un message appropri√© selon le sc√©nario\n    if (isNewUser && nom) {\n      setIsNewUserLogin(true);\n      const welcomeMsg = `Bienvenue ${nom} ! Votre compte a √©t√© cr√©√© avec succ√®s. Veuillez vous connecter avec le mot de passe que vous venez de d√©finir.`;\n      setWelcomeMessage(welcomeMsg);\n      setInfoMessage(\"Si vous n'avez pas encore d√©fini votre mot de passe via l'email, vous pouvez √©galement utiliser le mot de passe temporaire fourni par votre administrateur.\");\n      console.log('‚ú® Message de bienvenue affich√© pour nouvel utilisateur:', welcomeMsg);\n    } else if (isReset) {\n      setIsPasswordReset(true);\n      const resetMsg = \"Votre mot de passe a √©t√© r√©initialis√© avec succ√®s !\";\n      setWelcomeMessage(resetMsg);\n      setInfoMessage(\"Vous pouvez maintenant vous connecter avec votre nouveau mot de passe.\");\n      console.log('üîÑ Message de r√©initialisation affich√©:', resetMsg);\n    } else {\n      console.log('‚ÑπÔ∏è Aucun message sp√©cial √† afficher');\n    }\n  }, []);\n\n  // Fonction pour trouver l'email d'un utilisateur √† partir de son identifiant\n  const findEmailByIdentifier = async userIdentifier => {\n    try {\n      // Si l'identifiant contient d√©j√† un @, c'est probablement un email\n      if (userIdentifier.includes('@')) {\n        console.log(`üìß Identifiant contient d√©j√† un @ - utilisation directe: ${userIdentifier}`);\n        return userIdentifier;\n      }\n      console.log(`üîç Recherche de l'utilisateur avec l'identifiant exact: \"${userIdentifier}\"`);\n\n      // R√©cup√©rer tous les utilisateurs pour d√©boguer\n      const allUsersRef = collection(db, 'users');\n      const allUsersSnapshot = await getDocs(allUsersRef);\n      console.log(`üìä Nombre total d'utilisateurs dans Firestore: ${allUsersSnapshot.size}`);\n\n      // Afficher les premiers utilisateurs pour d√©boguer\n      const sampleUsers = allUsersSnapshot.docs.slice(0, 3).map(doc => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          identifiant: data.identifiant,\n          email: data.email\n        };\n      });\n      console.log('üìã √âchantillon d\\'utilisateurs:', sampleUsers);\n\n      // Rechercher l'utilisateur dans Firestore par son identifiant (recherche exacte)\n      const usersRef = collection(db, 'users');\n      const q = query(usersRef, where('identifiant', '==', userIdentifier));\n      const querySnapshot = await getDocs(q);\n\n      // Si aucun r√©sultat, essayer avec une recherche insensible √† la casse\n      if (querySnapshot.empty) {\n        console.log(`‚ö†Ô∏è Aucun utilisateur trouv√© avec l'identifiant exact: \"${userIdentifier}\"`);\n        console.log(`üîÑ Recherche manuelle insensible √† la casse...`);\n\n        // Recherche manuelle insensible √† la casse\n        const userIdentifierLower = userIdentifier.toLowerCase();\n\n        // Parcourir tous les utilisateurs pour trouver une correspondance insensible √† la casse\n        for (const doc of allUsersSnapshot.docs) {\n          const userData = doc.data();\n          if (userData.identifiant && userData.identifiant.toLowerCase() === userIdentifierLower) {\n            console.log(`‚úÖ Utilisateur trouv√© avec correspondance insensible √† la casse: \"${userData.identifiant}\"`);\n            if (userData.email) {\n              console.log(`üìß Email trouv√©: ${userData.email}`);\n              return userData.email;\n            }\n          }\n        }\n\n        // Si toujours pas trouv√©, essayer avec @inovie.fr\n        console.log(`‚ö†Ô∏è Aucune correspondance trouv√©e, essai avec @inovie.fr`);\n        const emailWithDomain = `${userIdentifier}@inovie.fr`;\n        console.log(`üìß Email construit: ${emailWithDomain}`);\n        return emailWithDomain;\n      }\n\n      // R√©cup√©rer l'email du premier utilisateur trouv√©\n      const userDoc = querySnapshot.docs[0];\n      const userData = userDoc.data();\n      const email = userData.email;\n      console.log(`‚úÖ Utilisateur trouv√©: \"${userIdentifier}\" -> \"${email}\"`);\n      console.log(`üìä Donn√©es compl√®tes:`, userData);\n      return email;\n    } catch (error) {\n      console.error('‚ùå Erreur lors de la recherche de l\\'utilisateur:', error);\n      // En cas d'erreur, essayer avec @inovie.fr comme solution de secours\n      const emailWithDomain = `${userIdentifier}@inovie.fr`;\n      console.log(`üîÑ Solution de secours apr√®s erreur: ${emailWithDomain}`);\n      return emailWithDomain;\n    }\n  };\n  const forceRedirection = () => {\n    console.log(\"For√ßage de la redirection...\");\n    navigate('/');\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    // √âviter les soumissions multiples\n    if (loading || isSubmitted) {\n      console.log(\"Soumission d√©j√† en cours, ignor√©e\");\n      return;\n    }\n    setError(null);\n    setLoading(true);\n    setIsSubmitted(true);\n    console.log(\"D√©but de la tentative de connexion\");\n    try {\n      // Trouver l'email correspondant √† l'identifiant\n      const email = await findEmailByIdentifier(identifier);\n      if (!email) {\n        setError('Identifiant non reconnu');\n        setLoading(false);\n        setIsSubmitted(false);\n        return;\n      }\n      console.log(`Email identifi√©: ${email}, tentative de connexion...`);\n\n      // Utiliser la fonction login du contexte d'authentification\n      const user = await login(email, password);\n      console.log(\"Login r√©ussi, utilisateur:\", user);\n\n      // HACK: Forcer la redirection apr√®s un court d√©lai si elle n'est pas automatique\n      setTimeout(forceRedirection, 300);\n    } catch (error) {\n      console.error('Erreur de connexion:', error);\n      setIsSubmitted(false);\n\n      // V√©rifier si c'est un probl√®me de mot de passe temporaire\n      try {\n        const usersRef = collection(db, 'users');\n        const email = await findEmailByIdentifier(identifier);\n        if (email) {\n          const q = query(usersRef, where('email', '==', email));\n          const querySnapshot = await getDocs(q);\n          if (!querySnapshot.empty) {\n            const userData = querySnapshot.docs[0].data();\n\n            // Si l'utilisateur a un mot de passe temporaire et qu'il correspond\n            if (userData.tempPassword && userData.tempPassword === password) {\n              console.log('‚úÖ Mot de passe temporaire valide, mais connexion Firebase impossible');\n              setError('Votre mot de passe temporaire est correct, mais une erreur technique emp√™che la connexion. Veuillez contacter l\\'administrateur.');\n              setLoading(false);\n              return;\n            }\n          }\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la v√©rification du mot de passe temporaire:\", err);\n      }\n\n      // Sinon, afficher l'erreur standard\n      const errorMessage = getErrorMessage(error.code);\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getErrorMessage = errorCode => {\n    if (errorCode === 'auth/invalid-credential' || errorCode === 'auth/wrong-password' || errorCode === 'auth/user-not-found') {\n      return 'Identifiant ou mot de passe incorrect. V√©rifiez vos informations et r√©essayez.';\n    } else if (errorCode === 'auth/too-many-requests') {\n      return 'Trop de tentatives de connexion. Veuillez r√©essayer plus tard ou contactez votre administrateur.';\n    } else if (errorCode === 'auth/user-disabled') {\n      return 'Ce compte a √©t√© d√©sactiv√©. Veuillez contacter votre administrateur.';\n    } else if (errorCode === 'auth/invalid-email') {\n      return 'Format d\\'identifiant invalide. Veuillez r√©essayer avec votre identifiant Inovie.';\n    } else {\n      return `Une erreur s'est produite lors de la connexion. Veuillez r√©essayer.`;\n    }\n  };\n\n  // Fonction pour g√©rer la r√©initialisation du mot de passe\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('üîÑ D√©but de la r√©initialisation du mot de passe');\n\n      // Utiliser l'email saisi dans le pop-up ou l'identifiant du formulaire de connexion\n      const emailToReset = resetEmail || (await findEmailByIdentifier(identifier));\n      console.log('üìß Email √† r√©initialiser:', emailToReset);\n      if (!emailToReset) {\n        console.error('‚ùå Aucun email fourni');\n        setError('Veuillez saisir une adresse email valide.');\n        setLoading(false);\n        return;\n      }\n\n      // Envoyer l'email de r√©initialisation\n      await sendPasswordResetEmail(auth, emailToReset);\n      console.log('‚úÖ Email de r√©initialisation envoy√© avec succ√®s');\n\n      // Afficher un message de succ√®s\n      setResetEmailSent(true);\n      setResetEmail('');\n      alert(`Un email de r√©initialisation a √©t√© envoy√© √† ${emailToReset}. Veuillez v√©rifier votre bo√Æte de r√©ception et suivre les instructions.`);\n\n      // Apr√®s 5 secondes, fermer le pop-up\n      setTimeout(() => {\n        setShowForgotPassword(false);\n        setResetEmailSent(false);\n      }, 5000);\n    } catch (error) {\n      console.error('‚ùå Erreur lors de la r√©initialisation:', error);\n      console.error('D√©tails:', {\n        code: error.code,\n        message: error.message,\n        stack: error.stack\n      });\n      let errorMessage = 'Une erreur est survenue lors de la r√©initialisation du mot de passe.';\n      switch (error.code) {\n        case 'auth/invalid-email':\n          errorMessage = 'Format d\\'email invalide.';\n          break;\n        case 'auth/user-not-found':\n          errorMessage = 'Aucun compte associ√© √† cet email.';\n          break;\n        case 'auth/too-many-requests':\n          errorMessage = 'Trop de tentatives. Veuillez r√©essayer plus tard.';\n          break;\n        default:\n          errorMessage = `Erreur: ${error.message}`;\n      }\n      setError(errorMessage);\n      alert(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour ouvrir Outlook Web avec les param√®tres appropri√©s\n  const openOutlookMail = (to, subject = '', body = '') => {\n    // URL pour Outlook Web Access (OWA)\n    const outlookWebUrl = `https://outlook.office.com/mail/deeplink/compose?to=${encodeURIComponent(to)}&subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n\n    // Ouvrir dans un nouvel onglet\n    window.open(outlookWebUrl, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoInovie,\n        alt: \"Groupe Inovie\",\n        className: \"header-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        style: {\n          textTransform: 'none',\n          color: '#263471'\n        },\n        children: \"inovie SCAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), welcomeMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `welcome-message ${isNewUserLogin ? 'welcome-message-new-user' : ''} ${isPasswordReset ? 'welcome-message-reset' : ''}`,\n        children: welcomeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), infoMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-message\",\n        children: infoMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"identifier\",\n            children: \"Identifiant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"identifier\",\n            value: identifier,\n            onChange: e => setIdentifier(e.target.value),\n            required: true,\n            autoFocus: !identifier // Ne pas prendre le focus si l'identifiant est d√©j√† rempli\n            ,\n            placeholder: \"Votre identifiant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            autoFocus: !!identifier // Prendre le focus si l'identifiant est d√©j√† rempli\n            ,\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          disabled: loading,\n          children: loading ? 'Connexion en cours...' : 'Se connecter'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"login-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pour vous connecter, utilisez votre identifiant Inovie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              // Cr√©ation manuelle du message pour l'assistance\n              const messageAssistance = \"Bonjour,\" + \"\\n\\n\" + \"Je vous contacte au sujet de l'application Inovie SCAN.\" + \"\\n\\n\" + \"Mon identifiant : \" + (identifier || \"[√Ä compl√©ter]\") + \"\\n\\n\" + \"Description du probl√®me : [Veuillez d√©crire votre probl√®me ici]\" + \"\\n\\n\" + \"Merci pour votre aide.\" + \"\\n\\n\" + \"Cordialement.\";\n              openOutlookMail('mickael.volle@inovie.fr', 'Demande d\\'assistance - Application Inovie SCAN', messageAssistance);\n            },\n            children: \"Contacter l'administrateur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), ' | ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              setShowForgotPassword(true);\n            },\n            children: \"Mot de passe oubli\\xE9 ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"version\",\n      children: \"version 1.0 | \\xA9 2025 inovie SCAN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), showForgotPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"modal-title\",\n            children: \"R\\xE9initialisation de mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => {\n              setShowForgotPassword(false);\n              setResetEmailSent(false);\n              setResetEmail('');\n              setError(null);\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), resetEmailSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reset-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Un email de r\\xE9initialisation a \\xE9t\\xE9 envoy\\xE9 \\xE0 l'adresse indiqu\\xE9e.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Veuillez v\\xE9rifier votre bo\\xEEte de r\\xE9ception et suivre les instructions pour r\\xE9initialiser votre mot de passe.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Cette fen\\xEAtre se fermera automatiquement dans quelques secondes...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleResetPassword,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"reset-email\",\n              children: \"Adresse email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"reset-email\",\n              value: resetEmail,\n              onChange: e => setResetEmail(e.target.value),\n              placeholder: \"Votre adresse email\",\n              required: true,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-text\",\n              children: \"Saisissez l'adresse email associ\\xE9e \\xE0 votre compte pour recevoir un lien de r\\xE9initialisation.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"button button-secondary\",\n              onClick: () => {\n                setShowForgotPassword(false);\n                setResetEmail('');\n                setError(null);\n              },\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button button-primary\",\n              disabled: loading,\n              children: loading ? 'Envoi en cours...' : 'Envoyer le lien'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"8GKtwLhJT7olC+NMOqWm13FBgeI=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","useEffect","sendPasswordResetEmail","collection","query","where","getDocs","auth","db","logoInovie","useNavigate","useAuth","jsxDEV","_jsxDEV","LoginScreen","_s","identifier","setIdentifier","password","setPassword","error","setError","loading","setLoading","welcomeMessage","setWelcomeMessage","infoMessage","setInfoMessage","isNewUserLogin","setIsNewUserLogin","isPasswordReset","setIsPasswordReset","showForgotPassword","setShowForgotPassword","resetEmail","setResetEmail","resetEmailSent","setResetEmailSent","isSubmitted","setIsSubmitted","navigate","login","currentUser","console","log","params","URLSearchParams","window","location","search","email","get","isNewUser","isReset","nom","role","fullUrl","href","welcomeMsg","resetMsg","findEmailByIdentifier","userIdentifier","includes","allUsersRef","allUsersSnapshot","size","sampleUsers","docs","slice","map","doc","data","id","identifiant","usersRef","q","querySnapshot","empty","userIdentifierLower","toLowerCase","userData","emailWithDomain","userDoc","forceRedirection","handleLogin","e","preventDefault","user","setTimeout","tempPassword","err","errorMessage","getErrorMessage","code","errorCode","handleResetPassword","emailToReset","alert","message","stack","openOutlookMail","to","subject","body","outlookWebUrl","encodeURIComponent","open","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","textTransform","color","onSubmit","htmlFor","type","value","onChange","target","required","autoFocus","placeholder","disabled","onClick","messageAssistance","_c","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/LoginScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { signInWithEmailAndPassword, sendPasswordResetEmail } from 'firebase/auth';\nimport { collection, query, where, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { auth, db, PRODUCTION_URL, ALLOWED_DOMAINS, actionCodeSettings } from '../config/firebase';\nimport logoInovie from '../assets/logo-inovie.png';\n// import * as LogoIcons from '../assets/inovie-logo.js';\nimport './LoginScreen.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst LoginScreen: React.FC = () => {\n  const [identifier, setIdentifier] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [welcomeMessage, setWelcomeMessage] = useState<string>('');\n  const [infoMessage, setInfoMessage] = useState<string>('');\n  const [isNewUserLogin, setIsNewUserLogin] = useState<boolean>(false);\n  const [isPasswordReset, setIsPasswordReset] = useState<boolean>(false);\n  const [showForgotPassword, setShowForgotPassword] = useState<boolean>(false);\n  const [resetEmail, setResetEmail] = useState<string>('');\n  const [resetEmailSent, setResetEmailSent] = useState<boolean>(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate();\n  const { login, currentUser } = useAuth();\n\n  // Effet pour rediriger automatiquement si l'utilisateur est connect√©\n  useEffect(() => {\n    if (currentUser && isSubmitted) {\n      console.log(\"Redirection automatique vers / car utilisateur connect√©:\", currentUser);\n      navigate('/');\n    }\n  }, [currentUser, isSubmitted, navigate]);\n\n  useEffect(() => {\n    // R√©cup√©rer les param√®tres de l'URL\n    const params = new URLSearchParams(window.location.search);\n    const email = params.get('email');\n    const isNewUser = params.get('newUser') === 'true';\n    const isReset = params.get('reset') === 'true';\n    const nom = params.get('nom');\n    const role = params.get('role');\n\n    console.log('üîç Param√®tres URL d√©tect√©s:', {\n      email,\n      isNewUser,\n      isReset,\n      nom,\n      role,\n      fullUrl: window.location.href\n    });\n\n    // Pr√©-remplir l'email s'il est pr√©sent dans l'URL\n    if (email) {\n      setIdentifier(email);\n      console.log('üìù Email pr√©-rempli:', email);\n    }\n\n    // Afficher un message appropri√© selon le sc√©nario\n    if (isNewUser && nom) {\n      setIsNewUserLogin(true);\n      const welcomeMsg = `Bienvenue ${nom} ! Votre compte a √©t√© cr√©√© avec succ√®s. Veuillez vous connecter avec le mot de passe que vous venez de d√©finir.`;\n      setWelcomeMessage(welcomeMsg);\n      setInfoMessage(\"Si vous n'avez pas encore d√©fini votre mot de passe via l'email, vous pouvez √©galement utiliser le mot de passe temporaire fourni par votre administrateur.\");\n      console.log('‚ú® Message de bienvenue affich√© pour nouvel utilisateur:', welcomeMsg);\n    } else if (isReset) {\n      setIsPasswordReset(true);\n      const resetMsg = \"Votre mot de passe a √©t√© r√©initialis√© avec succ√®s !\";\n      setWelcomeMessage(resetMsg);\n      setInfoMessage(\"Vous pouvez maintenant vous connecter avec votre nouveau mot de passe.\");\n      console.log('üîÑ Message de r√©initialisation affich√©:', resetMsg);\n    } else {\n      console.log('‚ÑπÔ∏è Aucun message sp√©cial √† afficher');\n    }\n  }, []);\n\n  // Fonction pour trouver l'email d'un utilisateur √† partir de son identifiant\n  const findEmailByIdentifier = async (userIdentifier: string): Promise<string | null> => {\n    try {\n      // Si l'identifiant contient d√©j√† un @, c'est probablement un email\n      if (userIdentifier.includes('@')) {\n        console.log(`üìß Identifiant contient d√©j√† un @ - utilisation directe: ${userIdentifier}`);\n        return userIdentifier;\n      }\n      \n      console.log(`üîç Recherche de l'utilisateur avec l'identifiant exact: \"${userIdentifier}\"`);\n      \n      // R√©cup√©rer tous les utilisateurs pour d√©boguer\n      const allUsersRef = collection(db, 'users');\n      const allUsersSnapshot = await getDocs(allUsersRef);\n      console.log(`üìä Nombre total d'utilisateurs dans Firestore: ${allUsersSnapshot.size}`);\n      \n      // Afficher les premiers utilisateurs pour d√©boguer\n      const sampleUsers = allUsersSnapshot.docs.slice(0, 3).map(doc => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          identifiant: data.identifiant,\n          email: data.email\n        };\n      });\n      console.log('üìã √âchantillon d\\'utilisateurs:', sampleUsers);\n      \n      // Rechercher l'utilisateur dans Firestore par son identifiant (recherche exacte)\n      const usersRef = collection(db, 'users');\n      const q = query(usersRef, where('identifiant', '==', userIdentifier));\n      const querySnapshot = await getDocs(q);\n      \n      // Si aucun r√©sultat, essayer avec une recherche insensible √† la casse\n      if (querySnapshot.empty) {\n        console.log(`‚ö†Ô∏è Aucun utilisateur trouv√© avec l'identifiant exact: \"${userIdentifier}\"`);\n        console.log(`üîÑ Recherche manuelle insensible √† la casse...`);\n        \n        // Recherche manuelle insensible √† la casse\n        const userIdentifierLower = userIdentifier.toLowerCase();\n        \n        // Parcourir tous les utilisateurs pour trouver une correspondance insensible √† la casse\n        for (const doc of allUsersSnapshot.docs) {\n          const userData = doc.data();\n          if (userData.identifiant && userData.identifiant.toLowerCase() === userIdentifierLower) {\n            console.log(`‚úÖ Utilisateur trouv√© avec correspondance insensible √† la casse: \"${userData.identifiant}\"`);\n            if (userData.email) {\n              console.log(`üìß Email trouv√©: ${userData.email}`);\n              return userData.email;\n            }\n          }\n        }\n        \n        // Si toujours pas trouv√©, essayer avec @inovie.fr\n        console.log(`‚ö†Ô∏è Aucune correspondance trouv√©e, essai avec @inovie.fr`);\n        const emailWithDomain = `${userIdentifier}@inovie.fr`;\n        console.log(`üìß Email construit: ${emailWithDomain}`);\n        return emailWithDomain;\n      }\n      \n      // R√©cup√©rer l'email du premier utilisateur trouv√©\n      const userDoc = querySnapshot.docs[0];\n      const userData = userDoc.data();\n      const email = userData.email;\n      \n      console.log(`‚úÖ Utilisateur trouv√©: \"${userIdentifier}\" -> \"${email}\"`);\n      console.log(`üìä Donn√©es compl√®tes:`, userData);\n      \n      return email;\n    } catch (error) {\n      console.error('‚ùå Erreur lors de la recherche de l\\'utilisateur:', error);\n      // En cas d'erreur, essayer avec @inovie.fr comme solution de secours\n      const emailWithDomain = `${userIdentifier}@inovie.fr`;\n      console.log(`üîÑ Solution de secours apr√®s erreur: ${emailWithDomain}`);\n      return emailWithDomain;\n    }\n  };\n\n  const forceRedirection = () => {\n    console.log(\"For√ßage de la redirection...\");\n    navigate('/');\n  };\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // √âviter les soumissions multiples\n    if (loading || isSubmitted) {\n      console.log(\"Soumission d√©j√† en cours, ignor√©e\");\n      return;\n    }\n    \n    setError(null);\n    setLoading(true);\n    setIsSubmitted(true);\n    \n    console.log(\"D√©but de la tentative de connexion\");\n\n    try {\n      // Trouver l'email correspondant √† l'identifiant\n      const email = await findEmailByIdentifier(identifier);\n      \n      if (!email) {\n        setError('Identifiant non reconnu');\n        setLoading(false);\n        setIsSubmitted(false);\n        return;\n      }\n\n      console.log(`Email identifi√©: ${email}, tentative de connexion...`);\n\n      // Utiliser la fonction login du contexte d'authentification\n      const user = await login(email, password);\n      console.log(\"Login r√©ussi, utilisateur:\", user);\n      \n      // HACK: Forcer la redirection apr√®s un court d√©lai si elle n'est pas automatique\n      setTimeout(forceRedirection, 300);\n      \n    } catch (error: any) {\n      console.error('Erreur de connexion:', error);\n      setIsSubmitted(false);\n      \n      // V√©rifier si c'est un probl√®me de mot de passe temporaire\n      try {\n        const usersRef = collection(db, 'users');\n        const email = await findEmailByIdentifier(identifier);\n        if (email) {\n          const q = query(usersRef, where('email', '==', email));\n          const querySnapshot = await getDocs(q);\n          \n          if (!querySnapshot.empty) {\n            const userData = querySnapshot.docs[0].data();\n            \n            // Si l'utilisateur a un mot de passe temporaire et qu'il correspond\n            if (userData.tempPassword && userData.tempPassword === password) {\n              console.log('‚úÖ Mot de passe temporaire valide, mais connexion Firebase impossible');\n              setError('Votre mot de passe temporaire est correct, mais une erreur technique emp√™che la connexion. Veuillez contacter l\\'administrateur.');\n              setLoading(false);\n              return;\n            }\n          }\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la v√©rification du mot de passe temporaire:\", err);\n      }\n      \n      // Sinon, afficher l'erreur standard\n      const errorMessage = getErrorMessage(error.code);\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getErrorMessage = (errorCode: string) => {\n    if (errorCode === 'auth/invalid-credential' || errorCode === 'auth/wrong-password' || errorCode === 'auth/user-not-found') {\n      return 'Identifiant ou mot de passe incorrect. V√©rifiez vos informations et r√©essayez.';\n    } else if (errorCode === 'auth/too-many-requests') {\n      return 'Trop de tentatives de connexion. Veuillez r√©essayer plus tard ou contactez votre administrateur.';\n    } else if (errorCode === 'auth/user-disabled') {\n      return 'Ce compte a √©t√© d√©sactiv√©. Veuillez contacter votre administrateur.';\n    } else if (errorCode === 'auth/invalid-email') {\n      return 'Format d\\'identifiant invalide. Veuillez r√©essayer avec votre identifiant Inovie.';\n    } else {\n      return `Une erreur s'est produite lors de la connexion. Veuillez r√©essayer.`;\n    }\n  };\n\n  // Fonction pour g√©rer la r√©initialisation du mot de passe\n  const handleResetPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log('üîÑ D√©but de la r√©initialisation du mot de passe');\n      \n      // Utiliser l'email saisi dans le pop-up ou l'identifiant du formulaire de connexion\n      const emailToReset = resetEmail || await findEmailByIdentifier(identifier);\n      \n      console.log('üìß Email √† r√©initialiser:', emailToReset);\n      \n      if (!emailToReset) {\n        console.error('‚ùå Aucun email fourni');\n        setError('Veuillez saisir une adresse email valide.');\n        setLoading(false);\n        return;\n      }\n      \n      // Envoyer l'email de r√©initialisation\n      await sendPasswordResetEmail(auth, emailToReset);\n      console.log('‚úÖ Email de r√©initialisation envoy√© avec succ√®s');\n      \n      // Afficher un message de succ√®s\n      setResetEmailSent(true);\n      setResetEmail('');\n      alert(`Un email de r√©initialisation a √©t√© envoy√© √† ${emailToReset}. Veuillez v√©rifier votre bo√Æte de r√©ception et suivre les instructions.`);\n      \n      // Apr√®s 5 secondes, fermer le pop-up\n      setTimeout(() => {\n        setShowForgotPassword(false);\n        setResetEmailSent(false);\n      }, 5000);\n      \n    } catch (error: any) {\n      console.error('‚ùå Erreur lors de la r√©initialisation:', error);\n      console.error('D√©tails:', {\n        code: error.code,\n        message: error.message,\n        stack: error.stack\n      });\n      \n      let errorMessage = 'Une erreur est survenue lors de la r√©initialisation du mot de passe.';\n      \n      switch (error.code) {\n        case 'auth/invalid-email':\n          errorMessage = 'Format d\\'email invalide.';\n          break;\n        case 'auth/user-not-found':\n          errorMessage = 'Aucun compte associ√© √† cet email.';\n          break;\n        case 'auth/too-many-requests':\n          errorMessage = 'Trop de tentatives. Veuillez r√©essayer plus tard.';\n          break;\n        default:\n          errorMessage = `Erreur: ${error.message}`;\n      }\n      \n      setError(errorMessage);\n      alert(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour ouvrir Outlook Web avec les param√®tres appropri√©s\n  const openOutlookMail = (to: string, subject: string = '', body: string = '') => {\n    // URL pour Outlook Web Access (OWA)\n    const outlookWebUrl = `https://outlook.office.com/mail/deeplink/compose?to=${encodeURIComponent(to)}&subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    \n    // Ouvrir dans un nouvel onglet\n    window.open(outlookWebUrl, '_blank');\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-content\">\n        <img \n          src={logoInovie}\n          alt=\"Groupe Inovie\" \n          className=\"header-logo\"\n        />\n        <h2 className=\"login-title\" style={{ textTransform: 'none', color: '#263471' }}>inovie SCAN</h2>\n        \n        {welcomeMessage && (\n          <div className={`welcome-message ${isNewUserLogin ? 'welcome-message-new-user' : ''} ${isPasswordReset ? 'welcome-message-reset' : ''}`}>\n            {welcomeMessage}\n          </div>\n        )}\n        \n        {infoMessage && (\n          <div className=\"info-message\">\n            {infoMessage}\n          </div>\n        )}\n        \n        {error && <div className=\"error-message\">{error}</div>}\n        \n        <form onSubmit={handleLogin} className=\"login-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"identifier\">Identifiant</label>\n            <input\n              type=\"text\"\n              id=\"identifier\"\n              value={identifier}\n              onChange={(e) => setIdentifier(e.target.value)}\n              required\n              autoFocus={!identifier} // Ne pas prendre le focus si l'identifiant est d√©j√† rempli\n              placeholder=\"Votre identifiant\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Mot de passe</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              autoFocus={!!identifier} // Prendre le focus si l'identifiant est d√©j√† rempli\n              placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"login-button\"\n            disabled={loading}\n          >\n            {loading ? 'Connexion en cours...' : 'Se connecter'}\n          </button>\n        </form>\n\n        <footer className=\"login-footer\">\n          <p>Pour vous connecter, utilisez votre identifiant Inovie</p>\n          <p>\n            <a \n              href=\"#\" \n              onClick={(e) => {\n                e.preventDefault();\n                // Cr√©ation manuelle du message pour l'assistance\n                const messageAssistance = \"Bonjour,\" + \n                  \"\\n\\n\" + \n                  \"Je vous contacte au sujet de l'application Inovie SCAN.\" + \n                  \"\\n\\n\" + \n                  \"Mon identifiant : \" + (identifier || \"[√Ä compl√©ter]\") + \n                  \"\\n\\n\" + \n                  \"Description du probl√®me : [Veuillez d√©crire votre probl√®me ici]\" + \n                  \"\\n\\n\" + \n                  \"Merci pour votre aide.\" + \n                  \"\\n\\n\" + \n                  \"Cordialement.\";\n                \n                openOutlookMail(\n                  'mickael.volle@inovie.fr',\n                  'Demande d\\'assistance - Application Inovie SCAN',\n                  messageAssistance\n                );\n              }}\n            >\n              Contacter l'administrateur\n            </a>\n            {' | '}\n            <a \n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowForgotPassword(true);\n              }}\n            >\n              Mot de passe oubli√© ?\n            </a>\n          </p>\n        </footer>\n      </div>\n      <p className=\"version\">version 1.0 | ¬© 2025 inovie SCAN</p>\n      \n      {/* Pop-up de r√©initialisation de mot de passe */}\n      {showForgotPassword && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h3 className=\"modal-title\">R√©initialisation de mot de passe</h3>\n              <button \n                className=\"modal-close\" \n                onClick={() => {\n                  setShowForgotPassword(false);\n                  setResetEmailSent(false);\n                  setResetEmail('');\n                  setError(null);\n                }}\n              >\n                &times;\n              </button>\n            </div>\n            \n            {resetEmailSent ? (\n              <div className=\"reset-success\">\n                <p>Un email de r√©initialisation a √©t√© envoy√© √† l'adresse indiqu√©e.</p>\n                <p>Veuillez v√©rifier votre bo√Æte de r√©ception et suivre les instructions pour r√©initialiser votre mot de passe.</p>\n                <p>Cette fen√™tre se fermera automatiquement dans quelques secondes...</p>\n              </div>\n            ) : (\n              <form onSubmit={handleResetPassword}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"reset-email\">Adresse email</label>\n                  <input\n                    type=\"email\"\n                    id=\"reset-email\"\n                    value={resetEmail}\n                    onChange={(e) => setResetEmail(e.target.value)}\n                    placeholder=\"Votre adresse email\"\n                    required\n                    autoFocus\n                  />\n                  <small className=\"form-text\">\n                    Saisissez l'adresse email associ√©e √† votre compte pour recevoir un lien de r√©initialisation.\n                  </small>\n                </div>\n                \n                <div className=\"modal-footer\">\n                  <button \n                    type=\"button\" \n                    className=\"button button-secondary\"\n                    onClick={() => {\n                      setShowForgotPassword(false);\n                      setResetEmail('');\n                      setError(null);\n                    }}\n                  >\n                    Annuler\n                  </button>\n                  <button \n                    type=\"submit\" \n                    className=\"button button-primary\"\n                    disabled={loading}\n                  >\n                    {loading ? 'Envoi en cours...' : 'Envoyer le lien'}\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}