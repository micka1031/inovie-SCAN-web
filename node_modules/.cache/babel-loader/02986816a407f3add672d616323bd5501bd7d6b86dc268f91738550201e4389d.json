{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\UserManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, getDocs, updateDoc, deleteDoc, doc, getDoc, addDoc } from 'firebase/firestore';\nimport { sendPasswordResetEmail } from 'firebase/auth';\nimport { db, auth, PRODUCTION_URL } from '../config/firebase';\nimport './UserManagement.css';\nimport { createUserWithoutSignOut } from '../services/userService';\nimport { RoleService } from '../services/RoleService';\nimport { useAuth } from '../contexts/AuthContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport { PAGES } from '../utils/pageAccessUtils';\nimport PoleSelector from './PoleSelector';\nimport { usePoles } from '../services/PoleService';\nimport PoleFilter from './PoleFilter';\n\n// √âtendre l'interface User import√©e\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [editingUsers, setEditingUsers] = useState({});\n  const [newUser, setNewUser] = useState(null);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [update, setUpdate] = useState(0);\n\n  // √âtat pour la recherche rapide\n  const [quickSearch, setQuickSearch] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  // Ajouter un √©tat pour le filtre par p√¥le\n  const [selectedPole, setSelectedPole] = useState('');\n  const roleService = RoleService.getInstance();\n  const {\n    currentUser,\n    hasPermission\n  } = useAuth();\n  const {\n    poles\n  } = usePoles();\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const [fetchedRoles] = await Promise.all([roleService.getRoles(), fetchUsers()]);\n        setRoles(fetchedRoles);\n      } catch (err) {\n        setError('Erreur lors de l\\'initialisation');\n      }\n    };\n    initialize();\n    checkAdminStatus();\n  }, []);\n\n  // Initialiser les utilisateurs filtr√©s au chargement\n  useEffect(() => {\n    setFilteredUsers(users);\n  }, [users]);\n\n  // Effet pour filtrer les utilisateurs en fonction de la recherche rapide et du p√¥le s√©lectionn√©\n  useEffect(() => {\n    let results = users;\n\n    // Filtrer par p√¥le si un p√¥le est s√©lectionn√©\n    if (selectedPole) {\n      results = results.filter(user => user.pole === selectedPole);\n    }\n\n    // Ensuite, filtrer par recherche rapide\n    if (quickSearch.trim()) {\n      const searchTerm = quickSearch.toLowerCase().trim();\n      results = results.filter(user => {\n        return (user.nom || '').toLowerCase().includes(searchTerm) || (user.email || '').toLowerCase().includes(searchTerm) || (user.identifiant || '').toLowerCase().includes(searchTerm) || (user.role || '').toLowerCase().includes(searchTerm) || (user.pole || '').toLowerCase().includes(searchTerm);\n      });\n    }\n    setFilteredUsers(results);\n  }, [quickSearch, users, selectedPole]);\n  useEffect(() => {\n    console.log('üîê Permissions de l\\'utilisateur courant:', {\n      user: currentUser,\n      hasUsersViewPermission: hasPermission('users.view'),\n      hasUsersCreatePermission: hasPermission('users.create'),\n      hasUsersEditPermission: hasPermission('users.edit'),\n      hasUsersDeletePermission: hasPermission('users.delete'),\n      userRole: currentUser === null || currentUser === void 0 ? void 0 : currentUser.role,\n      userPermissions: currentUser === null || currentUser === void 0 ? void 0 : currentUser.permissions\n    });\n\n    // V√©rifier si l'utilisateur a acc√®s √† la page de gestion des utilisateurs\n    const canAccessUserManagement = hasPermission('users.view') || (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'Administrateur';\n    console.log('üö™ Acc√®s √† la gestion des utilisateurs:', canAccessUserManagement);\n  }, [currentUser]);\n  const fetchUsers = async () => {\n    try {\n      const usersCollection = collection(db, 'users');\n      const usersSnapshot = await getDocs(usersCollection);\n      const usersList = usersSnapshot.docs.map(doc => {\n        const data = doc.data();\n        // S'assurer que l'UID est d√©fini pour tous les utilisateurs\n        if (!data.uid && data.identifiant) {\n          // Si l'UID n'est pas d√©fini mais que l'identifiant existe, utiliser l'identifiant comme UID\n          data.uid = data.identifiant;\n        }\n        return {\n          id: doc.id,\n          ...data\n        };\n      });\n      setUsers(usersList);\n      setLoading(false);\n    } catch (err) {\n      setError('Erreur lors du chargement des utilisateurs');\n      setLoading(false);\n    }\n  };\n  const checkAdminStatus = () => {\n    const currentUser = auth.currentUser;\n    setIsAdmin((currentUser === null || currentUser === void 0 ? void 0 : currentUser.email) === 'mickael.volle@inovie.fr');\n  };\n  const handleResetPassword = async email => {\n    console.log('üîê D√©but de handleResetPassword');\n    console.log('Email re√ßu:', email);\n    setError(null);\n    try {\n      if (!email || email.trim() === '') {\n        console.error('‚ùå Email invalide');\n        setError('L\\'email est invalide');\n        return;\n      }\n      console.log('üîç Tentative d\\'envoi de l\\'email de r√©initialisation');\n      const currentUser = auth.currentUser;\n      if (!currentUser || !currentUser.email) {\n        console.error('‚ùå Aucun utilisateur connect√© ou email non disponible');\n        setError('Vous devez √™tre connect√© pour effectuer cette action');\n        return;\n      }\n      const adminEmail = currentUser.email;\n      console.log('üìß Email de l\\'administrateur connect√©:', adminEmail);\n      console.log('üìß Email de l\\'utilisateur √† r√©initialiser:', email);\n\n      // Configuration personnalis√©e pour l'email de r√©initialisation Firebase\n      const resetActionCodeSettings = {\n        url: PRODUCTION_URL + `/login?email=${encodeURIComponent(email)}&reset=true`,\n        handleCodeInApp: true\n      };\n      console.log('üìù URL de redirection configur√©e:', resetActionCodeSettings.url);\n\n      // Envoyer l'email de r√©initialisation Firebase\n      await sendPasswordResetEmail(auth, email, resetActionCodeSettings);\n      console.log('üìß Email de r√©initialisation Firebase envoy√© avec succ√®s');\n      console.log('‚úÖ Processus de r√©initialisation de mot de passe termin√© avec succ√®s');\n      alert(`\n            ‚úÖ R√©initialisation de mot de passe effectu√©e !\n            \n            Un email de r√©initialisation a √©t√© envoy√© √† ${email}.\n            \n            L'utilisateur pourra :\n            1. Cliquer sur le lien dans l'email pour d√©finir son mot de passe\n            2. Utiliser la fonction \"Mot de passe oubli√©\" sur la page de connexion\n            \n            ATTENTION : Le lien dans l'email est valable pendant 1 heure seulement.\n        `.trim());\n    } catch (error) {\n      console.error('‚ùå ERREUR COMPLETE lors de la r√©initialisation du mot de passe:', error);\n      console.error('D√©tails de l\\'erreur:', {\n        name: error.name,\n        code: error.code,\n        message: error.message,\n        stack: error.stack\n      });\n      let errorMessage = 'Une erreur est survenue';\n      switch (error.code) {\n        case 'auth/invalid-email':\n          errorMessage = 'Format d\\'email invalide';\n          break;\n        case 'auth/user-not-found':\n          errorMessage = 'Aucun utilisateur trouv√© avec cet email';\n          break;\n        case 'auth/missing-email':\n          errorMessage = 'Aucun email n\\'a √©t√© fourni';\n          break;\n        case 'auth/too-many-requests':\n          errorMessage = 'Trop de tentatives. Veuillez r√©essayer plus tard.';\n          break;\n        default:\n          errorMessage = `Impossible d'envoyer l'email de r√©initialisation : ${error.message}`;\n      }\n      console.error('‚ùå Message d\\'erreur:', errorMessage);\n      setError(errorMessage);\n      alert(errorMessage);\n    }\n  };\n  const toggleEditMode = () => {\n    if (!editMode) {\n      // Si on entre en mode √©dition, initialiser l'√©tat d'√©dition avec les utilisateurs actuels\n      console.log(\"Entr√©e en mode √©dition\");\n      const initialEditState = {};\n      users.forEach(user => {\n        initialEditState[user.id] = {\n          ...user\n        };\n      });\n      setEditingUsers(initialEditState);\n      setNewUser(null);\n      // Activer le mode √©dition\n      setEditMode(true);\n    } else {\n      // Si on quitte le mode √©dition, demander confirmation\n      if (window.confirm(\"Voulez-vous enregistrer les modifications ?\")) {\n        console.log(\"Sauvegarde des modifications avant de quitter le mode √©dition\");\n        // Sauvegarder les modifications et quitter le mode √©dition apr√®s la sauvegarde\n        saveAllChanges().then(() => {\n          // D√©s√©lectionner tout et quitter le mode √©dition\n          setSelectedUsers([]);\n          setNewUser(null);\n          setEditMode(false);\n        }).catch(error => {\n          console.error(\"Erreur lors de la sauvegarde:\", error);\n          // Laisser l'utilisateur en mode √©dition en cas d'erreur\n          alert(\"Une erreur est survenue lors de la sauvegarde. Veuillez r√©essayer.\");\n        });\n      } else {\n        console.log(\"Annulation des modifications et sortie du mode √©dition\");\n        // Annuler les modifications et quitter le mode √©dition\n        setEditingUsers({});\n        setNewUser(null);\n        setSelectedUsers([]);\n        setEditMode(false);\n      }\n    }\n  };\n\n  // Fonction utilitaire pour cr√©er un utilisateur par d√©faut\n  const createDefaultUser = () => ({\n    identifiant: '',\n    email: '',\n    nom: '',\n    role: 'Utilisateur',\n    pole: '',\n    statut: 'Actif',\n    permissions: []\n  });\n\n  // Fonction pour convertir un objet partiel en User complet\n  const toFullUser = partialUser => {\n    if (!partialUser) {\n      return createDefaultUser();\n    }\n    return {\n      ...createDefaultUser(),\n      ...partialUser,\n      nom: partialUser.nom || '',\n      email: partialUser.email || '',\n      role: partialUser.role || 'Utilisateur',\n      pole: partialUser.pole || '',\n      statut: partialUser.statut || 'Actif',\n      identifiant: partialUser.identifiant || '',\n      permissions: partialUser.permissions || []\n    };\n  };\n\n  // Modifier handleNewUserChange pour utiliser toFullUser\n  const handleNewUserChange = (field, value) => {\n    setNewUser(prev => {\n      const currentUser = toFullUser(prev);\n      return {\n        ...currentUser,\n        [field]: value\n      };\n    });\n  };\n\n  // Modifier handleAddUser pour g√©rer les types\n  const handleAddUser = async () => {\n    // V√©rifier que newUser n'est pas null\n    if (!newUser) {\n      console.error('Aucun nouvel utilisateur √† ajouter');\n      return;\n    }\n\n    // Convertir le nouvel utilisateur en objet User complet\n    const userDraft = toFullUser(newUser);\n    try {\n      // V√©rifier que les champs requis sont remplis\n      if (!userDraft.nom || !userDraft.email || !userDraft.role) {\n        console.error('Tous les champs requis doivent √™tre remplis');\n        return;\n      }\n\n      // Trouver le r√¥le s√©lectionn√© et ses permissions\n      const selectedRole = roles.find(r => r.name === userDraft.role);\n      if (!selectedRole) {\n        console.error('R√¥le non trouv√©');\n        return;\n      }\n\n      // Cr√©er l'utilisateur avec les permissions du r√¥le\n      const userToAdd = {\n        ...userDraft,\n        permissions: selectedRole.permissions,\n        dateCreation: new Date().toISOString(),\n        dateModification: new Date().toISOString()\n      };\n\n      // Ajouter l'utilisateur √† Firestore\n      const userRef = await addDoc(collection(db, 'users'), userToAdd);\n\n      // R√©initialiser le formulaire\n      setNewUser(null);\n      setUsers(prevUsers => [...prevUsers, {\n        ...userToAdd,\n        id: userRef.id\n      }]);\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de l\\'utilisateur:', error);\n    }\n  };\n  const handleEditChange = async (userId, field, value) => {\n    if (!userId) return;\n    setEditingUsers(prev => {\n      const currentUser = prev[userId] || {\n        ...(users.find(u => u.id === userId) || {})\n      };\n\n      // Si le champ modifi√© est le r√¥le, r√©cup√©rer les permissions associ√©es\n      if (field === 'role') {\n        const selectedRole = roles.find(r => r.name === value);\n        return {\n          ...prev,\n          [userId]: {\n            ...currentUser,\n            [field]: value,\n            permissions: (selectedRole === null || selectedRole === void 0 ? void 0 : selectedRole.permissions) || []\n          }\n        };\n      }\n      return {\n        ...prev,\n        [userId]: {\n          ...currentUser,\n          [field]: value\n        }\n      };\n    });\n  };\n  const getStatusClass = statut => {\n    if (!statut) return '';\n    switch (statut.toLowerCase()) {\n      case 'actif':\n        return 'livr√©';\n      case 'inactif':\n        return 'en-cours';\n      default:\n        return '';\n    }\n  };\n  const handleUserSelect = userId => {\n    setSelectedUsers(prev => prev.includes(userId) ? prev.filter(id => id !== userId) : [...prev, userId]);\n  };\n  const handleDeleteSelected = async () => {\n    try {\n      // V√©rifier s'il y a des utilisateurs s√©lectionn√©s\n      if (selectedUsers.length === 0) {\n        alert('‚ùå Aucun utilisateur s√©lectionn√©');\n        return;\n      }\n\n      // Demander confirmation avant de supprimer\n      if (!window.confirm(`√ätes-vous s√ªr de vouloir supprimer ${selectedUsers.length} utilisateur(s) ?\n      \n‚ö†Ô∏è ATTENTION: Les utilisateurs seront supprim√©s uniquement de la base de donn√©es Firestore, mais PAS de Firebase Authentication.\nPour une suppression compl√®te, contactez l'administrateur syst√®me.`)) {\n        return;\n      }\n\n      // R√©cup√©rer les utilisateurs s√©lectionn√©s\n      const selectedUsersList = users.filter(user => selectedUsers.includes(user.id));\n      console.log(`üîÑ Tentative de suppression de ${selectedUsers.length} utilisateurs de Firestore`);\n\n      // Supprimer les utilisateurs de Firestore uniquement\n      const deletePromises = selectedUsers.map(userId => deleteDoc(doc(db, 'users', userId)));\n\n      // Attendre que toutes les suppressions soient termin√©es\n      await Promise.all(deletePromises);\n\n      // Mettre √† jour l'√©tat local\n      const updatedUsers = users.filter(user => !selectedUsers.includes(user.id));\n      setUsers(updatedUsers);\n      setSelectedUsers([]);\n\n      // Afficher un message de succ√®s avec un avertissement\n      alert(`\n        ‚úÖ ${selectedUsers.length} utilisateur(s) supprim√©(s) de la base de donn√©es Firestore avec succ√®s.\n        \n        ‚ö†Ô∏è IMPORTANT: Les comptes utilisateurs n'ont PAS √©t√© supprim√©s de Firebase Authentication.\n        Si n√©cessaire, ces comptes devront √™tre supprim√©s manuellement par un administrateur\n        depuis la console Firebase.\n      `.trim());\n    } catch (error) {\n      console.error('‚ùå Erreur lors de la suppression des utilisateurs:', error);\n      setError('Erreur lors de la suppression des utilisateurs');\n      alert('‚ùå Erreur lors de la suppression des utilisateurs');\n    }\n  };\n  const saveAllChanges = async () => {\n    try {\n      setLoading(true);\n      const batch = [];\n\n      // Sauvegarder les modifications d'utilisateurs existants\n      for (const userId in editingUsers) {\n        if (Object.prototype.hasOwnProperty.call(editingUsers, userId)) {\n          const user = editingUsers[userId];\n\n          // Emp√™cher la promotion d'un utilisateur au r√¥le d'Administrateur\n          const adminRole = roles.find(r => r.name === 'Administrateur');\n          if (user.role === 'Administrateur' && adminRole && user.id) {\n            // V√©rifier si l'utilisateur n'est pas d√©j√† dans les permissions d'admin\n            if (!adminRole.permissions.includes(user.id)) {\n              // Si l'utilisateur n'√©tait pas d√©j√† Administrateur, r√©initialiser au r√¥le pr√©c√©dent\n              const originalUser = users.find(u => u.id === userId);\n              if (originalUser && originalUser.role !== 'Administrateur') {\n                user.role = originalUser.role;\n                console.warn(`Tentative non autoris√©e de promotion au r√¥le d'Administrateur pour l'utilisateur ${user.nom || user.email}`);\n                alert(`Le r√¥le \"Administrateur\" ne peut pas √™tre attribu√© via cette interface. L'utilisateur ${user.nom || user.email} conservera son r√¥le ${user.role}.`);\n              }\n            }\n          }\n          if (!user.dateModification) {\n            user.dateModification = new Date().toISOString();\n          }\n          const userRef = doc(db, 'users', userId);\n\n          // Cr√©er un objet avec uniquement les champs modifiables\n          const {\n            id,\n            uid,\n            ...updateData\n          } = user;\n          batch.push(updateDoc(userRef, updateData));\n        }\n      }\n\n      // Ajouter le nouvel utilisateur si pr√©sent\n      let newUserPromise = null;\n      if (newUser) {\n        console.log(\"Pr√©paration de l'ajout d'un nouvel utilisateur:\", newUser);\n\n        // V√©rifier que tous les champs obligatoires sont remplis\n        if (!newUser.email || !newUser.nom) {\n          console.warn(\"Champs obligatoires manquants pour le nouvel utilisateur\");\n          // Ne pas bloquer la sauvegarde si le nouvel utilisateur est incomplet\n          setNewUser(null);\n        } else {\n          // Emp√™cher l'attribution du r√¥le Administrateur √† un nouvel utilisateur\n          if (newUser.role === 'Administrateur') {\n            console.warn(\"Tentative non autoris√©e d'attribution du r√¥le Administrateur √† un nouvel utilisateur\");\n            newUser.role = 'Utilisateur'; // Assigner un r√¥le par d√©faut\n            alert('Le r√¥le \"Administrateur\" ne peut pas √™tre attribu√© via cette interface. Le nouvel utilisateur sera cr√©√© avec le r√¥le \"Utilisateur\".');\n          }\n          newUserPromise = (async () => {\n            try {\n              // Pr√©parer les donn√©es de l'utilisateur avec des valeurs par d√©faut s√ªres\n              const userToSave = {\n                identifiant: newUser.identifiant || '',\n                email: newUser.email || '',\n                nom: newUser.nom || '',\n                role: newUser.role || 'Utilisateur',\n                pole: newUser.pole || '',\n                statut: newUser.statut || 'Actif',\n                permissions: newUser.permissions || []\n              };\n\n              // Appeler notre service pour cr√©er l'utilisateur\n              const result = await createUserWithoutSignOut(userToSave);\n              if (result.success) {\n                console.log(`Nouvel utilisateur ajout√© avec l'ID: ${result.docId}`);\n                return result.docId;\n              } else {\n                throw result.error || new Error('La cr√©ation de l\\'utilisateur a √©chou√©');\n              }\n            } catch (error) {\n              console.error(`Erreur lors de l'ajout du nouvel utilisateur:`, error);\n              throw error;\n            }\n          })();\n        }\n      }\n\n      // Attendre que toutes les op√©rations soient termin√©es\n      const updateResults = await Promise.allSettled(batch);\n      const newUserResults = newUserPromise ? await Promise.allSettled([newUserPromise]) : [];\n      const results = [...updateResults, ...newUserResults];\n\n      // V√©rifier les r√©sultats\n      const fulfilled = results.filter(result => result.status === 'fulfilled').length;\n      const rejected = results.filter(result => result.status === 'rejected').length;\n      console.log(`Op√©rations termin√©es: ${fulfilled} r√©ussies, ${rejected} √©chou√©es`);\n      if (rejected > 0) {\n        console.warn(\"Certaines op√©rations ont √©chou√©. Voir les erreurs ci-dessus.\");\n      }\n\n      // Rafra√Æchir les donn√©es\n      await fetchUsers();\n\n      // R√©initialiser les √©tats\n      setEditingUsers({});\n      setNewUser(null);\n\n      // D√©sactiver le mode √©dition apr√®s sauvegarde r√©ussie\n      setEditMode(false);\n      setSelectedUsers([]);\n      if (rejected > 0) {\n        alert(`Modifications partiellement enregistr√©es. ${rejected} op√©rations ont √©chou√©.`);\n      } else {\n        alert(`Modifications enregistr√©es avec succ√®s. ${Object.keys(editingUsers).length} utilisateur(s) mis √† jour.`);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde:', error);\n      setError('Erreur lors de la sauvegarde');\n      alert('Erreur lors de la sauvegarde des modifications. Veuillez r√©essayer.');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const testFirebaseConnection = async () => {\n    try {\n      // Test minimal de connexion\n      const testDocRef = doc(db, '_test', 'connection');\n      const timestamp = await getDoc(testDocRef);\n      console.log('‚úÖ Connexion Firebase r√©ussie');\n    } catch (error) {\n      console.error('‚ùå Erreur de connexion Firebase:', error);\n    }\n  };\n  console.log('üåç Environnement actuel:', {\n    nodeEnv: process.env.NODE_ENV,\n    isDevelopment: process.env.NODE_ENV === 'development'\n  });\n  const addNewUserRow = () => {\n    // Forcer l'activation du mode √©dition\n    if (!editMode) {\n      setEditMode(true);\n    }\n\n    // Initialiser un nouvel utilisateur temporaire\n    setNewUser({\n      id: `temp-${Date.now()}`,\n      nom: '',\n      email: '',\n      role: roles.length > 0 ? roles[0].name : 'Utilisateur',\n      pole: '',\n      statut: 'Actif',\n      identifiant: '',\n      permissions: []\n    });\n\n    // Forcer la mise √† jour du composant\n    setUpdate(prev => prev + 1);\n\n    // Ajouter un d√©lai pour permettre le rendu\n    setTimeout(() => {\n      const firstInput = document.querySelector('.user-management-table .new-user-row input');\n      if (firstInput) {\n        firstInput.focus();\n      }\n    }, 100);\n  };\n\n  // Modification de la m√©thode de confirmation d'annulation\n  const handleCancelEdit = () => {\n    if (window.confirm(\"√ätes-vous s√ªr de vouloir annuler toutes les modifications ?\")) {\n      setEditingUsers({});\n      setNewUser(null);\n      setSelectedUsers([]);\n      setEditMode(false);\n    }\n  };\n\n  // Fonction pour convertir ID de p√¥le en nom\n  const getPoleNameById = poleId => {\n    if (!poleId) return '-';\n    const pole = poles.find(p => p.id === poleId);\n    return pole ? pole.nom : poleId;\n  };\n\n  // Fonction pour g√©rer le changement de p√¥le\n  const handlePoleChange = pole => {\n    setSelectedPole(pole);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des utilisateurs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n    userRole: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) || '',\n    allowedRoles: ['admin', 'manager'],\n    requiredPermissions: ['users.view'],\n    pageName: PAGES.USER_MANAGEMENT,\n    roles: roles,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Gestion des utilisateurs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky-header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button button-save\",\n              onClick: saveAllChanges,\n              disabled: loading || selectedUsers.length === 0 && !newUser,\n              style: {\n                backgroundColor: '#4CAF50',\n                // Vert\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              title: \"Enregistrer les modifications\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this), \" Enr. \", selectedUsers.length > 0 || newUser ? `(${selectedUsers.length}${newUser ? `+1` : ''})` : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button button-secondary\",\n              onClick: handleCancelEdit,\n              style: {\n                marginLeft: '5px'\n              },\n              disabled: loading,\n              title: \"Annuler les modifications\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 19\n              }, this), \" Annuler\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: addNewUserRow,\n              style: {\n                marginLeft: '5px',\n                backgroundColor: '#FF9800',\n                // Orange\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              disabled: loading,\n              title: \"Ajouter un nouvel utilisateur\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 19\n              }, this), \" Ajouter\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button button-danger\",\n              onClick: handleDeleteSelected,\n              disabled: selectedUsers.length === 0 || loading,\n              style: {\n                marginLeft: '5px',\n                backgroundColor: '#f44336',\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              title: \"Supprimer les utilisateurs s\\xE9lectionn\\xE9s\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 19\n              }, this), \" Sup. (\", selectedUsers.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: toggleEditMode,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 17\n            }, this), \" Modifier\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-search-container\",\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"quick-search-input\",\n            placeholder: \"Recherche rapide...\",\n            value: quickSearch,\n            onChange: e => setQuickSearch(e.target.value),\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pole-filter\",\n            children: /*#__PURE__*/_jsxDEV(PoleFilter, {\n              onPoleChange: handlePoleChange,\n              selectedPole: selectedPole,\n              label: \"Filtrer par p\\xF4le\",\n              className: \"pole-filter-component\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [filteredUsers.length, \" r\\xE9sultat(s) trouv\\xE9(s)\", quickSearch ? ` pour la recherche \"${quickSearch}\"` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: `data-table user-management-table ${editMode ? 'editing' : ''}`,\n          style: {\n            fontSize: '0.8rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '50px'\n                },\n                children: editMode ? 'S√©lection' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"UID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"R\\xF4le\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"P\\xF4le\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Statut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [editMode && newUser && /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"new-user-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newUser.nom || '',\n                  onChange: e => handleNewUserChange('nom', e.target.value),\n                  className: \"inline-edit-input\",\n                  placeholder: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  value: newUser.email || '',\n                  onChange: e => handleNewUserChange('email', e.target.value),\n                  className: \"inline-edit-input\",\n                  placeholder: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newUser.identifiant || '',\n                  onChange: e => handleNewUserChange('identifiant', e.target.value),\n                  className: \"inline-edit-input\",\n                  placeholder: \"Identifiant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: newUser.role || '',\n                  onChange: e => handleNewUserChange('role', e.target.value),\n                  className: \"inline-edit-select\",\n                  title: \"R\\xF4le de l'utilisateur\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"S\\xE9lectionner un r\\xF4le\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 819,\n                    columnNumber: 23\n                  }, this), roles.filter(role => role.name !== 'Administrateur').map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: role.name,\n                    children: role.name\n                  }, role.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(PoleSelector, {\n                  value: newUser.pole || '',\n                  onChange: value => handleNewUserChange('pole', value),\n                  placeholder: \"S\\xE9lectionner un p\\xF4le\",\n                  style: {\n                    width: '100%'\n                  },\n                  showSearch: true,\n                  allowClear: true,\n                  title: \"P\\xF4le de l'utilisateur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: newUser.statut || 'Actif',\n                  onChange: e => handleNewUserChange('statut', e.target.value),\n                  className: \"inline-edit-select\",\n                  title: \"Statut de l'utilisateur\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Actif\",\n                    children: \"Actif\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 846,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Inactif\",\n                    children: \"Inactif\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 847,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 19\n              }, this)]\n            }, newUser.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 17\n            }, this), filteredUsers.map(user => {\n              var _editingUsers, _editingUsers2, _editingUsers3, _roles$find, _editingUsers4;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: selectedUsers.includes(user.id) ? 'selected-row' : '',\n                children: [editMode && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedUsers.includes(user.id),\n                    onChange: () => handleUserSelect(user.id),\n                    title: \"S\\xE9lectionner cet utilisateur\",\n                    \"aria-label\": \"S\\xE9lectionner cet utilisateur\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 864,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 863,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: ((_editingUsers = editingUsers[user.id]) === null || _editingUsers === void 0 ? void 0 : _editingUsers.nom) || user.nom,\n                    onChange: e => handleEditChange(user.id, 'nom', e.target.value),\n                    className: \"inline-edit-input\",\n                    title: \"Nom de l'utilisateur\",\n                    \"aria-label\": \"Modifier le nom de l'utilisateur\",\n                    placeholder: \"Nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 875,\n                    columnNumber: 23\n                  }, this) : user.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 873,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    value: ((_editingUsers2 = editingUsers[user.id]) === null || _editingUsers2 === void 0 ? void 0 : _editingUsers2.email) || user.email,\n                    onChange: e => handleEditChange(user.id, 'email', e.target.value),\n                    className: \"inline-edit-input\",\n                    title: \"Email de l'utilisateur\",\n                    \"aria-label\": \"Modifier l'email de l'utilisateur\",\n                    placeholder: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 890,\n                    columnNumber: 23\n                  }, this) : user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"uid-display\",\n                    children: user.email === 'mickael.volle@inovie.fr' ? 'admin-mickael-volle' : user.identifiant === 'admin' ? 'admin-system' : user.uid || user.identifiant || 'Non disponible'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 905,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"uid-display\",\n                    children: user.email === 'mickael.volle@inovie.fr' ? 'admin-mickael-volle' : user.identifiant === 'admin' ? 'admin-system' : user.uid || user.identifiant || 'Non disponible'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 911,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: ((_editingUsers3 = editingUsers[user.id]) === null || _editingUsers3 === void 0 ? void 0 : _editingUsers3.role) || user.role,\n                    onChange: e => handleEditChange(user.id, 'role', e.target.value),\n                    className: \"inline-edit-select\",\n                    title: \"R\\xF4le de l'utilisateur\",\n                    \"aria-label\": \"Modifier le r\\xF4le de l'utilisateur\",\n                    disabled: user.email === 'mickael.volle@inovie.fr',\n                    children: roles.filter(role => {\n                      // Montrer le r√¥le Administrateur seulement si l'utilisateur l'a d√©j√†\n                      if (role.name === 'Administrateur') {\n                        return user.role === 'Administrateur';\n                      }\n                      return true;\n                    }).map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: role.name,\n                      children: role.name\n                    }, role.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 920,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"role-display\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"role-name\",\n                      children: user.role\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 945,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"role-description\",\n                      children: (_roles$find = roles.find(r => r.name === user.role)) === null || _roles$find === void 0 ? void 0 : _roles$find.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 946,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 944,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 918,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode ? /*#__PURE__*/_jsxDEV(PoleSelector, {\n                    value: ((_editingUsers4 = editingUsers[user.id]) === null || _editingUsers4 === void 0 ? void 0 : _editingUsers4.pole) || user.pole || '',\n                    onChange: value => handleEditChange(user.id, 'pole', value),\n                    placeholder: \"S\\xE9lectionner un p\\xF4le\",\n                    style: {\n                      width: '100%'\n                    },\n                    showSearch: true,\n                    allowClear: true,\n                    title: \"P\\xF4le de l'utilisateur\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 954,\n                    columnNumber: 23\n                  }, this) : getPoleNameById(user.pole)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 952,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingUsers[user.id] && editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: editingUsers[user.id].statut || '',\n                    onChange: e => handleEditChange(user.id, 'statut', e.target.value),\n                    className: \"inline-edit-select\",\n                    title: \"Statut de l'utilisateur\",\n                    \"aria-label\": \"Modifier le statut de l'utilisateur\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Actif\",\n                      children: \"Actif\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 976,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Inactif\",\n                      children: \"Inactif\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 977,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: getStatusClass(user.statut),\n                    children: user.statut || 'Non d√©fini'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 980,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"reset-password-button\",\n                    onClick: () => handleResetPassword(user.email),\n                    title: \"R\\xE9initialiser le mot de passe de l'utilisateur\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-key\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 992,\n                      columnNumber: 25\n                    }, this), \" R\\xE9initialiser mot de passe\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 987,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 19\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 17\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 662,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"TFUdFG+kBNMdzVK9oormPJ+Ed9M=\", false, function () {\n  return [useAuth, usePoles];\n});\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","updateDoc","deleteDoc","doc","getDoc","addDoc","sendPasswordResetEmail","db","auth","PRODUCTION_URL","createUserWithoutSignOut","RoleService","useAuth","ProtectedRoute","PAGES","PoleSelector","usePoles","PoleFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","_s","users","setUsers","roles","setRoles","loading","setLoading","error","setError","editMode","setEditMode","editingUsers","setEditingUsers","newUser","setNewUser","selectedUsers","setSelectedUsers","isAdmin","setIsAdmin","update","setUpdate","quickSearch","setQuickSearch","filteredUsers","setFilteredUsers","selectedPole","setSelectedPole","roleService","getInstance","currentUser","hasPermission","poles","initialize","fetchedRoles","Promise","all","getRoles","fetchUsers","err","checkAdminStatus","results","filter","user","pole","trim","searchTerm","toLowerCase","nom","includes","email","identifiant","role","console","log","hasUsersViewPermission","hasUsersCreatePermission","hasUsersEditPermission","hasUsersDeletePermission","userRole","userPermissions","permissions","canAccessUserManagement","usersCollection","usersSnapshot","usersList","docs","map","data","uid","id","handleResetPassword","adminEmail","resetActionCodeSettings","url","encodeURIComponent","handleCodeInApp","alert","name","code","message","stack","errorMessage","toggleEditMode","initialEditState","forEach","window","confirm","saveAllChanges","then","catch","createDefaultUser","statut","toFullUser","partialUser","handleNewUserChange","field","value","prev","handleAddUser","userDraft","selectedRole","find","r","userToAdd","dateCreation","Date","toISOString","dateModification","userRef","prevUsers","handleEditChange","userId","u","getStatusClass","handleUserSelect","handleDeleteSelected","length","selectedUsersList","deletePromises","updatedUsers","batch","Object","prototype","hasOwnProperty","call","adminRole","originalUser","warn","updateData","push","newUserPromise","userToSave","result","success","docId","Error","updateResults","allSettled","newUserResults","fulfilled","status","rejected","keys","testFirebaseConnection","testDocRef","timestamp","nodeEnv","process","env","NODE_ENV","isDevelopment","addNewUserRow","now","setTimeout","firstInput","document","querySelector","focus","handleCancelEdit","getPoleNameById","poleId","p","handlePoleChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","allowedRoles","requiredPermissions","pageName","USER_MANAGEMENT","onClick","disabled","style","backgroundColor","color","fontWeight","title","marginLeft","marginTop","type","placeholder","onChange","e","target","onPoleChange","label","fontSize","width","display","showSearch","allowClear","_editingUsers","_editingUsers2","_editingUsers3","_roles$find","_editingUsers4","checked","description","_c","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/UserManagement.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { collection, getDocs, updateDoc, deleteDoc, doc, getDoc, addDoc } from 'firebase/firestore';\r\nimport { sendPasswordResetEmail } from 'firebase/auth';\r\nimport { db, auth, PRODUCTION_URL } from '../config/firebase';\r\nimport './UserManagement.css';\r\nimport { createUserWithoutSignOut } from '../services/userService';\r\nimport { RoleService } from '../services/RoleService';\r\nimport { Role } from '../types/roles';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport { PAGES } from '../utils/pageAccessUtils';\r\nimport { roles } from '../services/RoleService';\r\nimport { User as ImportedUser } from '../types/User';\r\nimport { Role as ImportedRole } from '../types/roles';\r\nimport { RolePermissions } from '../utils/permissions';\r\nimport { UserRole } from '../types/roles';\r\nimport PoleSelector from './PoleSelector';\r\nimport { usePoles } from '../services/PoleService';\r\nimport PoleFilter from './PoleFilter';\r\n\r\n// √âtendre l'interface User import√©e\r\ntype User = ImportedUser & {\r\n  dateCreation?: string;\r\n  dateModification?: string;\r\n};\r\n\r\nconst UserManagement: React.FC = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editingUsers, setEditingUsers] = useState<{[key: string]: User}>({});\r\n  const [newUser, setNewUser] = useState<User | null>(null);\r\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [update, setUpdate] = useState(0);\r\n  \r\n  // √âtat pour la recherche rapide\r\n  const [quickSearch, setQuickSearch] = useState<string>('');\r\n  const [filteredUsers, setFilteredUsers] = useState<User[]>([]);\r\n\r\n  // Ajouter un √©tat pour le filtre par p√¥le\r\n  const [selectedPole, setSelectedPole] = useState<string>('');\r\n\r\n  const roleService = RoleService.getInstance();\r\n  const { currentUser, hasPermission } = useAuth();\r\n  const { poles } = usePoles();\r\n\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      try {\r\n        const [fetchedRoles] = await Promise.all([\r\n          roleService.getRoles(),\r\n          fetchUsers()\r\n        ]);\r\n        setRoles(fetchedRoles);\r\n      } catch (err) {\r\n        setError('Erreur lors de l\\'initialisation');\r\n      }\r\n    };\r\n\r\n    initialize();\r\n    checkAdminStatus();\r\n  }, []);\r\n  \r\n  // Initialiser les utilisateurs filtr√©s au chargement\r\n  useEffect(() => {\r\n    setFilteredUsers(users);\r\n  }, [users]);\r\n\r\n  // Effet pour filtrer les utilisateurs en fonction de la recherche rapide et du p√¥le s√©lectionn√©\r\n  useEffect(() => {\r\n    let results = users;\r\n\r\n    // Filtrer par p√¥le si un p√¥le est s√©lectionn√©\r\n    if (selectedPole) {\r\n      results = results.filter(user => user.pole === selectedPole);\r\n    }\r\n\r\n    // Ensuite, filtrer par recherche rapide\r\n    if (quickSearch.trim()) {\r\n      const searchTerm = quickSearch.toLowerCase().trim();\r\n      results = results.filter(user => {\r\n        return (\r\n          (user.nom || '').toLowerCase().includes(searchTerm) ||\r\n          (user.email || '').toLowerCase().includes(searchTerm) ||\r\n          (user.identifiant || '').toLowerCase().includes(searchTerm) ||\r\n          (user.role || '').toLowerCase().includes(searchTerm) ||\r\n          (user.pole || '').toLowerCase().includes(searchTerm)\r\n        );\r\n      });\r\n    }\r\n\r\n    setFilteredUsers(results);\r\n  }, [quickSearch, users, selectedPole]);\r\n\r\n  useEffect(() => {\r\n    console.log('üîê Permissions de l\\'utilisateur courant:', {\r\n      user: currentUser,\r\n      hasUsersViewPermission: hasPermission('users.view'),\r\n      hasUsersCreatePermission: hasPermission('users.create'),\r\n      hasUsersEditPermission: hasPermission('users.edit'),\r\n      hasUsersDeletePermission: hasPermission('users.delete'),\r\n      userRole: currentUser?.role,\r\n      userPermissions: currentUser?.permissions\r\n    });\r\n\r\n    // V√©rifier si l'utilisateur a acc√®s √† la page de gestion des utilisateurs\r\n    const canAccessUserManagement = \r\n      hasPermission('users.view') || \r\n      currentUser?.role === 'Administrateur';\r\n\r\n    console.log('üö™ Acc√®s √† la gestion des utilisateurs:', canAccessUserManagement);\r\n  }, [currentUser]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const usersCollection = collection(db, 'users');\r\n      const usersSnapshot = await getDocs(usersCollection);\r\n      const usersList = usersSnapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        // S'assurer que l'UID est d√©fini pour tous les utilisateurs\r\n        if (!data.uid && data.identifiant) {\r\n          // Si l'UID n'est pas d√©fini mais que l'identifiant existe, utiliser l'identifiant comme UID\r\n          data.uid = data.identifiant;\r\n        }\r\n        return {\r\n          id: doc.id,\r\n          ...data\r\n        } as User;\r\n      });\r\n      \r\n      setUsers(usersList);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Erreur lors du chargement des utilisateurs');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const checkAdminStatus = () => {\r\n    const currentUser = auth.currentUser;\r\n    setIsAdmin(currentUser?.email === 'mickael.volle@inovie.fr');\r\n  };\r\n\r\n  const handleResetPassword = async (email: string) => {\r\n    console.log('üîê D√©but de handleResetPassword');\r\n    console.log('Email re√ßu:', email);\r\n\r\n    setError(null);\r\n\r\n    try {\r\n        if (!email || email.trim() === '') {\r\n            console.error('‚ùå Email invalide');\r\n            setError('L\\'email est invalide');\r\n            return;\r\n        }\r\n\r\n        console.log('üîç Tentative d\\'envoi de l\\'email de r√©initialisation');\r\n        \r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser || !currentUser.email) {\r\n            console.error('‚ùå Aucun utilisateur connect√© ou email non disponible');\r\n            setError('Vous devez √™tre connect√© pour effectuer cette action');\r\n            return;\r\n        }\r\n        \r\n        const adminEmail = currentUser.email;\r\n        console.log('üìß Email de l\\'administrateur connect√©:', adminEmail);\r\n        console.log('üìß Email de l\\'utilisateur √† r√©initialiser:', email);\r\n        \r\n        // Configuration personnalis√©e pour l'email de r√©initialisation Firebase\r\n        const resetActionCodeSettings = {\r\n            url: PRODUCTION_URL + `/login?email=${encodeURIComponent(email)}&reset=true`,\r\n            handleCodeInApp: true\r\n        };\r\n        \r\n        console.log('üìù URL de redirection configur√©e:', resetActionCodeSettings.url);\r\n        \r\n        // Envoyer l'email de r√©initialisation Firebase\r\n        await sendPasswordResetEmail(auth, email, resetActionCodeSettings);\r\n        console.log('üìß Email de r√©initialisation Firebase envoy√© avec succ√®s');\r\n        \r\n        console.log('‚úÖ Processus de r√©initialisation de mot de passe termin√© avec succ√®s');\r\n        alert(`\r\n            ‚úÖ R√©initialisation de mot de passe effectu√©e !\r\n            \r\n            Un email de r√©initialisation a √©t√© envoy√© √† ${email}.\r\n            \r\n            L'utilisateur pourra :\r\n            1. Cliquer sur le lien dans l'email pour d√©finir son mot de passe\r\n            2. Utiliser la fonction \"Mot de passe oubli√©\" sur la page de connexion\r\n            \r\n            ATTENTION : Le lien dans l'email est valable pendant 1 heure seulement.\r\n        `.trim());\r\n    } catch (error: any) {\r\n        console.error('‚ùå ERREUR COMPLETE lors de la r√©initialisation du mot de passe:', error);\r\n        \r\n        console.error('D√©tails de l\\'erreur:', {\r\n            name: error.name,\r\n            code: error.code,\r\n            message: error.message,\r\n            stack: error.stack\r\n        });\r\n        \r\n        let errorMessage = 'Une erreur est survenue';\r\n        switch (error.code) {\r\n            case 'auth/invalid-email':\r\n                errorMessage = 'Format d\\'email invalide';\r\n                break;\r\n            case 'auth/user-not-found':\r\n                errorMessage = 'Aucun utilisateur trouv√© avec cet email';\r\n                break;\r\n            case 'auth/missing-email':\r\n                errorMessage = 'Aucun email n\\'a √©t√© fourni';\r\n                break;\r\n            case 'auth/too-many-requests':\r\n                errorMessage = 'Trop de tentatives. Veuillez r√©essayer plus tard.';\r\n                break;\r\n            default:\r\n                errorMessage = `Impossible d'envoyer l'email de r√©initialisation : ${error.message}`;\r\n        }\r\n        \r\n        console.error('‚ùå Message d\\'erreur:', errorMessage);\r\n        setError(errorMessage);\r\n        \r\n        alert(errorMessage);\r\n    }\r\n};\r\n\r\n  const toggleEditMode = () => {\r\n    if (!editMode) {\r\n      // Si on entre en mode √©dition, initialiser l'√©tat d'√©dition avec les utilisateurs actuels\r\n      console.log(\"Entr√©e en mode √©dition\");\r\n      const initialEditState: {[key: string]: User} = {};\r\n      users.forEach(user => {\r\n        initialEditState[user.id!] = {...user};\r\n      });\r\n      setEditingUsers(initialEditState);\r\n      setNewUser(null);\r\n      // Activer le mode √©dition\r\n      setEditMode(true);\r\n    } else {\r\n      // Si on quitte le mode √©dition, demander confirmation\r\n      if (window.confirm(\"Voulez-vous enregistrer les modifications ?\")) {\r\n        console.log(\"Sauvegarde des modifications avant de quitter le mode √©dition\");\r\n        // Sauvegarder les modifications et quitter le mode √©dition apr√®s la sauvegarde\r\n        saveAllChanges()\r\n          .then(() => {\r\n            // D√©s√©lectionner tout et quitter le mode √©dition\r\n            setSelectedUsers([]);\r\n            setNewUser(null);\r\n            setEditMode(false);\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Erreur lors de la sauvegarde:\", error);\r\n            // Laisser l'utilisateur en mode √©dition en cas d'erreur\r\n            alert(\"Une erreur est survenue lors de la sauvegarde. Veuillez r√©essayer.\");\r\n          });\r\n      } else {\r\n        console.log(\"Annulation des modifications et sortie du mode √©dition\");\r\n        // Annuler les modifications et quitter le mode √©dition\r\n        setEditingUsers({});\r\n        setNewUser(null);\r\n        setSelectedUsers([]);\r\n        setEditMode(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fonction utilitaire pour cr√©er un utilisateur par d√©faut\r\n  const createDefaultUser = (): User => ({\r\n    identifiant: '',\r\n    email: '',\r\n    nom: '',\r\n    role: 'Utilisateur',\r\n    pole: '',\r\n    statut: 'Actif',\r\n    permissions: []\r\n  });\r\n\r\n  // Fonction pour convertir un objet partiel en User complet\r\n  const toFullUser = (partialUser: Partial<User> | null | undefined): User => {\r\n    if (!partialUser) {\r\n      return createDefaultUser();\r\n    }\r\n\r\n    return {\r\n      ...createDefaultUser(),\r\n      ...partialUser,\r\n      nom: partialUser.nom || '',\r\n      email: partialUser.email || '',\r\n      role: partialUser.role || 'Utilisateur',\r\n      pole: partialUser.pole || '',\r\n      statut: partialUser.statut || 'Actif',\r\n      identifiant: partialUser.identifiant || '',\r\n      permissions: partialUser.permissions || []\r\n    };\r\n  };\r\n\r\n  // Modifier handleNewUserChange pour utiliser toFullUser\r\n  const handleNewUserChange = (field: keyof User, value: string) => {\r\n    setNewUser(prev => {\r\n      const currentUser = toFullUser(prev);\r\n      return {\r\n        ...currentUser,\r\n        [field]: value\r\n      };\r\n    });\r\n  };\r\n\r\n  // Modifier handleAddUser pour g√©rer les types\r\n  const handleAddUser = async () => {\r\n    // V√©rifier que newUser n'est pas null\r\n    if (!newUser) {\r\n      console.error('Aucun nouvel utilisateur √† ajouter');\r\n      return;\r\n    }\r\n\r\n    // Convertir le nouvel utilisateur en objet User complet\r\n    const userDraft = toFullUser(newUser);\r\n\r\n    try {\r\n      // V√©rifier que les champs requis sont remplis\r\n      if (!userDraft.nom || !userDraft.email || !userDraft.role) {\r\n        console.error('Tous les champs requis doivent √™tre remplis');\r\n        return;\r\n      }\r\n\r\n      // Trouver le r√¥le s√©lectionn√© et ses permissions\r\n      const selectedRole = roles.find(r => r.name === userDraft.role);\r\n      if (!selectedRole) {\r\n        console.error('R√¥le non trouv√©');\r\n        return;\r\n      }\r\n\r\n      // Cr√©er l'utilisateur avec les permissions du r√¥le\r\n      const userToAdd: User = {\r\n        ...userDraft,\r\n        permissions: selectedRole.permissions,\r\n        dateCreation: new Date().toISOString(),\r\n        dateModification: new Date().toISOString()\r\n      };\r\n\r\n      // Ajouter l'utilisateur √† Firestore\r\n      const userRef = await addDoc(collection(db, 'users'), userToAdd);\r\n\r\n      // R√©initialiser le formulaire\r\n      setNewUser(null);\r\n      setUsers(prevUsers => [...prevUsers, { ...userToAdd, id: userRef.id }]);\r\n\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'ajout de l\\'utilisateur:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditChange = async (userId: string, field: keyof User, value: string) => {\r\n    if (!userId) return;\r\n    \r\n    setEditingUsers(prev => {\r\n      const currentUser = prev[userId] || { ...users.find(u => u.id === userId) || {} };\r\n      \r\n      // Si le champ modifi√© est le r√¥le, r√©cup√©rer les permissions associ√©es\r\n      if (field === 'role') {\r\n        const selectedRole = roles.find(r => r.name === value);\r\n        return {\r\n          ...prev,\r\n          [userId]: {\r\n            ...currentUser,\r\n            [field]: value,\r\n            permissions: selectedRole?.permissions || []\r\n          }\r\n        };\r\n      }\r\n      \r\n      return {\r\n        ...prev,\r\n        [userId]: {\r\n          ...currentUser,\r\n          [field]: value\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const getStatusClass = (statut: string | undefined) => {\r\n    if (!statut) return '';\r\n    \r\n    switch (statut.toLowerCase()) {\r\n      case 'actif':\r\n        return 'livr√©';\r\n      case 'inactif':\r\n        return 'en-cours';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const handleUserSelect = (userId: string) => {\r\n    setSelectedUsers(prev => \r\n      prev.includes(userId) \r\n        ? prev.filter(id => id !== userId) \r\n        : [...prev, userId]\r\n    );\r\n  };\r\n\r\n  const handleDeleteSelected = async () => {\r\n    try {\r\n      // V√©rifier s'il y a des utilisateurs s√©lectionn√©s\r\n      if (selectedUsers.length === 0) {\r\n        alert('‚ùå Aucun utilisateur s√©lectionn√©');\r\n        return;\r\n      }\r\n      \r\n      // Demander confirmation avant de supprimer\r\n      if (!window.confirm(`√ätes-vous s√ªr de vouloir supprimer ${selectedUsers.length} utilisateur(s) ?\r\n      \r\n‚ö†Ô∏è ATTENTION: Les utilisateurs seront supprim√©s uniquement de la base de donn√©es Firestore, mais PAS de Firebase Authentication.\r\nPour une suppression compl√®te, contactez l'administrateur syst√®me.`)) {\r\n        return;\r\n      }\r\n      \r\n      // R√©cup√©rer les utilisateurs s√©lectionn√©s\r\n      const selectedUsersList = users.filter(user => selectedUsers.includes(user.id!));\r\n      \r\n      console.log(`üîÑ Tentative de suppression de ${selectedUsers.length} utilisateurs de Firestore`);\r\n      \r\n      // Supprimer les utilisateurs de Firestore uniquement\r\n      const deletePromises = selectedUsers.map(userId => \r\n        deleteDoc(doc(db, 'users', userId))\r\n      );\r\n      \r\n      // Attendre que toutes les suppressions soient termin√©es\r\n      await Promise.all(deletePromises);\r\n      \r\n      // Mettre √† jour l'√©tat local\r\n      const updatedUsers = users.filter(user => !selectedUsers.includes(user.id!));\r\n      setUsers(updatedUsers);\r\n      setSelectedUsers([]);\r\n      \r\n      // Afficher un message de succ√®s avec un avertissement\r\n      alert(`\r\n        ‚úÖ ${selectedUsers.length} utilisateur(s) supprim√©(s) de la base de donn√©es Firestore avec succ√®s.\r\n        \r\n        ‚ö†Ô∏è IMPORTANT: Les comptes utilisateurs n'ont PAS √©t√© supprim√©s de Firebase Authentication.\r\n        Si n√©cessaire, ces comptes devront √™tre supprim√©s manuellement par un administrateur\r\n        depuis la console Firebase.\r\n      `.trim());\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Erreur lors de la suppression des utilisateurs:', error);\r\n      setError('Erreur lors de la suppression des utilisateurs');\r\n      alert('‚ùå Erreur lors de la suppression des utilisateurs');\r\n    }\r\n  };\r\n\r\n  const saveAllChanges = async (): Promise<void> => {\r\n    try {\r\n      setLoading(true);\r\n      const batch: Promise<any>[] = [];\r\n\r\n      // Sauvegarder les modifications d'utilisateurs existants\r\n      for (const userId in editingUsers) {\r\n        if (Object.prototype.hasOwnProperty.call(editingUsers, userId)) {\r\n          const user = editingUsers[userId];\r\n          \r\n          // Emp√™cher la promotion d'un utilisateur au r√¥le d'Administrateur\r\n          const adminRole = roles.find(r => r.name === 'Administrateur');\r\n          if (user.role === 'Administrateur' && adminRole && user.id) {\r\n            // V√©rifier si l'utilisateur n'est pas d√©j√† dans les permissions d'admin\r\n            if (!adminRole.permissions.includes(user.id)) {\r\n              // Si l'utilisateur n'√©tait pas d√©j√† Administrateur, r√©initialiser au r√¥le pr√©c√©dent\r\n              const originalUser = users.find(u => u.id === userId);\r\n              if (originalUser && originalUser.role !== 'Administrateur') {\r\n                user.role = originalUser.role;\r\n                console.warn(`Tentative non autoris√©e de promotion au r√¥le d'Administrateur pour l'utilisateur ${user.nom || user.email}`);\r\n                alert(`Le r√¥le \"Administrateur\" ne peut pas √™tre attribu√© via cette interface. L'utilisateur ${user.nom || user.email} conservera son r√¥le ${user.role}.`);\r\n              }\r\n            }\r\n          }\r\n          \r\n          if (!user.dateModification) {\r\n            user.dateModification = new Date().toISOString();\r\n          }\r\n          \r\n          const userRef = doc(db, 'users', userId);\r\n          \r\n          // Cr√©er un objet avec uniquement les champs modifiables\r\n          const { id, uid, ...updateData } = user;\r\n          batch.push(updateDoc(userRef, updateData));\r\n        }\r\n      }\r\n      \r\n      // Ajouter le nouvel utilisateur si pr√©sent\r\n      let newUserPromise: Promise<any> | null = null;\r\n      if (newUser) {\r\n        console.log(\"Pr√©paration de l'ajout d'un nouvel utilisateur:\", newUser);\r\n        \r\n        // V√©rifier que tous les champs obligatoires sont remplis\r\n        if (!newUser.email || !newUser.nom) {\r\n          console.warn(\"Champs obligatoires manquants pour le nouvel utilisateur\");\r\n          // Ne pas bloquer la sauvegarde si le nouvel utilisateur est incomplet\r\n          setNewUser(null);\r\n        } else {\r\n          // Emp√™cher l'attribution du r√¥le Administrateur √† un nouvel utilisateur\r\n          if (newUser.role === 'Administrateur') {\r\n            console.warn(\"Tentative non autoris√©e d'attribution du r√¥le Administrateur √† un nouvel utilisateur\");\r\n            newUser.role = 'Utilisateur'; // Assigner un r√¥le par d√©faut\r\n            alert('Le r√¥le \"Administrateur\" ne peut pas √™tre attribu√© via cette interface. Le nouvel utilisateur sera cr√©√© avec le r√¥le \"Utilisateur\".');\r\n          }\r\n          \r\n          newUserPromise = (async () => {\r\n            try {\r\n              // Pr√©parer les donn√©es de l'utilisateur avec des valeurs par d√©faut s√ªres\r\n              const userToSave: User = {\r\n                identifiant: newUser.identifiant || '',\r\n                email: newUser.email || '',\r\n                nom: newUser.nom || '',\r\n                role: newUser.role || 'Utilisateur',\r\n                pole: newUser.pole || '',\r\n                statut: newUser.statut || 'Actif',\r\n                permissions: newUser.permissions || []\r\n              };\r\n              \r\n              // Appeler notre service pour cr√©er l'utilisateur\r\n              const result = await createUserWithoutSignOut(userToSave);\r\n              \r\n              if (result.success) {\r\n                console.log(`Nouvel utilisateur ajout√© avec l'ID: ${result.docId}`);\r\n                return result.docId;\r\n              } else {\r\n                throw result.error || new Error('La cr√©ation de l\\'utilisateur a √©chou√©');\r\n              }\r\n            } catch (error) {\r\n              console.error(`Erreur lors de l'ajout du nouvel utilisateur:`, error);\r\n              throw error;\r\n            }\r\n          })();\r\n        }\r\n      }\r\n      \r\n      // Attendre que toutes les op√©rations soient termin√©es\r\n      const updateResults = await Promise.allSettled(batch);\r\n      const newUserResults = newUserPromise ? await Promise.allSettled([newUserPromise]) : [];\r\n      const results = [...updateResults, ...newUserResults];\r\n      \r\n      // V√©rifier les r√©sultats\r\n      const fulfilled = results.filter(result => result.status === 'fulfilled').length;\r\n      const rejected = results.filter(result => result.status === 'rejected').length;\r\n      \r\n      console.log(`Op√©rations termin√©es: ${fulfilled} r√©ussies, ${rejected} √©chou√©es`);\r\n      \r\n      if (rejected > 0) {\r\n        console.warn(\"Certaines op√©rations ont √©chou√©. Voir les erreurs ci-dessus.\");\r\n      }\r\n      \r\n      // Rafra√Æchir les donn√©es\r\n      await fetchUsers();\r\n      \r\n      // R√©initialiser les √©tats\r\n      setEditingUsers({});\r\n      setNewUser(null);\r\n      \r\n      // D√©sactiver le mode √©dition apr√®s sauvegarde r√©ussie\r\n      setEditMode(false);\r\n      setSelectedUsers([]);\r\n      \r\n      if (rejected > 0) {\r\n        alert(`Modifications partiellement enregistr√©es. ${rejected} op√©rations ont √©chou√©.`);\r\n      } else {\r\n        alert(`Modifications enregistr√©es avec succ√®s. ${Object.keys(editingUsers).length} utilisateur(s) mis √† jour.`);\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error('Erreur lors de la sauvegarde:', error);\r\n      setError('Erreur lors de la sauvegarde');\r\n      alert('Erreur lors de la sauvegarde des modifications. Veuillez r√©essayer.');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const testFirebaseConnection = async () => {\r\n    try {\r\n        // Test minimal de connexion\r\n        const testDocRef = doc(db, '_test', 'connection');\r\n        const timestamp = await getDoc(testDocRef);\r\n        console.log('‚úÖ Connexion Firebase r√©ussie');\r\n    } catch (error) {\r\n        console.error('‚ùå Erreur de connexion Firebase:', error);\r\n    }\r\n  };\r\n\r\n  console.log('üåç Environnement actuel:', {\r\n    nodeEnv: process.env.NODE_ENV,\r\n    isDevelopment: process.env.NODE_ENV === 'development'\r\n  });\r\n\r\n  const addNewUserRow = () => {\r\n    // Forcer l'activation du mode √©dition\r\n    if (!editMode) {\r\n      setEditMode(true);\r\n    }\r\n\r\n    // Initialiser un nouvel utilisateur temporaire\r\n    setNewUser({\r\n      id: `temp-${Date.now()}`,\r\n      nom: '',\r\n      email: '',\r\n      role: roles.length > 0 ? roles[0].name : 'Utilisateur',\r\n      pole: '',\r\n      statut: 'Actif',\r\n      identifiant: '',\r\n      permissions: []\r\n    });\r\n\r\n    // Forcer la mise √† jour du composant\r\n    setUpdate(prev => prev + 1);\r\n\r\n    // Ajouter un d√©lai pour permettre le rendu\r\n    setTimeout(() => {\r\n      const firstInput = document.querySelector('.user-management-table .new-user-row input') as HTMLInputElement;\r\n      if (firstInput) {\r\n        firstInput.focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  // Modification de la m√©thode de confirmation d'annulation\r\n  const handleCancelEdit = () => {\r\n    if (window.confirm(\"√ätes-vous s√ªr de vouloir annuler toutes les modifications ?\")) {\r\n      setEditingUsers({});\r\n      setNewUser(null);\r\n      setSelectedUsers([]);\r\n      setEditMode(false);\r\n    }\r\n  };\r\n\r\n  // Fonction pour convertir ID de p√¥le en nom\r\n  const getPoleNameById = (poleId: string | undefined): string => {\r\n    if (!poleId) return '-';\r\n    const pole = poles.find(p => p.id === poleId);\r\n    return pole ? pole.nom : poleId;\r\n  };\r\n\r\n  // Fonction pour g√©rer le changement de p√¥le\r\n  const handlePoleChange = (pole: string) => {\r\n    setSelectedPole(pole);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Chargement des utilisateurs...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ProtectedRoute \r\n      userRole={currentUser?.role || ''} \r\n      allowedRoles={['admin', 'manager']} \r\n      requiredPermissions={['users.view']}\r\n      pageName={PAGES.USER_MANAGEMENT}\r\n      roles={roles}\r\n    >\r\n      <div>\r\n        <div className=\"section-header\">\r\n          <h2 className=\"section-title\">Gestion des utilisateurs</h2>\r\n        </div>\r\n\r\n        <div className=\"sticky-header-container\">\r\n          <div className=\"header-actions\">\r\n            {editMode ? (\r\n              <>\r\n                <button \r\n                  className=\"button button-save\" \r\n                  onClick={saveAllChanges}\r\n                  disabled={loading || (selectedUsers.length === 0 && !newUser)}\r\n                  style={{ \r\n                    backgroundColor: '#4CAF50', // Vert\r\n                    color: 'white',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                  title=\"Enregistrer les modifications\"\r\n                >\r\n                  <i className=\"fas fa-save\"></i> Enr. {selectedUsers.length > 0 || newUser ? \r\n                    `(${selectedUsers.length}${newUser ? `+1` : ''})` : \r\n                    ''}\r\n                </button>\r\n                <button \r\n                  className=\"button button-secondary\" \r\n                  onClick={handleCancelEdit}\r\n                  style={{ marginLeft: '5px' }}\r\n                  disabled={loading}\r\n                  title=\"Annuler les modifications\"\r\n                >\r\n                  <i className=\"fas fa-times\"></i> Annuler\r\n                </button>\r\n                <button \r\n                  className=\"button\" \r\n                  onClick={addNewUserRow}\r\n                  style={{ \r\n                    marginLeft: '5px',\r\n                    backgroundColor: '#FF9800', // Orange\r\n                    color: 'white',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                  disabled={loading}\r\n                  title=\"Ajouter un nouvel utilisateur\"\r\n                >\r\n                  <i className=\"fas fa-plus\"></i> Ajouter\r\n                </button>\r\n                <button \r\n                  className=\"button button-danger\" \r\n                  onClick={handleDeleteSelected}\r\n                  disabled={selectedUsers.length === 0 || loading}\r\n                  style={{ \r\n                    marginLeft: '5px',\r\n                    backgroundColor: '#f44336', \r\n                    color: 'white',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                  title=\"Supprimer les utilisateurs s√©lectionn√©s\"\r\n                >\r\n                  <i className=\"fas fa-trash-alt\"></i> Sup. ({selectedUsers.length})\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <button \r\n                className=\"button\" \r\n                onClick={toggleEditMode}\r\n              >\r\n                <i className=\"fas fa-edit\"></i> Modifier\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"quick-search-container\" style={{ marginTop: '10px' }}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"quick-search-input\"\r\n              placeholder=\"Recherche rapide...\"\r\n              value={quickSearch}\r\n              onChange={(e) => setQuickSearch(e.target.value)}\r\n              disabled={loading}\r\n            />\r\n            <div className=\"pole-filter\">\r\n              <PoleFilter\r\n                onPoleChange={handlePoleChange}\r\n                selectedPole={selectedPole}\r\n                label=\"Filtrer par p√¥le\"\r\n                className=\"pole-filter-component\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"users-table-container\">\r\n          <div className=\"results-info\">\r\n            <p>{filteredUsers.length} r√©sultat(s) trouv√©(s){quickSearch ? ` pour la recherche \"${quickSearch}\"` : ''}</p>\r\n          </div>\r\n          <table className={`data-table user-management-table ${editMode ? 'editing' : ''}`} style={{ fontSize: '0.8rem' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{width: '50px'}}>{editMode ? 'S√©lection' : ''}</th>\r\n                <th>Nom</th>\r\n                <th>Email</th>\r\n                <th>UID</th>\r\n                <th>R√¥le</th>\r\n                <th>P√¥le</th>\r\n                <th>Statut</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Afficher d'abord les nouveaux utilisateurs */}\r\n              {editMode && newUser && (\r\n                <tr key={newUser.id} className=\"new-user-row\">\r\n                  <td style={{display: 'none'}}>\r\n                    {/* Cellule masqu√©e pour maintenir l'alignement */}\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newUser.nom || ''}\r\n                      onChange={(e) => handleNewUserChange('nom', e.target.value)}\r\n                      className=\"inline-edit-input\"\r\n                      placeholder=\"Nom\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={newUser.email || ''}\r\n                      onChange={(e) => handleNewUserChange('email', e.target.value)}\r\n                      className=\"inline-edit-input\"\r\n                      placeholder=\"Email\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newUser.identifiant || ''}\r\n                      onChange={(e) => handleNewUserChange('identifiant', e.target.value)}\r\n                      className=\"inline-edit-input\"\r\n                      placeholder=\"Identifiant\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      value={newUser.role || ''}\r\n                      onChange={(e) => handleNewUserChange('role', e.target.value)}\r\n                      className=\"inline-edit-select\"\r\n                      title=\"R√¥le de l'utilisateur\"\r\n                    >\r\n                      <option value=\"\">S√©lectionner un r√¥le</option>\r\n                      {roles\r\n                        .filter(role => role.name !== 'Administrateur')\r\n                        .map(role => (\r\n                          <option key={role.id} value={role.name}>{role.name}</option>\r\n                        ))\r\n                      }\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    <PoleSelector\r\n                      value={newUser.pole || ''}\r\n                      onChange={(value) => handleNewUserChange('pole', value)}\r\n                      placeholder=\"S√©lectionner un p√¥le\"\r\n                      style={{ width: '100%' }}\r\n                      showSearch\r\n                      allowClear\r\n                      title=\"P√¥le de l'utilisateur\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      value={newUser.statut || 'Actif'}\r\n                      onChange={(e) => handleNewUserChange('statut', e.target.value)}\r\n                      className=\"inline-edit-select\"\r\n                      title=\"Statut de l'utilisateur\"\r\n                    >\r\n                      <option value=\"Actif\">Actif</option>\r\n                      <option value=\"Inactif\">Inactif</option>\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    {/* Le bouton de validation individuel a √©t√© supprim√© car il est redondant avec le bouton Enregistrer du haut */}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              \r\n              {/* Ensuite afficher les utilisateurs existants */}\r\n              {filteredUsers.map((user) => (\r\n                <tr \r\n                  key={user.id} \r\n                  className={selectedUsers.includes(user.id!) ? 'selected-row' : ''}\r\n                >\r\n                  {editMode && (\r\n                    <td>\r\n                      <input \r\n                        type=\"checkbox\"\r\n                        checked={selectedUsers.includes(user.id!)}\r\n                        onChange={() => handleUserSelect(user.id!)}\r\n                        title=\"S√©lectionner cet utilisateur\"\r\n                        aria-label=\"S√©lectionner cet utilisateur\"\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  <td>\r\n                    {editMode ? (\r\n                      <input\r\n                        type=\"text\" \r\n                        value={editingUsers[user.id!]?.nom || user.nom}\r\n                        onChange={(e) => handleEditChange(user.id!, 'nom', e.target.value)}\r\n                        className=\"inline-edit-input\"\r\n                        title=\"Nom de l'utilisateur\"\r\n                        aria-label=\"Modifier le nom de l'utilisateur\"\r\n                        placeholder=\"Nom\"\r\n                      />\r\n                    ) : (\r\n                      user.nom\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode ? (\r\n                      <input\r\n                        type=\"email\"\r\n                        value={editingUsers[user.id!]?.email || user.email}\r\n                        onChange={(e) => handleEditChange(user.id!, 'email', e.target.value)}\r\n                        className=\"inline-edit-input\"\r\n                        title=\"Email de l'utilisateur\"\r\n                        aria-label=\"Modifier l'email de l'utilisateur\"\r\n                        placeholder=\"Email\"\r\n                      />\r\n                    ) : (\r\n                      user.email\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode ? (\r\n                      <span className=\"uid-display\">\r\n                        {user.email === 'mickael.volle@inovie.fr' ? 'admin-mickael-volle' : \r\n                         user.identifiant === 'admin' ? 'admin-system' : \r\n                         user.uid || user.identifiant || 'Non disponible'}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"uid-display\">\r\n                        {user.email === 'mickael.volle@inovie.fr' ? 'admin-mickael-volle' : \r\n                         user.identifiant === 'admin' ? 'admin-system' : \r\n                         user.uid || user.identifiant || 'Non disponible'}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode ? (\r\n                      <select\r\n                        value={editingUsers[user.id!]?.role || user.role}\r\n                        onChange={(e) => handleEditChange(user.id!, 'role', e.target.value)}\r\n                        className=\"inline-edit-select\"\r\n                        title=\"R√¥le de l'utilisateur\"\r\n                        aria-label=\"Modifier le r√¥le de l'utilisateur\"\r\n                        disabled={user.email === 'mickael.volle@inovie.fr'}\r\n                      >\r\n                        {roles\r\n                          .filter(role => {\r\n                            // Montrer le r√¥le Administrateur seulement si l'utilisateur l'a d√©j√†\r\n                            if (role.name === 'Administrateur') {\r\n                              return user.role === 'Administrateur';\r\n                            }\r\n                            return true;\r\n                          })\r\n                          .map(role => (\r\n                            <option key={role.id} value={role.name}>\r\n                              {role.name}\r\n                            </option>\r\n                          ))\r\n                        }\r\n                      </select>\r\n                    ) : (\r\n                      <div className=\"role-display\">\r\n                        <span className=\"role-name\">{user.role}</span>\r\n                        <span className=\"role-description\">\r\n                          {roles.find(r => r.name === user.role)?.description}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode ? (\r\n                      <PoleSelector\r\n                        value={editingUsers[user.id!]?.pole || user.pole || ''}\r\n                        onChange={(value) => handleEditChange(user.id!, 'pole', value)}\r\n                        placeholder=\"S√©lectionner un p√¥le\"\r\n                        style={{ width: '100%' }}\r\n                        showSearch\r\n                        allowClear\r\n                        title=\"P√¥le de l'utilisateur\"\r\n                      />\r\n                    ) : (\r\n                      getPoleNameById(user.pole)\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingUsers[user.id!] && editMode ? (\r\n                      <select\r\n                        value={editingUsers[user.id!].statut || ''}\r\n                        onChange={(e) => handleEditChange(user.id!, 'statut', e.target.value)}\r\n                        className=\"inline-edit-select\"\r\n                        title=\"Statut de l'utilisateur\"\r\n                        aria-label=\"Modifier le statut de l'utilisateur\"\r\n                      >\r\n                        <option value=\"Actif\">Actif</option>\r\n                        <option value=\"Inactif\">Inactif</option>\r\n                      </select>\r\n                    ) : (\r\n                      <span className={getStatusClass(user.statut)}>\r\n                        {user.statut || 'Non d√©fini'}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editMode && (\r\n                      <button\r\n                        className=\"reset-password-button\"\r\n                        onClick={() => handleResetPassword(user.email)}\r\n                        title=\"R√©initialiser le mot de passe de l'utilisateur\"\r\n                      >\r\n                        <i className=\"fas fa-key\"></i> R√©initialiser mot de passe\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </ProtectedRoute>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}