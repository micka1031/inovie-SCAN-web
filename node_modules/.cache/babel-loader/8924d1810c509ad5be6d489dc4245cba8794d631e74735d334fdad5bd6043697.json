{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\PoleSelector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Select, Spin } from 'antd';\nimport { usePoles } from '../services/PoleService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n/**\n * Composant de sélection de pôle réutilisable\n */\nconst PoleSelector = ({\n  value,\n  onChange,\n  placeholder = 'Sélectionner un pôle',\n  style,\n  disabled = false,\n  allowClear = true,\n  showSearch = true,\n  className,\n  required = false,\n  filterBySelas = false,\n  currentSelasId = null\n}) => {\n  _s();\n  const {\n    poles,\n    loading,\n    error\n  } = usePoles();\n  const [filteredPoles, setFilteredPoles] = useState([]);\n\n  // Filtrer les pôles par SELAS si nécessaire\n  useEffect(() => {\n    if (filterBySelas && currentSelasId) {\n      setFilteredPoles(poles.filter(pole => pole.selasId === currentSelasId || !pole.selasId));\n    } else {\n      setFilteredPoles(poles);\n    }\n  }, [poles, filterBySelas, currentSelasId]);\n  const handleChange = value => {\n    if (onChange) {\n      onChange(value);\n    }\n  };\n  if (error) {\n    console.error(\"Erreur lors du chargement des pôles:\", error);\n    return /*#__PURE__*/_jsxDEV(Select, {\n      className: className,\n      style: style,\n      disabled: true,\n      placeholder: \"Erreur de chargement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Select, {\n    className: className,\n    value: value,\n    onChange: handleChange,\n    placeholder: placeholder,\n    style: {\n      width: 200,\n      ...style\n    },\n    disabled: disabled || loading,\n    allowClear: allowClear,\n    showSearch: showSearch,\n    filterOption: (input, option) => {\n      var _option$children;\n      return (option === null || option === void 0 ? void 0 : (_option$children = option.children) === null || _option$children === void 0 ? void 0 : _option$children.toString().toLowerCase().indexOf(input.toLowerCase())) >= 0;\n    },\n    notFoundContent: loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 34\n    }, this) : \"Aucun pôle trouvé\",\n    children: filteredPoles.map(pole => /*#__PURE__*/_jsxDEV(Option, {\n      value: pole.id,\n      children: pole.nom\n    }, pole.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(PoleSelector, \"wWj/9+o4A9obAhhI+I6J8R+vT8Y=\", false, function () {\n  return [usePoles];\n});\n_c = PoleSelector;\nexport default PoleSelector;\nvar _c;\n$RefreshReg$(_c, \"PoleSelector\");","map":{"version":3,"names":["React","useEffect","useState","Select","Spin","usePoles","jsxDEV","_jsxDEV","Option","PoleSelector","value","onChange","placeholder","style","disabled","allowClear","showSearch","className","required","filterBySelas","currentSelasId","_s","poles","loading","error","filteredPoles","setFilteredPoles","filter","pole","selasId","handleChange","console","fileName","_jsxFileName","lineNumber","columnNumber","width","filterOption","input","option","_option$children","children","toString","toLowerCase","indexOf","notFoundContent","size","map","id","nom","_c","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/PoleSelector.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Select, Spin } from 'antd';\nimport { usePoles, Pole } from '../services/PoleService';\n\nconst { Option } = Select;\n\ninterface PoleSelectorProps {\n  value?: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  style?: React.CSSProperties;\n  disabled?: boolean;\n  allowClear?: boolean;\n  showSearch?: boolean;\n  className?: string;\n  required?: boolean;\n  filterBySelas?: boolean;\n  currentSelasId?: string | null;\n}\n\n/**\n * Composant de sélection de pôle réutilisable\n */\nconst PoleSelector: React.FC<PoleSelectorProps> = ({\n  value,\n  onChange,\n  placeholder = 'Sélectionner un pôle',\n  style,\n  disabled = false,\n  allowClear = true,\n  showSearch = true,\n  className,\n  required = false,\n  filterBySelas = false,\n  currentSelasId = null\n}) => {\n  const { poles, loading, error } = usePoles();\n  const [filteredPoles, setFilteredPoles] = useState<Pole[]>([]);\n  \n  // Filtrer les pôles par SELAS si nécessaire\n  useEffect(() => {\n    if (filterBySelas && currentSelasId) {\n      setFilteredPoles(poles.filter(pole => \n        pole.selasId === currentSelasId || !pole.selasId\n      ));\n    } else {\n      setFilteredPoles(poles);\n    }\n  }, [poles, filterBySelas, currentSelasId]);\n  \n  const handleChange = (value: string) => {\n    if (onChange) {\n      onChange(value);\n    }\n  };\n  \n  if (error) {\n    console.error(\"Erreur lors du chargement des pôles:\", error);\n    return (\n      <Select\n        className={className}\n        style={style}\n        disabled={true}\n        placeholder=\"Erreur de chargement\"\n      />\n    );\n  }\n  \n  return (\n    <Select\n      className={className}\n      value={value}\n      onChange={handleChange}\n      placeholder={placeholder}\n      style={{ width: 200, ...style }}\n      disabled={disabled || loading}\n      allowClear={allowClear}\n      showSearch={showSearch}\n      filterOption={(input, option) =>\n        option?.children?.toString().toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n      notFoundContent={loading ? <Spin size=\"small\" /> : \"Aucun pôle trouvé\"}\n    >\n      {filteredPoles.map(pole => (\n        <Option key={pole.id} value={pole.id}>\n          {pole.nom}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n\nexport default PoleSelector; \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}