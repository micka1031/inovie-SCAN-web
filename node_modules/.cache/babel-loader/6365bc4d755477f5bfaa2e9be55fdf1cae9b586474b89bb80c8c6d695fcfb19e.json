{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\MapView.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { db } from '../config/firebase';\nimport { collection, getDocs, onSnapshot } from 'firebase/firestore';\nimport { MapContainer, TileLayer, Marker, Popup, LayerGroup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './MapView.css';\nimport 'leaflet.markercluster';\nimport './MarkerCluster.css';\nimport './MarkerCluster.Default.css';\n// Renommer les imports pour éviter les conflits avec les interfaces locales\n// import { Site, Tournee, MarkerPreference } from '../types';\n\n// Fix pour les icônes Leaflet\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\n\n// Correction pour les icônes Leaflet\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Définir des icônes spécifiques\nconst siteIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nconst departIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nconst arrivalIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Définir des icônes spécifiques pour chaque type de site\nconst laboratoireIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-laboratoire'\n});\nconst cliniqueIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-clinique'\n});\nconst plateauIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-plateau'\n});\nconst collecteIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-collecte'\n});\nconst etablissementIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-etablissement'\n});\nconst ehpadIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-ehpad'\n});\nconst veterinaireIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-veterinaire'\n});\n\n// Types de sites disponibles\nconst SITE_TYPES = ['Laboratoire', 'Clinique', 'Plateau technique', 'Point de collecte', 'Etablissement de sant�', 'Ehpad', 'V�t�rinaire'];\n\n// P�les disponibles\nconst POLES = ['Nord', 'Sud', 'Est', 'Ouest', 'Centre'];\n\n// Fonction pour normaliser les types de sites\nconst normalizeType = type => {\n  if (!type) return '';\n  const normalized = type.toLowerCase().trim();\n\n  // Normaliser les types courants avec des correspondances plus pr�cises\n  const typeMap = {\n    'labo': 'laboratoire',\n    'laboratoire': 'laboratoire',\n    'plateau': 'plateau technique',\n    'plateau technique': 'plateau technique',\n    'clinique': 'clinique',\n    'collect': 'point de collecte',\n    'point de collecte': 'point de collecte',\n    'etablissement': 'etablissement de sant�',\n    '�tablissement': 'etablissement de sant�',\n    'etablissement de sant�': 'etablissement de sant�',\n    '�tablissement de sant�': 'etablissement de sant�',\n    'ehpad': 'ehpad',\n    'veterinaire': 'veterinaire',\n    'v�t�rinaire': 'veterinaire'\n  };\n\n  // Recherche de correspondance exacte ou partielle\n  for (const [key, value] of Object.entries(typeMap)) {\n    if (normalized === key || normalized.includes(key)) {\n      return value;\n    }\n  }\n  return normalized;\n};\n\n// Fonction pour obtenir l'ic�ne par d�faut en fonction du type de site\nconst getDefaultIconForSiteType = type => {\n  if (!type) return siteIcon;\n\n  // Normaliser le type pour la comparaison\n  const normalizedType = normalizeType(type);\n\n  // Retourner l'ic�ne correspondante\n  if (normalizedType === 'laboratoire') {\n    return laboratoireIcon;\n  } else if (normalizedType === 'clinique') {\n    return cliniqueIcon;\n  } else if (normalizedType === 'plateau technique') {\n    return plateauIcon;\n  } else if (normalizedType === 'point de collecte') {\n    return collecteIcon;\n  } else if (normalizedType === 'etablissement de sant�') {\n    return etablissementIcon;\n  } else if (normalizedType === 'ehpad') {\n    return ehpadIcon;\n  } else if (normalizedType === 'veterinaire') {\n    return veterinaireIcon;\n  }\n\n  // Par d�faut, retourner l'ic�ne g�n�rique\n  return siteIcon;\n};\n// Composant pour ajouter le contr�le plein �cran personnalis�\nconst FullscreenControl = () => {\n  _s();\n  const map = useMap();\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  useEffect(() => {\n    // Cr�er un contr�le personnalis�\n    const FullscreenControl = L.Control.extend({\n      options: {\n        position: 'topleft'\n      },\n      onAdd: function () {\n        const container = L.DomUtil.create('div', 'leaflet-bar leaflet-control');\n        const button = L.DomUtil.create('a', 'leaflet-control-fullscreen', container);\n        button.innerHTML = '<i class=\"fas fa-expand\"></i>'; // Utiliser une ic�ne FontAwesome\n        button.href = '#';\n        button.title = 'Afficher en plein �cran';\n        button.setAttribute('role', 'button');\n        button.setAttribute('aria-label', 'Afficher en plein �cran');\n        L.DomEvent.on(button, 'click', function (e) {\n          L.DomEvent.preventDefault(e);\n          const mapContainer = map.getContainer();\n          if (!document.fullscreenElement) {\n            if (mapContainer.requestFullscreen) {\n              mapContainer.requestFullscreen();\n              button.innerHTML = '<i class=\"fas fa-compress\"></i>'; // Ic�ne de r�duction\n              button.title = 'Quitter le plein �cran';\n              setIsFullscreen(true);\n            }\n          } else {\n            if (document.exitFullscreen) {\n              document.exitFullscreen();\n              button.innerHTML = '<i class=\"fas fa-expand\"></i>'; // Ic�ne d'agrandissement\n              button.title = 'Afficher en plein �cran';\n              setIsFullscreen(false);\n            }\n          }\n        });\n\n        // �couter les changements d'�tat du plein �cran\n        const handleFullscreenChange = () => {\n          if (!document.fullscreenElement && isFullscreen) {\n            button.innerHTML = '<i class=\"fas fa-expand\"></i>';\n            button.title = 'Afficher en plein �cran';\n            setIsFullscreen(false);\n          }\n        };\n        document.addEventListener('fullscreenchange', handleFullscreenChange);\n        return container;\n      }\n    });\n\n    // Ajouter le contr�le � la carte\n    const fullscreenControl = new FullscreenControl();\n    map.addControl(fullscreenControl);\n    return () => {\n      map.removeControl(fullscreenControl);\n      document.removeEventListener('fullscreenchange', () => {});\n    };\n  }, [map, isFullscreen]);\n  return null;\n};\n\n// Composant pour afficher tous les sites\n_s(FullscreenControl, \"SKRKY4UoGlDpH/mxrusshgxN7pM=\", false, function () {\n  return [useMap];\n});\n_c = FullscreenControl;\nconst AllSitesLayer = ({\n  sites,\n  icon,\n  getIconForSiteType,\n  showLabels,\n  showGeneratedCoordinates\n}) => {\n  _s2();\n  const map = useMap();\n  const layerRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    // Cr�er un nouveau LayerGroup si n�cessaire\n    if (!layerRef.current) {\n      layerRef.current = L.layerGroup();\n\n      // Ajouter le LayerGroup �  la carte si la couche est visible\n      if (isVisible) {\n        layerRef.current.addTo(map);\n      }\n    } else {\n      // Sinon, vider le LayerGroup existant\n      layerRef.current.clearLayers();\n\n      // Ajouter ou retirer le LayerGroup de la carte selon la visibilit�\n      if (isVisible && !map.hasLayer(layerRef.current)) {\n        map.addLayer(layerRef.current);\n      } else if (!isVisible && map.hasLayer(layerRef.current)) {\n        map.removeLayer(layerRef.current);\n      }\n    }\n\n    // Ajouter les marqueurs au LayerGroup seulement si la couche est visible\n    if (isVisible) {\n      sites.forEach(site => {\n        // V�rifier si les coordonn�es sont g�n�r�es\n        const isGeneratedCoords = site.hasOwnProperty('isGeneratedCoordinates') && site.isGeneratedCoordinates === true;\n        if (!showGeneratedCoordinates && isGeneratedCoords) {\n          return;\n        }\n        if (site.latitude && site.longitude) {\n          var _layerRef$current;\n          const siteIcon = getIconForSiteType(site.type || '');\n          const marker = L.marker([site.latitude, site.longitude], {\n            icon: siteIcon\n          }).bindPopup(`\n              <div class=\"site-popup\">\n                <h3>${site.nom}</h3>\n                <p><strong>Type:</strong> ${site.type}</p>\n                <p><strong>Adresse:</strong> ${site.adresse}</p>\n                <p><strong>P�le:</strong> ${site.pole || 'Non d�fini'}</p>\n                ${isGeneratedCoords ? '<p class=\"warning\">Coordonn�es g�n�r�es automatiquement</p>' : ''}\n              </div>\n            `);\n          if (showLabels) {\n            marker.bindTooltip(site.nom, {\n              permanent: true,\n              direction: 'top',\n              className: 'site-label'\n            });\n          }\n          (_layerRef$current = layerRef.current) === null || _layerRef$current === void 0 ? void 0 : _layerRef$current.addLayer(marker);\n        }\n      });\n    }\n\n    // Nettoyer le LayerGroup lors du d�montage du composant\n    return () => {\n      if (layerRef.current) {\n        if (map.hasLayer(layerRef.current)) {\n          map.removeLayer(layerRef.current);\n        }\n        layerRef.current = null;\n      }\n    };\n  }, [sites, icon, getIconForSiteType, showLabels, showGeneratedCoordinates, map, isVisible]);\n\n  // G�rer l'affichage/masquage de la couche en fonction du contr�le des couches\n  useEffect(() => {\n    const handleLayerControlChange = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          var _nextSibling, _nextSibling$textCont;\n          if (((_nextSibling = checkbox.nextSibling) === null || _nextSibling === void 0 ? void 0 : (_nextSibling$textCont = _nextSibling.textContent) === null || _nextSibling$textCont === void 0 ? void 0 : _nextSibling$textCont.trim()) === 'Tous les sites') {\n            // Mettre �  jour l'�tat de visibilit� en fonction de la case �  cocher\n            setIsVisible(checkbox.checked);\n\n            // Ajouter un �couteur d'�v�nements pour les changements futurs\n            checkbox.addEventListener('change', e => {\n              const isChecked = e.target.checked;\n              setIsVisible(isChecked);\n            });\n          }\n        });\n      }\n    };\n\n    // Attendre que le contr�le des couches soit ajout�  la carte\n    const checkLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        handleLayerControlChange();\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(checkLayersControl, 100);\n      }\n    };\n    checkLayersControl();\n\n    // Nettoyer les �couteurs d'�v�nements lors du d�montage du composant\n    return () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          var _nextSibling2, _nextSibling2$textCon;\n          if (((_nextSibling2 = checkbox.nextSibling) === null || _nextSibling2 === void 0 ? void 0 : (_nextSibling2$textCon = _nextSibling2.textContent) === null || _nextSibling2$textCon === void 0 ? void 0 : _nextSibling2$textCon.trim()) === 'Tous les sites') {\n            checkbox.removeEventListener('change', () => {});\n          }\n        });\n      }\n    };\n  }, [map]);\n  return null;\n};\n\n// Composant pour afficher les sites par type\n_s2(AllSitesLayer, \"vmooxdiDgZqnTYIYuP/xRmJvtfc=\", false, function () {\n  return [useMap];\n});\n_c2 = AllSitesLayer;\nconst SiteTypeLayer = ({\n  sites,\n  icon,\n  type,\n  getIconForSiteType,\n  showLabels,\n  showGeneratedCoordinates\n}) => {\n  _s3();\n  const map = useMap();\n  const layerRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    // Cr�er un nouveau LayerGroup si n�cessaire\n    if (!layerRef.current) {\n      layerRef.current = L.layerGroup();\n\n      // Ajouter le LayerGroup �  la carte si la couche est visible\n      if (isVisible) {\n        layerRef.current.addTo(map);\n      }\n    } else {\n      // Sinon, vider le LayerGroup existant\n      layerRef.current.clearLayers();\n\n      // Ajouter ou retirer le LayerGroup de la carte selon la visibilit�\n      if (isVisible && !map.hasLayer(layerRef.current)) {\n        map.addLayer(layerRef.current);\n      } else if (!isVisible && map.hasLayer(layerRef.current)) {\n        map.removeLayer(layerRef.current);\n      }\n    }\n\n    // Ajouter les marqueurs au LayerGroup seulement si la couche est visible\n    if (isVisible) {\n      // Filtrer les sites par type et ajouter les marqueurs au LayerGroup\n      const filteredSites = sites.filter(site => normalizeType(site.type || '') === normalizeType(type));\n      filteredSites.forEach(site => {\n        // V�rifier si les coordonn�es sont g�n�r�es\n        const isGeneratedCoords = site.hasOwnProperty('isGeneratedCoordinates') && site.isGeneratedCoordinates === true;\n        if (!showGeneratedCoordinates && isGeneratedCoords) {\n          return;\n        }\n        if (site.latitude && site.longitude) {\n          var _layerRef$current2;\n          const siteIcon = getIconForSiteType(site.type || '');\n          const marker = L.marker([site.latitude, site.longitude], {\n            icon: siteIcon\n          }).bindPopup(`\n              <div class=\"site-popup\">\n                <h3>${site.nom}</h3>\n                <p><strong>Type:</strong> ${site.type}</p>\n                <p><strong>Adresse:</strong> ${site.adresse}</p>\n                <p><strong>P�le:</strong> ${site.pole || 'Non d�fini'}</p>\n                ${isGeneratedCoords ? '<p class=\"warning\">Coordonn�es g�n�r�es automatiquement</p>' : ''}\n              </div>\n            `);\n          if (showLabels) {\n            marker.bindTooltip(site.nom, {\n              permanent: true,\n              direction: 'top',\n              className: 'site-label'\n            });\n          }\n          (_layerRef$current2 = layerRef.current) === null || _layerRef$current2 === void 0 ? void 0 : _layerRef$current2.addLayer(marker);\n        }\n      });\n    }\n\n    // Nettoyer le LayerGroup lors du d�montage du composant\n    return () => {\n      if (layerRef.current) {\n        if (map.hasLayer(layerRef.current)) {\n          map.removeLayer(layerRef.current);\n        }\n        layerRef.current = null;\n      }\n    };\n  }, [sites, icon, type, getIconForSiteType, showLabels, showGeneratedCoordinates, map, isVisible]);\n\n  // G�rer l'affichage/masquage de la couche en fonction du contr�le des couches\n  useEffect(() => {\n    const handleLayerControlChange = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          var _nextSibling3, _nextSibling3$textCon;\n          if (((_nextSibling3 = checkbox.nextSibling) === null || _nextSibling3 === void 0 ? void 0 : (_nextSibling3$textCon = _nextSibling3.textContent) === null || _nextSibling3$textCon === void 0 ? void 0 : _nextSibling3$textCon.trim()) === type) {\n            // Mettre �  jour l'�tat de visibilit� en fonction de la case �  cocher\n            setIsVisible(checkbox.checked);\n\n            // Ajouter un �couteur d'�v�nements pour les changements futurs\n            checkbox.addEventListener('change', e => {\n              const isChecked = e.target.checked;\n              setIsVisible(isChecked);\n            });\n          }\n        });\n      }\n    };\n\n    // Attendre que le contr�le des couches soit ajout�  la carte\n    const checkLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        handleLayerControlChange();\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(checkLayersControl, 100);\n      }\n    };\n    checkLayersControl();\n\n    // Nettoyer les �couteurs d'�v�nements lors du d�montage du composant\n    return () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          var _nextSibling4, _nextSibling4$textCon;\n          if (((_nextSibling4 = checkbox.nextSibling) === null || _nextSibling4 === void 0 ? void 0 : (_nextSibling4$textCon = _nextSibling4.textContent) === null || _nextSibling4$textCon === void 0 ? void 0 : _nextSibling4$textCon.trim()) === type) {\n            checkbox.removeEventListener('change', () => {});\n          }\n        });\n      }\n    };\n  }, [map, type]);\n  return null;\n};\n\n// Composant pour afficher les sites par p�le\n_s3(SiteTypeLayer, \"vmooxdiDgZqnTYIYuP/xRmJvtfc=\", false, function () {\n  return [useMap];\n});\n_c3 = SiteTypeLayer;\nconst PoleLayer = ({\n  sites,\n  icon,\n  pole,\n  getIconForSiteType,\n  showLabels,\n  showGeneratedCoordinates\n}) => {\n  _s4();\n  const map = useMap();\n  const layerRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    // Cr�er un nouveau LayerGroup si n�cessaire\n    if (!layerRef.current) {\n      layerRef.current = L.layerGroup();\n\n      // Ajouter le LayerGroup �  la carte si la couche est visible\n      if (isVisible) {\n        layerRef.current.addTo(map);\n      }\n    } else {\n      // Sinon, vider le LayerGroup existant\n      layerRef.current.clearLayers();\n\n      // Ajouter ou retirer le LayerGroup de la carte selon la visibilit�\n      if (isVisible && !map.hasLayer(layerRef.current)) {\n        map.addLayer(layerRef.current);\n      } else if (!isVisible && map.hasLayer(layerRef.current)) {\n        map.removeLayer(layerRef.current);\n      }\n    }\n\n    // Ajouter les marqueurs au LayerGroup seulement si la couche est visible\n    if (isVisible) {\n      // Filtrer les sites par p�le et ajouter les marqueurs au LayerGroup\n      const filteredSites = sites.filter(site => site.pole === pole);\n      filteredSites.forEach(site => {\n        // V�rifier si les coordonn�es sont g�n�r�es\n        const isGeneratedCoords = site.hasOwnProperty('isGeneratedCoordinates') && site.isGeneratedCoordinates === true;\n        if (!showGeneratedCoordinates && isGeneratedCoords) {\n          return;\n        }\n        if (site.latitude && site.longitude) {\n          var _layerRef$current3;\n          const siteIcon = getIconForSiteType(site.type || '');\n          const marker = L.marker([site.latitude, site.longitude], {\n            icon: siteIcon\n          }).bindPopup(`\n              <div class=\"site-popup\">\n                <h3>${site.nom}</h3>\n                <p><strong>Type:</strong> ${site.type}</p>\n                <p><strong>Adresse:</strong> ${site.adresse}</p>\n                <p><strong>P�le:</strong> ${site.pole || 'Non d�fini'}</p>\n                ${isGeneratedCoords ? '<p class=\"warning\">Coordonn�es g�n�r�es automatiquement</p>' : ''}\n              </div>\n            `);\n          if (showLabels) {\n            marker.bindTooltip(site.nom, {\n              permanent: true,\n              direction: 'top',\n              className: 'site-label'\n            });\n          }\n          (_layerRef$current3 = layerRef.current) === null || _layerRef$current3 === void 0 ? void 0 : _layerRef$current3.addLayer(marker);\n        }\n      });\n    }\n\n    // Nettoyer le LayerGroup lors du d�montage du composant\n    return () => {\n      if (layerRef.current) {\n        if (map.hasLayer(layerRef.current)) {\n          map.removeLayer(layerRef.current);\n        }\n        layerRef.current = null;\n      }\n    };\n  }, [sites, icon, pole, getIconForSiteType, showLabels, showGeneratedCoordinates, map, isVisible]);\n\n  // G�rer l'affichage/masquage de la couche en fonction du contr�le des couches\n  useEffect(() => {\n    const handleLayerControlChange = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          var _nextSibling5, _nextSibling5$textCon;\n          if (((_nextSibling5 = checkbox.nextSibling) === null || _nextSibling5 === void 0 ? void 0 : (_nextSibling5$textCon = _nextSibling5.textContent) === null || _nextSibling5$textCon === void 0 ? void 0 : _nextSibling5$textCon.trim()) === `P�le ${pole}`) {\n            // Mettre �  jour l'�tat de visibilit� en fonction de la case �  cocher\n            setIsVisible(checkbox.checked);\n\n            // Ajouter un �couteur d'�v�nements pour les changements futurs\n            checkbox.addEventListener('change', e => {\n              const isChecked = e.target.checked;\n              setIsVisible(isChecked);\n            });\n          }\n        });\n      }\n    };\n\n    // Attendre que le contr�le des couches soit ajout�  la carte\n    const checkLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        handleLayerControlChange();\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(checkLayersControl, 100);\n      }\n    };\n    checkLayersControl();\n\n    // Nettoyer les �couteurs d'�v�nements lors du d�montage du composant\n    return () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          var _nextSibling6, _nextSibling6$textCon;\n          if (((_nextSibling6 = checkbox.nextSibling) === null || _nextSibling6 === void 0 ? void 0 : (_nextSibling6$textCon = _nextSibling6.textContent) === null || _nextSibling6$textCon === void 0 ? void 0 : _nextSibling6$textCon.trim()) === `P�le ${pole}`) {\n            checkbox.removeEventListener('change', () => {});\n          }\n        });\n      }\n    };\n  }, [map, pole]);\n  return null;\n};\n\n// Composant pour afficher les coursiers\n_s4(PoleLayer, \"vmooxdiDgZqnTYIYuP/xRmJvtfc=\", false, function () {\n  return [useMap];\n});\n_c4 = PoleLayer;\nconst CouriersLayer = ({\n  courierLocations,\n  departIcon,\n  arrivalIcon,\n  formatDate\n}) => {\n  _s5();\n  const map = useMap();\n  const layerRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    // Cr�er un nouveau LayerGroup si n�cessaire\n    if (!layerRef.current) {\n      layerRef.current = L.layerGroup();\n\n      // Ajouter le LayerGroup �  la carte si la couche est visible\n      if (isVisible) {\n        layerRef.current.addTo(map);\n      }\n    } else {\n      // Sinon, vider le LayerGroup existant\n      layerRef.current.clearLayers();\n\n      // Ajouter ou retirer le LayerGroup de la carte selon la visibilit�\n      if (isVisible && !map.hasLayer(layerRef.current)) {\n        map.addLayer(layerRef.current);\n      } else if (!isVisible && map.hasLayer(layerRef.current)) {\n        map.removeLayer(layerRef.current);\n      }\n    }\n\n    // Ajouter les marqueurs des coursiers au LayerGroup seulement si la couche est visible\n    if (isVisible) {\n      courierLocations.forEach(courier => {\n        var _layerRef$current4;\n        const icon = courier.isArrival ? arrivalIcon : departIcon;\n        const marker = L.marker([courier.latitude, courier.longitude], {\n          icon\n        }).bindPopup(`\n            <div class=\"courier-popup\">\n              <h3>${courier.nom}</h3>\n              <p><strong>Tourn�e:</strong> ${courier.tourneeName}</p>\n              <p><strong>Dernier scan:</strong> ${formatDate(courier.lastScan)}</p>\n              <p><strong>Site:</strong> ${courier.siteName}</p>\n              <p><strong>Statut:</strong> ${courier.isArrival ? 'Arriv�e' : 'D�part'}</p>\n            </div>\n          `);\n        (_layerRef$current4 = layerRef.current) === null || _layerRef$current4 === void 0 ? void 0 : _layerRef$current4.addLayer(marker);\n      });\n    }\n\n    // Nettoyer le LayerGroup lors du d�montage du composant\n    return () => {\n      if (layerRef.current) {\n        if (map.hasLayer(layerRef.current)) {\n          map.removeLayer(layerRef.current);\n        }\n        layerRef.current = null;\n      }\n    };\n  }, [courierLocations, departIcon, arrivalIcon, formatDate, map, isVisible]);\n\n  // G�rer l'affichage/masquage de la couche en fonction du contr�le des couches\n  useEffect(() => {\n    const handleLayerControlChange = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          var _nextSibling7, _nextSibling7$textCon;\n          if (((_nextSibling7 = checkbox.nextSibling) === null || _nextSibling7 === void 0 ? void 0 : (_nextSibling7$textCon = _nextSibling7.textContent) === null || _nextSibling7$textCon === void 0 ? void 0 : _nextSibling7$textCon.trim()) === 'Coursiers') {\n            // Mettre �  jour l'�tat de visibilit� en fonction de la case �  cocher\n            setIsVisible(checkbox.checked);\n\n            // Ajouter un �couteur d'�v�nements pour les changements futurs\n            checkbox.addEventListener('change', e => {\n              const isChecked = e.target.checked;\n              setIsVisible(isChecked);\n            });\n          }\n        });\n      }\n    };\n\n    // Attendre que le contr�le des couches soit ajout�  la carte\n    const checkLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        handleLayerControlChange();\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(checkLayersControl, 100);\n      }\n    };\n    checkLayersControl();\n\n    // Nettoyer les �couteurs d'�v�nements lors du d�montage du composant\n    return () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          var _nextSibling8, _nextSibling8$textCon;\n          if (((_nextSibling8 = checkbox.nextSibling) === null || _nextSibling8 === void 0 ? void 0 : (_nextSibling8$textCon = _nextSibling8.textContent) === null || _nextSibling8$textCon === void 0 ? void 0 : _nextSibling8$textCon.trim()) === 'Coursiers') {\n            checkbox.removeEventListener('change', () => {});\n          }\n        });\n      }\n    };\n  }, [map]);\n  return null;\n};\n\n// Composant pour g�rer les animations des marqueurs\n_s5(CouriersLayer, \"vmooxdiDgZqnTYIYuP/xRmJvtfc=\", false, function () {\n  return [useMap];\n});\n_c5 = CouriersLayer;\nconst AnimatedMarker = ({\n  position,\n  icon,\n  popup,\n  markerId\n}) => {\n  _s6();\n  const markerRef = useRef(null);\n  const map = useMap();\n  useEffect(() => {\n    if (markerRef.current) {\n      const marker = markerRef.current;\n      const currentPos = marker.getLatLng();\n      const targetPos = L.latLng(position[0], position[1]);\n\n      // Animation fluide si le marqueur existe d�j� \n      if (currentPos && !currentPos.equals(targetPos)) {\n        marker.slideTo(targetPos, {\n          duration: 1000,\n          keepAtCenter: false\n        });\n      }\n    }\n  }, [position]);\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: position,\n    icon: icon,\n    ref: markerRef,\n    children: popup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 863,\n    columnNumber: 5\n  }, this);\n};\n\n// Coordonn�es du centre de la France\n_s6(AnimatedMarker, \"UZE0MtsoSo1xW9YFW7Xv+W3EHq4=\", false, function () {\n  return [useMap];\n});\n_c6 = AnimatedMarker;\nconst franceCenter = [46.603354, 1.888334];\n\n// Fonction pour g�n�rer des coordonn�es pour un site sans coordonn�es\nconst generateCoordinates = (site, index) => {\n  // Coordonn�es de base (centre de la France)\n  const baseLatitude = 46.603354;\n  const baseLongitude = 1.888334;\n\n  // Si le site a un code postal, utiliser les deux premiers chiffres pour g�n�rer des coordonn�es\n  if (site.codePostal && site.codePostal.length >= 2) {\n    const departement = parseInt(site.codePostal.substring(0, 2), 10);\n\n    // Carte approximative des d�partements fran�ais (latitude et longitude)\n    // Nous utilisons le num�ro de d�partement pour g�n�rer des coordonn�es approximatives\n    const latOffset = (departement % 10 - 5) * 0.5; // -2.5 �  +2.5 degr�s\n    const lonOffset = (Math.floor(departement / 10) % 10 - 5) * 0.5; // -2.5 �  +2.5 degr�s\n\n    // Ajouter un petit d�calage pour chaque site dans le m�me d�partement\n    const siteOffset = index * 0.01;\n    return [baseLatitude + latOffset + siteOffset, baseLongitude + lonOffset + siteOffset];\n  }\n\n  // Si le site a une ville mais pas de code postal, utiliser la premi�re lettre de la ville\n  if (site.ville) {\n    const firstLetter = site.ville.charAt(0).toUpperCase();\n    const letterCode = firstLetter.charCodeAt(0) - 65; // A=0, B=1, etc.\n\n    // Utiliser le code de la lettre pour g�n�rer des coordonn�es\n    const latOffset = (letterCode % 5 - 2) * 0.5; // -1 �  +1 degr�s\n    const lonOffset = (Math.floor(letterCode / 5) % 5 - 2) * 0.5; // -1 �  +1 degr�s\n\n    // Ajouter un petit d�calage pour chaque site dans la m�me ville\n    const siteOffset = index * 0.01;\n    return [baseLatitude + latOffset + siteOffset, baseLongitude + lonOffset + siteOffset];\n  }\n\n  // Si le site n'a ni code postal ni ville, utiliser un d�calage bas� sur l'index\n  return [baseLatitude + index * 0.01, baseLongitude + index * 0.01];\n};\n\n// Composant pour la l�gende des sites\nconst SiteLegend = () => {\n  _s7();\n  const map = useMap();\n  const [markerPreferences, setMarkerPreferences] = useState([]);\n  const legendControlRef = useRef(null);\n  const updateTimerRef = useRef(null);\n\n  // Utiliser useMemo pour �viter les recalculs inutiles du contenu de la l�gende\n  const legendContent = useMemo(() => {\n    // Utiliser les pr�f�rences de marqueurs si disponibles\n    const legendItems = markerPreferences.length > 0 ? markerPreferences.map(pref => `\n          <div class=\"site-legend-item\">\n            <div class=\"site-legend-color\" style=\"background-color: ${pref.color};\"></div>\n            <div class=\"site-legend-label\">${pref.name}</div>\n          </div>\n        `).join('') : `\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-laboratoire\"></div>\n          <div class=\"site-legend-label\">Laboratoire</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-clinique\"></div>\n          <div class=\"site-legend-label\">Clinique</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-plateau\"></div>\n          <div class=\"site-legend-label\">Plateau technique</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-collecte\"></div>\n          <div class=\"site-legend-label\">Point de collecte</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-etablissement\"></div>\n          <div class=\"site-legend-label\">�tablissement de sant�</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-ehpad\"></div>\n          <div class=\"site-legend-label\">Ehpad</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-veterinaire\"></div>\n          <div class=\"site-legend-label\">V�t�rinaire</div>\n        </div>\n      `;\n    return `\n      ${legendItems}\n      <div class=\"site-legend-item generated\">\n        <div class=\"site-legend-color\" style=\"border: 2px dashed red; opacity: 0.6;\"></div>\n        <div class=\"site-legend-label\">Coordonn�es g�n�r�es</div>\n      </div>\n    `;\n  }, [markerPreferences]);\n  useEffect(() => {\n    // R�cup�rer les pr�f�rences de marqueurs une seule fois\n    const fetchPreferences = async () => {\n      try {\n        const preferencesRef = collection(db, 'markerPreferences');\n        const snapshot = await getDocs(preferencesRef);\n        if (!snapshot.empty) {\n          const preferencesData = snapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          setMarkerPreferences(preferencesData);\n          // Utiliser un niveau de log moins verbeux\n          console.debug(`L�gende: ${preferencesData.length} pr�f�rences de marqueurs charg�es`);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la r�cup�ration des pr�f�rences de marqueurs pour la l�gende:', error);\n      }\n    };\n    fetchPreferences();\n\n    // Cr�er un contr�le personnalis� pour la l�gende une seule fois\n    if (!legendControlRef.current) {\n      const LegendControl = L.Control.extend({\n        options: {\n          position: 'bottomright'\n        },\n        onAdd: function (map) {\n          const div = L.DomUtil.create('div', 'info legend site-legend');\n          div.innerHTML = `\n            <h4>Types de sites</h4>\n            <div class=\"site-legend-items\">Chargement...</div>\n          `;\n          return div;\n        }\n      });\n\n      // Ajouter le contr�le �  la carte une seule fois\n      legendControlRef.current = new LegendControl();\n      map.addControl(legendControlRef.current);\n    }\n\n    // Mettre �  jour le contenu de la l�gende\n    const updateLegendContent = () => {\n      if (!legendControlRef.current || !legendControlRef.current._container) return;\n      const legendContainer = legendControlRef.current._container.querySelector('.site-legend-items');\n      if (!legendContainer) return;\n      legendContainer.innerHTML = legendContent;\n    };\n\n    // Mettre �  jour le contenu initial\n    updateLegendContent();\n\n    // Configurer un �couteur pour les changements dans les pr�f�rences de marqueurs\n    // avec une fr�quence limit�e pour �viter les mises �  jour trop fr�quentes\n    const preferencesRef = collection(db, 'markerPreferences');\n    const unsubscribe = onSnapshot(preferencesRef, snapshot => {\n      // Annuler la mise �  jour pr�c�dente si elle est en attente\n      if (updateTimerRef.current !== null) {\n        clearTimeout(updateTimerRef.current);\n      }\n\n      // Planifier une nouvelle mise �  jour avec un d�lai pour limiter la fr�quence\n      updateTimerRef.current = window.setTimeout(() => {\n        const preferencesData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setMarkerPreferences(preferencesData);\n        // Utiliser un niveau de log moins verbeux et limiter les informations affich�es\n        if (import.meta.env.DEV) {\n          console.debug(`Mise � jour de la l�gende: ${preferencesData.length} pr�f�rences`);\n        }\n        updateTimerRef.current = null;\n      }, 1000); // Attendre 1 seconde avant de mettre �  jour\n    });\n    return () => {\n      unsubscribe();\n      if (updateTimerRef.current !== null) {\n        clearTimeout(updateTimerRef.current);\n      }\n    };\n  }, [map, legendContent]);\n\n  // Nettoyer le contr�le lors du d�montage final du composant\n  useEffect(() => {\n    return () => {\n      if (legendControlRef.current) {\n        map.removeControl(legendControlRef.current);\n        legendControlRef.current = null;\n      }\n    };\n  }, [map]);\n  return null;\n};\n\n// Composant pour les en-t�tes de section dans le contr�le des couches\n_s7(SiteLegend, \"UHdP0hqCktzeqxcLSewwrV4AgLs=\", false, function () {\n  return [useMap];\n});\n_c7 = SiteLegend;\nconst SectionHeader = ({\n  title\n}) => {\n  _s8();\n  const map = useMap();\n  useEffect(() => {\n    // Ajouter un style personnalis� apr�s le rendu du composant\n    const addCustomStyle = () => {\n      const labels = document.querySelectorAll('.leaflet-control-layers-overlays label');\n      labels.forEach(label => {\n        const span = label.querySelector('span');\n        if (span && span.textContent === title) {\n          label.classList.add('layer-section-header');\n          const checkbox = label.querySelector('input[type=\"checkbox\"]');\n          if (checkbox) {\n            checkbox.disabled = true;\n            checkbox.style.display = 'none';\n          }\n        }\n      });\n    };\n\n    // Ex�cuter apr�s un court d�lai pour s'assurer que le DOM est mis �  jour\n    setTimeout(addCustomStyle, 100);\n\n    // Observer les changements dans le contr�le de couches\n    const observer = new MutationObserver(addCustomStyle);\n    const layersControl = document.querySelector('.leaflet-control-layers');\n    if (layersControl) {\n      observer.observe(layersControl, {\n        childList: true,\n        subtree: true\n      });\n    }\n    return () => {\n      observer.disconnect();\n    };\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(LayerGroup, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1126,\n    columnNumber: 10\n  }, this);\n};\n\n// Composant pour ajouter le contr�le des libell�s et des filtres personnalis�s\n_s8(SectionHeader, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c8 = SectionHeader;\nconst MapControls = ({\n  showLabels,\n  setShowLabels,\n  sites,\n  setSiteFilter,\n  currentFilter,\n  showGeneratedCoordinates,\n  setShowGeneratedCoordinates,\n  onZoomToSite\n}) => {\n  _s9();\n  const map = useMap();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtersVisible, setFiltersVisible] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Mettre �  jour les r�sultats de recherche lorsque le terme de recherche change\n  useEffect(() => {\n    if (!searchTerm) {\n      setSearchResults([]);\n      return;\n    }\n    const normalizedSearch = searchTerm.toLowerCase();\n    const results = sites.filter(site => {\n      var _site$nom, _site$adresse, _site$ville, _site$codePostal, _site$type;\n      return ((_site$nom = site.nom) === null || _site$nom === void 0 ? void 0 : _site$nom.toLowerCase().includes(normalizedSearch)) || ((_site$adresse = site.adresse) === null || _site$adresse === void 0 ? void 0 : _site$adresse.toLowerCase().includes(normalizedSearch)) || ((_site$ville = site.ville) === null || _site$ville === void 0 ? void 0 : _site$ville.toLowerCase().includes(normalizedSearch)) || ((_site$codePostal = site.codePostal) === null || _site$codePostal === void 0 ? void 0 : _site$codePostal.includes(normalizedSearch)) || ((_site$type = site.type) === null || _site$type === void 0 ? void 0 : _site$type.toLowerCase().includes(normalizedSearch));\n    }).slice(0, 5); // Limiter �  5 r�sultats\n\n    setSearchResults(results);\n  }, [searchTerm, sites]);\n  useEffect(() => {\n    // Cr�er un contr�le personnalis�\n    const MapControlsControl = L.Control.extend({\n      options: {\n        position: 'topleft'\n      },\n      onAdd: function () {\n        const container = L.DomUtil.create('div', 'leaflet-bar leaflet-control map-custom-controls');\n\n        // Bouton pour activer/d�sactiver les libell�s\n        const labelsButton = L.DomUtil.create('a', 'leaflet-control-labels', container);\n        labelsButton.innerHTML = '<i class=\"fas fa-tag\"></i>';\n        labelsButton.href = '#';\n        labelsButton.title = showLabels ? 'Masquer les libell�s' : 'Afficher les libell�s';\n        labelsButton.setAttribute('role', 'button');\n        labelsButton.setAttribute('aria-label', showLabels ? 'Masquer les libell�s' : 'Afficher les libell�s');\n        if (showLabels) {\n          labelsButton.classList.add('active');\n        }\n        L.DomEvent.on(labelsButton, 'click', function (e) {\n          L.DomEvent.preventDefault(e);\n          setShowLabels(!showLabels);\n          labelsButton.title = !showLabels ? 'Masquer les libell�s' : 'Afficher les libell�s';\n          labelsButton.classList.toggle('active');\n        });\n\n        // Cr�er un conteneur pour les filtres\n        const filtersContainer = L.DomUtil.create('div', 'map-filters-container', container);\n        filtersContainer.style.display = filtersVisible ? 'block' : 'none';\n\n        // Ajouter un titre\n        const filterTitle = L.DomUtil.create('div', 'map-filter-title', filtersContainer);\n        filterTitle.textContent = 'Filtres';\n\n        // Ajouter un champ de recherche\n        const searchContainer = L.DomUtil.create('div', 'map-filter-search', filtersContainer);\n        const searchInput = L.DomUtil.create('input', 'map-filter-search-input', searchContainer);\n        searchInput.type = 'text';\n        searchInput.placeholder = 'Rechercher un site...';\n        searchInput.value = searchTerm;\n\n        // Conteneur pour les r�sultats de recherche\n        const searchResultsContainer = L.DomUtil.create('div', 'map-search-results', filtersContainer);\n        searchResultsContainer.style.display = 'none';\n\n        // Mettre �  jour les r�sultats de recherche\n        const updateSearchResults = () => {\n          searchResultsContainer.innerHTML = '';\n          if (searchResults.length === 0) {\n            if (searchTerm) {\n              searchResultsContainer.innerHTML = '<div class=\"map-search-no-results\">Aucun r�sultat trouv�</div>';\n              searchResultsContainer.style.display = 'block';\n            } else {\n              searchResultsContainer.style.display = 'none';\n            }\n            return;\n          }\n          searchResultsContainer.style.display = 'block';\n          searchResults.forEach(site => {\n            const resultItem = L.DomUtil.create('div', 'map-search-result-item', searchResultsContainer);\n            resultItem.innerHTML = `\n              <div class=\"map-search-result-name\">${site.nom}</div>\n              <div class=\"map-search-result-details\">\n                ${site.type ? `<span>${site.type}</span>` : ''}\n                ${site.ville ? `<span>${site.ville}</span>` : ''}\n              </div>\n            `;\n            L.DomEvent.on(resultItem, 'click', function () {\n              onZoomToSite(site);\n              searchResultsContainer.style.display = 'none';\n              setSearchTerm('');\n              searchInput.value = '';\n            });\n          });\n        };\n\n        // Mettre �  jour les r�sultats initiaux\n        updateSearchResults();\n\n        // Mettre �  jour les r�sultats lorsqu'ils changent\n        const observer = new MutationObserver(() => {\n          updateSearchResults();\n        });\n        L.DomEvent.on(searchInput, 'input', function (e) {\n          setSearchTerm(e.target.value);\n          if (e.target.value) {\n            setSiteFilter(e.target.value);\n          } else {\n            setSiteFilter(null);\n            searchResultsContainer.style.display = 'none';\n          }\n        });\n\n        // Ajouter une option pour afficher/masquer les coordonn�es g�n�r�es\n        const generatedCoordsContainer = L.DomUtil.create('div', 'map-filter-option', filtersContainer);\n        const generatedCoordsCheckbox = L.DomUtil.create('input', '', generatedCoordsContainer);\n        generatedCoordsCheckbox.type = 'checkbox';\n        generatedCoordsCheckbox.id = 'show-generated-coords';\n        generatedCoordsCheckbox.checked = showGeneratedCoordinates;\n        const generatedCoordsLabel = L.DomUtil.create('label', '', generatedCoordsContainer);\n        generatedCoordsLabel.htmlFor = 'show-generated-coords';\n        generatedCoordsLabel.textContent = 'Afficher les coordonn�es g�n�r�es';\n        L.DomEvent.on(generatedCoordsCheckbox, 'change', function (e) {\n          setShowGeneratedCoordinates(e.target.checked);\n        });\n\n        // Bouton pour afficher/masquer les filtres\n        const filtersButton = L.DomUtil.create('a', 'leaflet-control-filters', container);\n        filtersButton.innerHTML = '<i class=\"fas fa-filter\"></i>';\n        filtersButton.href = '#';\n        filtersButton.title = 'Filtres avanc�s';\n        filtersButton.setAttribute('role', 'button');\n        filtersButton.setAttribute('aria-label', 'Filtres avanc�s');\n        if (filtersVisible) {\n          filtersButton.classList.add('active');\n        }\n        L.DomEvent.on(filtersButton, 'click', function (e) {\n          L.DomEvent.preventDefault(e);\n          setFiltersVisible(!filtersVisible);\n          filtersContainer.style.display = filtersVisible ? 'block' : 'none';\n          filtersButton.classList.toggle('active');\n        });\n\n        // Emp�cher la propagation des �v�nements pour �viter que la carte ne se d�place\n        L.DomEvent.disableClickPropagation(container);\n        L.DomEvent.disableScrollPropagation(container);\n        return container;\n      }\n    });\n\n    // Ajouter le contr�le �  la carte\n    const mapControlsControl = new MapControlsControl();\n    map.addControl(mapControlsControl);\n    return () => {\n      map.removeControl(mapControlsControl);\n    };\n  }, [map, showLabels, setShowLabels, sites, setSiteFilter, currentFilter, searchTerm, filtersVisible, showGeneratedCoordinates, setShowGeneratedCoordinates, searchResults, onZoomToSite]);\n  return null;\n};\n\n// Composant pour initialiser les �v�nements des couches\n_s9(MapControls, \"kZ3Hj+fEyGoDR3sT+jChP0eb9+Y=\", false, function () {\n  return [useMap];\n});\n_c9 = MapControls;\nconst LayersEventInitializer = () => {\n  _s10();\n  const map = useMap();\n  useEffect(() => {\n    // Initialiser le contr�le des couches\n    const initLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        // S'assurer que toutes les cases �  cocher sont coch�es par d�faut\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          checkbox.checked = true;\n        });\n\n        // D�clencher un �v�nement change sur chaque case �  cocher pour activer les couches\n        checkboxes.forEach(checkbox => {\n          const event = new Event('change', {\n            bubbles: true\n          });\n          checkbox.dispatchEvent(event);\n        });\n\n        // Ajouter des s�parateurs visuels pour les sections\n        const overlaysContainer = layersControl.querySelector('.leaflet-control-layers-overlays');\n        if (overlaysContainer) {\n          const labels = overlaysContainer.querySelectorAll('label');\n          labels.forEach(label => {\n            var _label$textContent;\n            const text = (_label$textContent = label.textContent) === null || _label$textContent === void 0 ? void 0 : _label$textContent.trim();\n            if (text && text.startsWith('---')) {\n              var _label$parentNode;\n              // Cr�er un �l�ment de s�paration\n              const separator = document.createElement('div');\n              separator.className = 'layer-section-header';\n              separator.innerHTML = `<span>${text.replace(/^---\\s*/, '')}</span>`;\n\n              // Remplacer le label par le s�parateur\n              (_label$parentNode = label.parentNode) === null || _label$parentNode === void 0 ? void 0 : _label$parentNode.replaceChild(separator, label);\n            }\n          });\n        }\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(initLayersControl, 100);\n      }\n    };\n\n    // Attendre que la carte soit charg�e avant d'initialiser le contr�le des couches\n    setTimeout(initLayersControl, 500);\n    return () => {\n      // Nettoyer les �couteurs d'�v�nements si n�cessaire\n    };\n  }, [map]);\n  return null;\n};\n\n// Composant pour corriger manuellement les coordonn�es d'un site\n_s10(LayersEventInitializer, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c10 = LayersEventInitializer;\nconst ManualCoordinatesCorrection = ({\n  sites,\n  onCoordinatesUpdated\n}) => {\n  _s11();\n  const map = useMap();\n  const [isActive, setIsActive] = useState(false);\n  const [selectedSite, setSelectedSite] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const markerRef = useRef(null);\n\n  // Filtrer les sites en fonction du terme de recherche\n  useEffect(() => {\n    if (!searchTerm) {\n      setSearchResults([]);\n      return;\n    }\n    const normalizedSearch = searchTerm.toLowerCase();\n    const results = sites.filter(site => {\n      var _site$nom2, _site$adresse2, _site$ville2, _site$codePostal2;\n      return ((_site$nom2 = site.nom) === null || _site$nom2 === void 0 ? void 0 : _site$nom2.toLowerCase().includes(normalizedSearch)) || ((_site$adresse2 = site.adresse) === null || _site$adresse2 === void 0 ? void 0 : _site$adresse2.toLowerCase().includes(normalizedSearch)) || ((_site$ville2 = site.ville) === null || _site$ville2 === void 0 ? void 0 : _site$ville2.toLowerCase().includes(normalizedSearch)) || ((_site$codePostal2 = site.codePostal) === null || _site$codePostal2 === void 0 ? void 0 : _site$codePostal2.includes(normalizedSearch));\n    }).slice(0, 10); // Limiter �  10 r�sultats\n\n    setSearchResults(results);\n  }, [searchTerm, sites]);\n\n  // Fonction pour s�lectionner un site\n  const selectSite = site => {\n    setSelectedSite(site);\n    setSearchTerm('');\n    setSearchResults([]);\n    if (site.latitude && site.longitude) {\n      // Centrer la carte sur le site\n      map.setView([site.latitude, site.longitude], 15);\n\n      // Cr�er un marqueur d�pla�able\n      if (markerRef.current) {\n        map.removeLayer(markerRef.current);\n      }\n      const marker = L.marker([site.latitude, site.longitude], {\n        draggable: true,\n        icon: L.divIcon({\n          className: 'correction-marker',\n          html: `<div style=\"background-color: red; width: 24px; height: 24px; border-radius: 50%; \ndisplay: flex; justify-content: center; align-items: center; box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\">\n                  <i class=\"fas fa-map-marker-alt\" style=\"color: white; font-size: 14px;\"></i>\n                </div>`,\n          iconSize: [24, 24],\n          iconAnchor: [12, 12]\n        })\n      }).addTo(map);\n\n      // Ajouter un popup avec les informations du site\n      marker.bindPopup(`\n        <div>\n          <strong>${site.nom}</strong><br>\n          ${site.adresse}<br>\n          ${site.codePostal} ${site.ville || ''}\n        </div>\n      `).openPopup();\n\n      // Mettre �  jour les coordonn�es lorsque le marqueur est d�plac�\n      marker.on('dragend', e => {\n        const newLatLng = marker.getLatLng();\n        console.log(`Nouvelles coordonn�es pour ${site.nom}: Lat=${newLatLng.lat}, Lng=${newLatLng.lng}`);\n      });\n      markerRef.current = marker;\n    } else {\n      alert(`Le site \"${site.nom}\" n'a pas de coordonn�es. Veuillez d'abord le g�ocoder.`);\n    }\n  };\n\n  // Fonction pour enregistrer les nouvelles coordonn�es\n  const saveCoordinates = () => {\n    if (selectedSite && markerRef.current) {\n      const newLatLng = markerRef.current.getLatLng();\n      onCoordinatesUpdated(selectedSite.id, newLatLng.lat, newLatLng.lng);\n\n      // Afficher un message de confirmation\n      alert(`Les coordonn�es du site \"${selectedSite.nom}\" ont ét� mises �  jour.`);\n\n      // R�initialiser\n      map.removeLayer(markerRef.current);\n      markerRef.current = null;\n      setSelectedSite(null);\n      setIsActive(false);\n    }\n  };\n\n  // Fonction pour annuler la correction\n  const cancelCorrection = () => {\n    if (markerRef.current) {\n      map.removeLayer(markerRef.current);\n      markerRef.current = null;\n    }\n    setSelectedSite(null);\n    setIsActive(false);\n  };\n  useEffect(() => {\n    // Cr�er un contr�le personnalis�\n    const CorrectionControl = L.Control.extend({\n      options: {\n        position: 'topleft'\n      },\n      onAdd: function () {\n        const container = L.DomUtil.create('div', 'leaflet-bar leaflet-control correction-control');\n        if (!isActive) {\n          // Bouton pour activer la correction\n          const button = L.DomUtil.create('a', 'correction-button', container);\n          button.innerHTML = '<i class=\"fas fa-map-marker-alt\"></i>';\n          button.href = '#';\n          button.title = 'Corriger les coordonn�es d\\'un site';\n          L.DomEvent.on(button, 'click', function (e) {\n            L.DomEvent.preventDefault(e);\n            setIsActive(true);\n          });\n        } else {\n          // Interface de correction\n          const correctionPanel = L.DomUtil.create('div', 'correction-panel', container);\n\n          // Titre\n          const title = L.DomUtil.create('div', 'correction-title', correctionPanel);\n          title.textContent = 'Correction de coordonn�es';\n\n          // Champ de recherche\n          const searchContainer = L.DomUtil.create('div', 'correction-search', correctionPanel);\n          const searchInput = L.DomUtil.create('input', 'correction-search-input', searchContainer);\n          searchInput.type = 'text';\n          searchInput.placeholder = 'Rechercher un site...';\n          searchInput.value = searchTerm;\n          L.DomEvent.on(searchInput, 'input', function (e) {\n            setSearchTerm(e.target.value);\n          });\n\n          // R�sultats de recherche\n          if (searchResults.length > 0) {\n            const resultsContainer = L.DomUtil.create('div', 'correction-results', correctionPanel);\n            searchResults.forEach(site => {\n              const resultItem = L.DomUtil.create('div', 'correction-result-item', resultsContainer);\n              resultItem.textContent = site.nom;\n              L.DomEvent.on(resultItem, 'click', function () {\n                selectSite(site);\n              });\n            });\n          }\n\n          // Site s�lectionn�\n          if (selectedSite) {\n            const selectedContainer = L.DomUtil.create('div', 'correction-selected', correctionPanel);\n            const siteInfo = L.DomUtil.create('div', 'correction-site-info', selectedContainer);\n            siteInfo.innerHTML = `\n              <strong>${selectedSite.nom}</strong><br>\n              ${selectedSite.adresse}<br>\n              ${selectedSite.codePostal} ${selectedSite.ville || ''}\n            `;\n            const instructions = L.DomUtil.create('div', 'correction-instructions', selectedContainer);\n            instructions.textContent = 'D�placez le marqueur rouge � la position correcte, puis cliquez sur \"Enregistrer\".';\n            const buttonsContainer = L.DomUtil.create('div', 'correction-buttons', selectedContainer);\n            const saveButton = L.DomUtil.create('button', 'correction-save-button', buttonsContainer);\n            saveButton.textContent = 'Enregistrer';\n            L.DomEvent.on(saveButton, 'click', function () {\n              saveCoordinates();\n            });\n            const cancelButton = L.DomUtil.create('button', 'correction-cancel-button', buttonsContainer);\n            cancelButton.textContent = 'Annuler';\n            L.DomEvent.on(cancelButton, 'click', function () {\n              cancelCorrection();\n            });\n          }\n\n          // Bouton pour fermer le panneau\n          if (!selectedSite) {\n            const closeButton = L.DomUtil.create('button', 'correction-close-button', correctionPanel);\n            closeButton.textContent = 'Fermer';\n            L.DomEvent.on(closeButton, 'click', function () {\n              setIsActive(false);\n            });\n          }\n        }\n\n        // Emp�cher la propagation des �v�nements pour �viter que la carte ne se d�place\n        L.DomEvent.disableClickPropagation(container);\n        L.DomEvent.disableScrollPropagation(container);\n        return container;\n      }\n    });\n\n    // Ajouter le contr�le �  la carte\n    const correctionControl = new CorrectionControl();\n    map.addControl(correctionControl);\n    return () => {\n      map.removeControl(correctionControl);\n      if (markerRef.current) {\n        map.removeLayer(markerRef.current);\n        markerRef.current = null;\n      }\n    };\n  }, [map, isActive, searchTerm, searchResults, selectedSite, sites, onCoordinatesUpdated]);\n  return null;\n};\n\n// Composant de marqueur m�mo�s�\n_s11(ManualCoordinatesCorrection, \"pJ6e5TZBpOepTaYzD5I3hUGdcSs=\", false, function () {\n  return [useMap];\n});\n_c11 = ManualCoordinatesCorrection;\nconst MemoizedMarker = /*#__PURE__*/_s12(/*#__PURE__*/React.memo(_c12 = _s12(({\n  site,\n  markerPreferences\n}) => {\n  _s12();\n  // R�cup�rer l'ic�ne personnalis�e en fonction des pr�f�rences\n  const siteIcon = useMemo(() => {\n    const normalizedSiteType = normalizeType(site.type);\n    const preference = markerPreferences.find(pref => normalizeType(pref.siteType) === normalizedSiteType);\n    if (preference) {\n      return L.divIcon({\n        className: 'custom-div-icon',\n        html: `\n          <div style=\"background-color: ${preference.color}; \n                      width: 24px; \n                      height: 24px; \n                      border-radius: 50%; \n                      display: flex; \n                      justify-content: center; \n                      align-items: center; \n                      box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\">\n            <i class=\"fas ${getIconClassForType(preference.icon)}\" \n               style=\"color: white; font-size: 14px;\"></i>\n          </div>\n        `,\n        iconSize: [24, 24],\n        iconAnchor: [12, 12]\n      });\n    }\n    return getDefaultIconForSiteType(site.type);\n  }, [site.type, markerPreferences]);\n  if (!site.latitude || !site.longitude) return null;\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: [site.latitude, site.longitude],\n    icon: siteIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: site.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1660,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1661,\n          columnNumber: 11\n        }, this), site.adresse, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1663,\n          columnNumber: 11\n        }, this), site.ville, \" \", site.codePostal, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1665,\n          columnNumber: 11\n        }, this), \"Type: \", site.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1658,\n      columnNumber: 7\n    }, this)\n  }, site.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1653,\n    columnNumber: 5\n  }, this);\n}, \"1C96L63TzPfcVLt9uiyNTwBUmDs=\"), (prevProps, nextProps) => {\n  // Comparaison personnalis�e pour �viter les re-rendus inutiles\n  return prevProps.site.id === nextProps.site.id && prevProps.site.latitude === nextProps.site.latitude && prevProps.site.longitude === nextProps.site.longitude && prevProps.site.type === nextProps.site.type && JSON.stringify(prevProps.markerPreferences) === JSON.stringify(nextProps.markerPreferences);\n}), \"1C96L63TzPfcVLt9uiyNTwBUmDs=\");\n\n// Composant de clustering dynamique\n_c13 = MemoizedMarker;\nconst SiteLayer = ({\n  sites,\n  visibleTypes = [],\n  maxMarkers = 500\n}) => {\n  _s13();\n  const map = useMap();\n  const [currentZoom, setCurrentZoom] = useState(8);\n  const [visibleSites, setVisibleSites] = useState([]);\n  const [markerPreferences, setMarkerPreferences] = useState([]);\n\n  // Mettre � jour le zoom lors des changements de la carte\n  useEffect(() => {\n    if (!map) return;\n    const updateZoom = () => {\n      setCurrentZoom(map.getZoom());\n    };\n    map.on('zoomend', updateZoom);\n    return () => {\n      map.off('zoomend', updateZoom);\n    };\n  }, [map]);\n\n  // Charger les pr�f�rences de marqueurs\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const preferencesRef = collection(db, 'markerPreferences');\n        const snapshot = await getDocs(preferencesRef);\n        const preferencesData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setMarkerPreferences(preferencesData);\n      } catch (error) {\n        console.error('Erreur lors du chargement des pr�f�rences de marqueurs:', error);\n      }\n    };\n    fetchPreferences();\n  }, []);\n\n  // Filtrage et pagination des sites\n  const filteredSites = useMemo(() => {\n    return sites.filter(site => {\n      const normalizedSiteType = normalizeType(site.type);\n\n      // Si aucun type n'est s�lectionn�, afficher tous les sites\n      if (visibleTypes.length === 0) {\n        return site.latitude && site.longitude;\n      }\n\n      // V�rifier si le type de site est dans les types s�lectionn�s\n      const isTypeVisible = visibleTypes.some(selectedType => normalizedSiteType === normalizeType(selectedType));\n      return isTypeVisible && site.latitude && site.longitude;\n    });\n  }, [sites, visibleTypes]);\n\n  // Mettre � jour les sites visibles\n  useEffect(() => {\n    const sitesToShow = filteredSites.slice(0, maxMarkers);\n    setVisibleSites(sitesToShow);\n\n    // Ajuster la vue de la carte\n    if (map && sitesToShow.length > 0) {\n      const coordinates = sitesToShow.map(site => [site.latitude, site.longitude]).filter(coords => coords[0] !== undefined && coords[1] !== undefined && !isNaN(coords[0]) && !isNaN(coords[1]));\n      if (coordinates.length > 0) {\n        const bounds = L.latLngBounds(coordinates);\n        map.fitBounds(bounds, {\n          padding: [50, 50],\n          maxZoom: 12\n        });\n      }\n    }\n  }, [filteredSites, map, maxMarkers]);\n\n  // Clustering personnalis�\n  const renderMarkers = useMemo(() => {\n    // Si le nombre de sites est faible, afficher tous les marqueurs\n    if (visibleSites.length <= 50) {\n      return visibleSites.map(site => /*#__PURE__*/_jsxDEV(MemoizedMarker, {\n        site: site,\n        markerPreferences: markerPreferences\n      }, site.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1782,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Clustering dynamique bas� sur le niveau de zoom\n    const currentZoom = map ? map.getZoom() : 8; // Zoom par d�faut\n    const clusterThreshold = 12; // Niveau de zoom o� le clustering commence � se d�sagr�ger\n    const clusterRadius = currentZoom < clusterThreshold ? 0.2 // Rayon de clustering plus grand pour les zooms �loign�s\n    : 0.05; // Rayon plus petit pour un d�groupement plus pr�coce\n\n    const clusters = {};\n    visibleSites.forEach(site => {\n      if (!site.latitude || !site.longitude) return;\n      let clustered = false;\n      for (const clusterKey in clusters) {\n        const [clusterLat, clusterLng] = clusterKey.split(',').map(Number);\n        const distance = Math.sqrt(Math.pow(site.latitude - clusterLat, 2) + Math.pow(site.longitude - clusterLng, 2));\n\n        // Ajuster la logique de clustering en fonction du zoom\n        if (distance < clusterRadius) {\n          clusters[clusterKey].push(site);\n          clustered = true;\n          break;\n        }\n      }\n      if (!clustered) {\n        const newClusterKey = `${site.latitude.toFixed(1)},${site.longitude.toFixed(1)}`;\n        clusters[newClusterKey] = [site];\n      }\n    });\n\n    // Rendu des clusters\n    return Object.entries(clusters).flatMap(([key, clusterSites]) => {\n      // D�grouper plus t�t si le zoom est suffisant\n      if (currentZoom >= clusterThreshold || clusterSites.length <= 3) {\n        return clusterSites.map(site => /*#__PURE__*/_jsxDEV(MemoizedMarker, {\n          site: site,\n          markerPreferences: markerPreferences\n        }, site.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1829,\n          columnNumber: 11\n        }, this));\n      }\n\n      // Cluster avec plusieurs sites\n      const validSites = clusterSites.filter(site => site.latitude !== undefined && site.longitude !== undefined);\n      if (validSites.length === 0) return [];\n      const centerLat = validSites.reduce((sum, site) => sum + (site.latitude || 0), 0) / validSites.length;\n      const centerLng = validSites.reduce((sum, site) => sum + (site.longitude || 0), 0) / validSites.length;\n\n      // D�terminer l'ic�ne et la couleur du cluster\n      const clusterPreference = markerPreferences.find(pref => normalizeType(pref.siteType) === normalizeType(validSites[0].type));\n      return [/*#__PURE__*/_jsxDEV(Marker, {\n        position: [centerLat, centerLng],\n        icon: L.divIcon({\n          className: 'marker-cluster',\n          html: `\n              <div style=\"\n                background-color: ${(clusterPreference === null || clusterPreference === void 0 ? void 0 : clusterPreference.color) || 'gray'}; \n                width: 40px; \n                height: 40px; \n                border-radius: 50%; \n                display: flex; \n                justify-content: center; \n                align-items: center; \n                color: white; \n                font-weight: bold;\n                box-shadow: 0 0 5px rgba(0,0,0,0.3);\n                opacity: ${currentZoom < clusterThreshold ? 1 : 0.7};\n              \">\n                ${clusterSites.length}\n              </div>\n            `,\n          iconSize: L.point(40, 40)\n        }),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Cluster de \", clusterSites.length, \" sites\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1882,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [clusterSites.slice(0, 5).map(site => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: site.nom\n              }, site.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1885,\n                columnNumber: 19\n              }, this)), clusterSites.length > 5 && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"... et \", clusterSites.length - 5, \" autres\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1887,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1883,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1881,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1880,\n          columnNumber: 11\n        }, this)\n      }, `cluster-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1855,\n        columnNumber: 9\n      }, this)];\n    });\n  }, [visibleSites, markerPreferences, map, currentZoom]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderMarkers\n  }, void 0, false);\n};\n_s13(SiteLayer, \"40PRx2KXrqh8uXoEMA/2OvrVNog=\", false, function () {\n  return [useMap];\n});\n_c14 = SiteLayer;\nconst MapView = () => {\n  _s14();\n  const [sites, setSites] = useState([]);\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const [markerPreferences, setMarkerPreferences] = useState([]);\n  const mapRef = useRef(null);\n\n  // Charger les sites et les pr�f�rences de marqueurs\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Charger les sites\n        const sitesCollection = collection(db, 'sites');\n        const sitesSnapshot = await getDocs(sitesCollection);\n        const loadedSites = sitesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n\n        // Filtrer les sites avec coordonn�es\n        const validSites = loadedSites.filter(site => site.latitude && site.longitude);\n        setSites(validSites);\n\n        // Charger les pr�f�rences de marqueurs\n        const preferencesRef = collection(db, 'markerPreferences');\n        const preferencesSnapshot = await getDocs(preferencesRef);\n        const preferencesData = preferencesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setMarkerPreferences(preferencesData);\n      } catch (error) {\n        console.error('Erreur lors du chargement des donn�es:', error);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Gestion des types de sites s�lectionn�s\n  const handleTypeToggle = type => {\n    setSelectedTypes(prev => prev.includes(type) ? prev.filter(t => t !== type) : [...prev, type]);\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [43.6, 3.8],\n    zoom: 8,\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    ref: ref => {\n      mapRef.current = ref;\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1957,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullscreenControl, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1963,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: '20px',\n        right: '20px',\n        zIndex: 1000,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '5px',\n        boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 10px 0',\n          textAlign: 'center'\n        },\n        children: \"Types de sites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1976,\n        columnNumber: 9\n      }, this), SITE_TYPES.map(type => {\n        const normalizedType = normalizeType(type);\n        const preference = markerPreferences.find(pref => normalizeType(pref.siteType) === normalizedType);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '20px',\n              height: '20px',\n              borderRadius: '50%',\n              marginRight: '10px',\n              backgroundColor: preference ? preference.color : 'gray',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: preference && /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fas ${getIconClassForType(preference.icon)}`,\n              style: {\n                color: 'white',\n                fontSize: '12px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2005,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1992,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2014,\n            columnNumber: 15\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1984,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1966,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px',\n        zIndex: 1000,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '5px'\n      },\n      children: SITE_TYPES.map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedTypes.includes(normalizeType(type)),\n          onChange: () => handleTypeToggle(normalizeType(type))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2032,\n          columnNumber: 13\n        }, this), type]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2031,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2021,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SiteLayer, {\n      sites: sites,\n      visibleTypes: selectedTypes,\n      maxMarkers: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2043,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1951,\n    columnNumber: 5\n  }, this);\n};\n\n// Fonction pour obtenir la classe d'ic�ne FontAwesome en fonction du type\n_s14(MapView, \"vfQLakoSNDQtOz4Cet6hatnWRr4=\");\n_c15 = MapView;\nconst getIconClassForType = iconType => {\n  switch (iconType) {\n    case 'droplet':\n      return 'fa-tint';\n    case 'circle':\n      return 'fa-circle';\n    case 'square':\n      return 'fa-square';\n    case 'triangle':\n      return 'fa-exclamation-triangle';\n    case 'star':\n      return 'fa-star';\n    case 'pin':\n      return 'fa-map-marker-alt';\n    default:\n      return 'fa-tint';\n  }\n};\n\n// Extension du prototype de Marker pour ajouter slideTo\n\nL.Marker.prototype.slideTo = function (latlng, options = {}) {\n  const duration = options.duration || 1000;\n  const keepAtCenter = options.keepAtCenter || false;\n  const start = this.getLatLng();\n  const startTime = performance.now();\n  const animate = currentTime => {\n    const elapsed = currentTime - startTime;\n    const progress = Math.min(elapsed / duration, 1);\n    const lat = start.lat + (latlng.lat - start.lat) * progress;\n    const lng = start.lng + (latlng.lng - start.lng) * progress;\n    this.setLatLng([lat, lng]);\n    if (keepAtCenter) {\n      var _this$_map;\n      (_this$_map = this._map) === null || _this$_map === void 0 ? void 0 : _this$_map.setView([lat, lng]);\n    }\n    if (progress < 1) {\n      requestAnimationFrame(animate);\n    }\n  };\n  requestAnimationFrame(animate);\n};\nexport default MapView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"FullscreenControl\");\n$RefreshReg$(_c2, \"AllSitesLayer\");\n$RefreshReg$(_c3, \"SiteTypeLayer\");\n$RefreshReg$(_c4, \"PoleLayer\");\n$RefreshReg$(_c5, \"CouriersLayer\");\n$RefreshReg$(_c6, \"AnimatedMarker\");\n$RefreshReg$(_c7, \"SiteLegend\");\n$RefreshReg$(_c8, \"SectionHeader\");\n$RefreshReg$(_c9, \"MapControls\");\n$RefreshReg$(_c10, \"LayersEventInitializer\");\n$RefreshReg$(_c11, \"ManualCoordinatesCorrection\");\n$RefreshReg$(_c12, \"MemoizedMarker$React.memo\");\n$RefreshReg$(_c13, \"MemoizedMarker\");\n$RefreshReg$(_c14, \"SiteLayer\");\n$RefreshReg$(_c15, \"MapView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","db","collection","getDocs","onSnapshot","MapContainer","TileLayer","Marker","Popup","LayerGroup","useMap","L","markerIcon2x","markerIcon","markerShadow","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","iconRetinaUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","siteIcon","icon","departIcon","arrivalIcon","laboratoireIcon","className","cliniqueIcon","plateauIcon","collecteIcon","etablissementIcon","ehpadIcon","veterinaireIcon","SITE_TYPES","POLES","normalizeType","type","normalized","toLowerCase","trim","typeMap","key","value","Object","entries","includes","getDefaultIconForSiteType","normalizedType","FullscreenControl","_s","map","isFullscreen","setIsFullscreen","Control","extend","options","position","onAdd","container","DomUtil","create","button","innerHTML","href","title","setAttribute","DomEvent","on","e","preventDefault","mapContainer","getContainer","document","fullscreenElement","requestFullscreen","exitFullscreen","handleFullscreenChange","addEventListener","fullscreenControl","addControl","removeControl","removeEventListener","_c","AllSitesLayer","sites","getIconForSiteType","showLabels","showGeneratedCoordinates","_s2","layerRef","isVisible","setIsVisible","current","layerGroup","addTo","clearLayers","hasLayer","addLayer","removeLayer","forEach","site","isGeneratedCoords","hasOwnProperty","isGeneratedCoordinates","latitude","longitude","_layerRef$current","marker","bindPopup","nom","adresse","pole","bindTooltip","permanent","direction","handleLayerControlChange","layersControl","querySelector","checkboxes","querySelectorAll","checkbox","_nextSibling","_nextSibling$textCont","nextSibling","textContent","checked","isChecked","target","checkLayersControl","setTimeout","_nextSibling2","_nextSibling2$textCon","_c2","SiteTypeLayer","_s3","filteredSites","filter","_layerRef$current2","_nextSibling3","_nextSibling3$textCon","_nextSibling4","_nextSibling4$textCon","_c3","PoleLayer","_s4","_layerRef$current3","_nextSibling5","_nextSibling5$textCon","_nextSibling6","_nextSibling6$textCon","_c4","CouriersLayer","courierLocations","formatDate","_s5","courier","_layerRef$current4","isArrival","tourneeName","lastScan","siteName","_nextSibling7","_nextSibling7$textCon","_nextSibling8","_nextSibling8$textCon","_c5","AnimatedMarker","popup","markerId","_s6","markerRef","currentPos","getLatLng","targetPos","latLng","equals","slideTo","duration","keepAtCenter","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c6","franceCenter","generateCoordinates","index","baseLatitude","baseLongitude","codePostal","length","departement","parseInt","substring","latOffset","lonOffset","Math","floor","siteOffset","ville","firstLetter","charAt","toUpperCase","letterCode","charCodeAt","SiteLegend","_s7","markerPreferences","setMarkerPreferences","legendControlRef","updateTimerRef","legendContent","legendItems","pref","color","name","join","fetchPreferences","preferencesRef","snapshot","empty","preferencesData","docs","doc","id","data","console","debug","error","LegendControl","div","updateLegendContent","_container","legendContainer","unsubscribe","clearTimeout","window","import","meta","env","DEV","_c7","SectionHeader","_s8","addCustomStyle","labels","label","span","classList","add","disabled","style","display","observer","MutationObserver","observe","childList","subtree","disconnect","_c8","MapControls","setShowLabels","setSiteFilter","currentFilter","setShowGeneratedCoordinates","onZoomToSite","_s9","searchTerm","setSearchTerm","filtersVisible","setFiltersVisible","searchResults","setSearchResults","normalizedSearch","results","_site$nom","_site$adresse","_site$ville","_site$codePostal","_site$type","slice","MapControlsControl","labelsButton","toggle","filtersContainer","filterTitle","searchContainer","searchInput","placeholder","searchResultsContainer","updateSearchResults","resultItem","generatedCoordsContainer","generatedCoordsCheckbox","generatedCoordsLabel","htmlFor","filtersButton","disableClickPropagation","disableScrollPropagation","mapControlsControl","_c9","LayersEventInitializer","_s10","initLayersControl","event","Event","bubbles","dispatchEvent","overlaysContainer","_label$textContent","text","startsWith","_label$parentNode","separator","createElement","replace","parentNode","replaceChild","_c10","ManualCoordinatesCorrection","onCoordinatesUpdated","_s11","isActive","setIsActive","selectedSite","setSelectedSite","_site$nom2","_site$adresse2","_site$ville2","_site$codePostal2","selectSite","setView","draggable","divIcon","html","openPopup","newLatLng","log","lat","lng","alert","saveCoordinates","cancelCorrection","CorrectionControl","correctionPanel","resultsContainer","selectedContainer","siteInfo","instructions","buttonsContainer","saveButton","cancelButton","closeButton","correctionControl","_c11","MemoizedMarker","_s12","memo","_c12","normalizedSiteType","preference","find","siteType","getIconClassForType","prevProps","nextProps","JSON","stringify","_c13","SiteLayer","visibleTypes","maxMarkers","_s13","currentZoom","setCurrentZoom","visibleSites","setVisibleSites","updateZoom","getZoom","off","isTypeVisible","some","selectedType","sitesToShow","coordinates","coords","undefined","isNaN","bounds","latLngBounds","fitBounds","padding","maxZoom","renderMarkers","clusterThreshold","clusterRadius","clusters","clustered","clusterKey","clusterLat","clusterLng","split","Number","distance","sqrt","pow","push","newClusterKey","toFixed","flatMap","clusterSites","validSites","centerLat","reduce","sum","centerLng","clusterPreference","point","_c14","MapView","_s14","setSites","selectedTypes","setSelectedTypes","mapRef","loadData","sitesCollection","sitesSnapshot","loadedSites","preferencesSnapshot","handleTypeToggle","prev","t","center","zoom","height","width","url","attribution","bottom","right","zIndex","background","borderRadius","boxShadow","margin","textAlign","alignItems","marginBottom","marginRight","backgroundColor","justifyContent","fontSize","top","onChange","_c15","iconType","latlng","start","startTime","performance","now","animate","currentTime","elapsed","progress","min","setLatLng","_this$_map","_map","requestAnimationFrame","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/MapView.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { db } from '../config/firebase';\nimport { collection, query, where, getDocs, onSnapshot, Timestamp, updateDoc, doc, getDoc } from \n'firebase/firestore';\nimport { MapContainer, TileLayer, Marker, Popup, LayerGroup, LayersControl, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { geocodeAddress } from '../utils/geocoding';\nimport './MapView.css';\nimport 'leaflet.markercluster';\nimport './MarkerCluster.css';\nimport './MarkerCluster.Default.css';\nimport { MarkerPreference } from '../types';\n// Renommer les imports pour éviter les conflits avec les interfaces locales\n// import { Site, Tournee, MarkerPreference } from '../types';\n\n// Fix pour les icônes Leaflet\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\n\n// Correction pour les icônes Leaflet\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Définir des icônes spécifiques\nconst siteIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst departIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst arrivalIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Définir des icônes spécifiques pour chaque type de site\nconst laboratoireIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-laboratoire'\n});\n\nconst cliniqueIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-clinique'\n});\n\nconst plateauIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-plateau'\n});\n\nconst collecteIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-collecte'\n});\n\nconst etablissementIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-etablissement'\n});\n\nconst ehpadIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-ehpad'\n});\n\nconst veterinaireIcon = L.icon({\n  iconUrl: markerIcon,\n  iconRetinaUrl: markerIcon2x,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'site-icon site-icon-veterinaire'\n});\n\n// Types de sites disponibles\nconst SITE_TYPES = [\n  'Laboratoire',\n  'Clinique',\n  'Plateau technique',\n  'Point de collecte',\n  'Etablissement de sant�',\n  'Ehpad',\n  'V�t�rinaire'\n];\n\n// P�les disponibles\nconst POLES = [\n  'Nord',\n  'Sud',\n  'Est',\n  'Ouest',\n  'Centre'\n];\n\n// Fonction pour normaliser les types de sites\nconst normalizeType = (type: string | undefined): string => {\n  if (!type) return '';\n  \n  const normalized = type.toLowerCase().trim();\n  \n  // Normaliser les types courants avec des correspondances plus pr�cises\n  const typeMap: { [key: string]: string } = {\n    'labo': 'laboratoire',\n    'laboratoire': 'laboratoire',\n    'plateau': 'plateau technique',\n    'plateau technique': 'plateau technique',\n    'clinique': 'clinique',\n    'collect': 'point de collecte',\n    'point de collecte': 'point de collecte',\n    'etablissement': 'etablissement de sant�',\n    '�tablissement': 'etablissement de sant�',\n    'etablissement de sant�': 'etablissement de sant�',\n    '�tablissement de sant�': 'etablissement de sant�',\n    'ehpad': 'ehpad',\n    'veterinaire': 'veterinaire',\n    'v�t�rinaire': 'veterinaire'\n  };\n  \n  // Recherche de correspondance exacte ou partielle\n  for (const [key, value] of Object.entries(typeMap)) {\n    if (normalized === key || normalized.includes(key)) {\n      return value;\n    }\n  }\n  \n  return normalized;\n};\n\n// Fonction pour obtenir l'ic�ne par d�faut en fonction du type de site\nconst getDefaultIconForSiteType = (type: string | undefined): L.Icon => {\n  if (!type) return siteIcon;\n  \n  // Normaliser le type pour la comparaison\n  const normalizedType = normalizeType(type);\n  \n  // Retourner l'ic�ne correspondante\n  if (normalizedType === 'laboratoire') {\n    return laboratoireIcon;\n  } else if (normalizedType === 'clinique') {\n    return cliniqueIcon;\n  } else if (normalizedType === 'plateau technique') {\n    return plateauIcon;\n  } else if (normalizedType === 'point de collecte') {\n    return collecteIcon;\n  } else if (normalizedType === 'etablissement de sant�') {\n    return etablissementIcon;\n  } else if (normalizedType === 'ehpad') {\n    return ehpadIcon;\n  } else if (normalizedType === 'veterinaire') {\n    return veterinaireIcon;\n  }\n  \n  // Par d�faut, retourner l'ic�ne g�n�rique\n  return siteIcon;\n};\n\ninterface CourierLocation {\n  id: string;\n  nom: string;\n  tourneeId: string;\n  tourneeName: string;\n  siteId: string;\n  siteName: string;\n  latitude: number;\n  longitude: number;\n  lastScan: Timestamp;\n  isArrival: boolean; // Indique si le coursier est � l'arriv�e ou au d�part\n}\n\ninterface Site {\n  id: string;\n  nom: string;\n  adresse: string;\n  ville?: string;\n  codePostal?: string;\n  codeBarres: string;\n  latitude?: number;\n  longitude?: number;\n  type?: string;\n  pole?: string;\n}\n\ninterface Tournee {\n  id: string;\n  nom: string;\n}\n\n// Composant pour ajouter le contr�le plein �cran personnalis�\nconst FullscreenControl: React.FC = () => {\n  const map = useMap();\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  \n  useEffect(() => {\n    // Cr�er un contr�le personnalis�\n    const FullscreenControl = L.Control.extend({\n      options: {\n        position: 'topleft'\n      },\n      \n      onAdd: function() {\n        const container = L.DomUtil.create('div', 'leaflet-bar leaflet-control');\n        const button = L.DomUtil.create('a', 'leaflet-control-fullscreen', container);\n        \n        button.innerHTML = '<i class=\"fas fa-expand\"></i>'; // Utiliser une ic�ne FontAwesome\n        button.href = '#';\n        button.title = 'Afficher en plein �cran';\n        button.setAttribute('role', 'button');\n        button.setAttribute('aria-label', 'Afficher en plein �cran');\n        \n        L.DomEvent.on(button, 'click', function(e) {\n          L.DomEvent.preventDefault(e);\n          \n          const mapContainer = map.getContainer();\n          \n          if (!document.fullscreenElement) {\n            if (mapContainer.requestFullscreen) {\n              mapContainer.requestFullscreen();\n              button.innerHTML = '<i class=\"fas fa-compress\"></i>'; // Ic�ne de r�duction\n              button.title = 'Quitter le plein �cran';\n              setIsFullscreen(true);\n            }\n          } else {\n            if (document.exitFullscreen) {\n              document.exitFullscreen();\n              button.innerHTML = '<i class=\"fas fa-expand\"></i>'; // Ic�ne d'agrandissement\n              button.title = 'Afficher en plein �cran';\n              setIsFullscreen(false);\n            }\n          }\n        });\n        \n        // �couter les changements d'�tat du plein �cran\n        const handleFullscreenChange = () => {\n          if (!document.fullscreenElement && isFullscreen) {\n            button.innerHTML = '<i class=\"fas fa-expand\"></i>';\n            button.title = 'Afficher en plein �cran';\n            setIsFullscreen(false);\n          }\n        };\n        \n        document.addEventListener('fullscreenchange', handleFullscreenChange);\n        \n        return container;\n      }\n    });\n    \n    // Ajouter le contr�le � la carte\n    const fullscreenControl = new FullscreenControl();\n    map.addControl(fullscreenControl);\n    \n    return () => {\n      map.removeControl(fullscreenControl);\n      document.removeEventListener('fullscreenchange', () => {});\n    };\n  }, [map, isFullscreen]);\n  \n  return null;\n};\n\n// Composant pour afficher tous les sites\nconst AllSitesLayer: React.FC<{\n  sites: Site[];\n  icon: L.Icon;\n  getIconForSiteType: (type: string) => L.Icon;\n  showLabels: boolean;\n  showGeneratedCoordinates: boolean;\n}> = ({ sites, icon, getIconForSiteType, showLabels, showGeneratedCoordinates }) => {\n  const map = useMap();\n  const layerRef = useRef<L.LayerGroup | null>(null);\n  const [isVisible, setIsVisible] = useState(true);\n  \n  useEffect(() => {\n    // Cr�er un nouveau LayerGroup si n�cessaire\n    if (!layerRef.current) {\n      layerRef.current = L.layerGroup();\n      \n      // Ajouter le LayerGroup �  la carte si la couche est visible\n      if (isVisible) {\n        layerRef.current.addTo(map);\n      }\n    } else {\n      // Sinon, vider le LayerGroup existant\n      layerRef.current.clearLayers();\n      \n      // Ajouter ou retirer le LayerGroup de la carte selon la visibilit�\n      if (isVisible && !map.hasLayer(layerRef.current)) {\n        map.addLayer(layerRef.current);\n      } else if (!isVisible && map.hasLayer(layerRef.current)) {\n        map.removeLayer(layerRef.current);\n      }\n    }\n    \n    // Ajouter les marqueurs au LayerGroup seulement si la couche est visible\n    if (isVisible) {\n      sites.forEach(site => {\n        // V�rifier si les coordonn�es sont g�n�r�es\n        const isGeneratedCoords = site.hasOwnProperty('isGeneratedCoordinates') && \n                                (site as any).isGeneratedCoordinates === true;\n        \n        if (!showGeneratedCoordinates && isGeneratedCoords) {\n          return;\n        }\n        \n        if (site.latitude && site.longitude) {\n          const siteIcon = getIconForSiteType(site.type || '');\n          const marker = L.marker([site.latitude, site.longitude], { icon: siteIcon })\n            .bindPopup(`\n              <div class=\"site-popup\">\n                <h3>${site.nom}</h3>\n                <p><strong>Type:</strong> ${site.type}</p>\n                <p><strong>Adresse:</strong> ${site.adresse}</p>\n                <p><strong>P�le:</strong> ${site.pole || 'Non d�fini'}</p>\n                ${isGeneratedCoords ? '<p class=\"warning\">Coordonn�es g�n�r�es automatiquement</p>' : \n''}\n              </div>\n            `);\n          \n          if (showLabels) {\n            marker.bindTooltip(site.nom, { permanent: true, direction: 'top', className: 'site-label' });\n          }\n          \n          layerRef.current?.addLayer(marker);\n        }\n      });\n    }\n    \n    // Nettoyer le LayerGroup lors du d�montage du composant\n    return () => {\n      if (layerRef.current) {\n        if (map.hasLayer(layerRef.current)) {\n          map.removeLayer(layerRef.current);\n        }\n        layerRef.current = null;\n      }\n    };\n  }, [sites, icon, getIconForSiteType, showLabels, showGeneratedCoordinates, map, isVisible]);\n  \n  // G�rer l'affichage/masquage de la couche en fonction du contr�le des couches\n  useEffect(() => {\n    const handleLayerControlChange = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          if ((checkbox as HTMLInputElement).nextSibling?.textContent?.trim() === 'Tous les sites') {\n            // Mettre �  jour l'�tat de visibilit� en fonction de la case �  cocher\n            setIsVisible((checkbox as HTMLInputElement).checked);\n            \n            // Ajouter un �couteur d'�v�nements pour les changements futurs\n            (checkbox as HTMLInputElement).addEventListener('change', (e) => {\n              const isChecked = (e.target as HTMLInputElement).checked;\n              setIsVisible(isChecked);\n            });\n          }\n        });\n      }\n    };\n    \n    // Attendre que le contr�le des couches soit ajout�  la carte\n    const checkLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        handleLayerControlChange();\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(checkLayersControl, 100);\n      }\n    };\n    \n    checkLayersControl();\n    \n    // Nettoyer les �couteurs d'�v�nements lors du d�montage du composant\n    return () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          if ((checkbox as HTMLInputElement).nextSibling?.textContent?.trim() === 'Tous les sites') {\n            (checkbox as HTMLInputElement).removeEventListener('change', () => {});\n          }\n        });\n      }\n    };\n  }, [map]);\n  \n  return null;\n};\n\n// Composant pour afficher les sites par type\nconst SiteTypeLayer: React.FC<{\n  sites: Site[];\n  icon: L.Icon;\n  type: string;\n  getIconForSiteType: (type: string) => L.Icon;\n  showLabels: boolean;\n  showGeneratedCoordinates: boolean;\n}> = ({ sites, icon, type, getIconForSiteType, showLabels, showGeneratedCoordinates }) => {\n  const map = useMap();\n  const layerRef = useRef<L.LayerGroup | null>(null);\n  const [isVisible, setIsVisible] = useState(true);\n  \n  useEffect(() => {\n    // Cr�er un nouveau LayerGroup si n�cessaire\n    if (!layerRef.current) {\n      layerRef.current = L.layerGroup();\n      \n      // Ajouter le LayerGroup �  la carte si la couche est visible\n      if (isVisible) {\n        layerRef.current.addTo(map);\n      }\n    } else {\n      // Sinon, vider le LayerGroup existant\n      layerRef.current.clearLayers();\n      \n      // Ajouter ou retirer le LayerGroup de la carte selon la visibilit�\n      if (isVisible && !map.hasLayer(layerRef.current)) {\n        map.addLayer(layerRef.current);\n      } else if (!isVisible && map.hasLayer(layerRef.current)) {\n        map.removeLayer(layerRef.current);\n      }\n    }\n    \n    // Ajouter les marqueurs au LayerGroup seulement si la couche est visible\n    if (isVisible) {\n      // Filtrer les sites par type et ajouter les marqueurs au LayerGroup\n      const filteredSites = sites.filter(site => normalizeType(site.type || '') === normalizeType(type));\n      \n      filteredSites.forEach(site => {\n        // V�rifier si les coordonn�es sont g�n�r�es\n        const isGeneratedCoords = site.hasOwnProperty('isGeneratedCoordinates') && \n                                (site as any).isGeneratedCoordinates === true;\n        \n        if (!showGeneratedCoordinates && isGeneratedCoords) {\n          return;\n        }\n        \n        if (site.latitude && site.longitude) {\n          const siteIcon = getIconForSiteType(site.type || '');\n          const marker = L.marker([site.latitude, site.longitude], { icon: siteIcon })\n            .bindPopup(`\n              <div class=\"site-popup\">\n                <h3>${site.nom}</h3>\n                <p><strong>Type:</strong> ${site.type}</p>\n                <p><strong>Adresse:</strong> ${site.adresse}</p>\n                <p><strong>P�le:</strong> ${site.pole || 'Non d�fini'}</p>\n                ${isGeneratedCoords ? '<p class=\"warning\">Coordonn�es g�n�r�es automatiquement</p>' : \n''}\n              </div>\n            `);\n          \n          if (showLabels) {\n            marker.bindTooltip(site.nom, { permanent: true, direction: 'top', className: 'site-label' });\n          }\n          \n          layerRef.current?.addLayer(marker);\n        }\n      });\n    }\n    \n    // Nettoyer le LayerGroup lors du d�montage du composant\n    return () => {\n      if (layerRef.current) {\n        if (map.hasLayer(layerRef.current)) {\n          map.removeLayer(layerRef.current);\n        }\n        layerRef.current = null;\n      }\n    };\n  }, [sites, icon, type, getIconForSiteType, showLabels, showGeneratedCoordinates, map, isVisible]);\n  \n  // G�rer l'affichage/masquage de la couche en fonction du contr�le des couches\n  useEffect(() => {\n    const handleLayerControlChange = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          if ((checkbox as HTMLInputElement).nextSibling?.textContent?.trim() === type) {\n            // Mettre �  jour l'�tat de visibilit� en fonction de la case �  cocher\n            setIsVisible((checkbox as HTMLInputElement).checked);\n            \n            // Ajouter un �couteur d'�v�nements pour les changements futurs\n            (checkbox as HTMLInputElement).addEventListener('change', (e) => {\n              const isChecked = (e.target as HTMLInputElement).checked;\n              setIsVisible(isChecked);\n            });\n          }\n        });\n      }\n    };\n    \n    // Attendre que le contr�le des couches soit ajout�  la carte\n    const checkLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        handleLayerControlChange();\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(checkLayersControl, 100);\n      }\n    };\n    \n    checkLayersControl();\n    \n    // Nettoyer les �couteurs d'�v�nements lors du d�montage du composant\n    return () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          if ((checkbox as HTMLInputElement).nextSibling?.textContent?.trim() === type) {\n            (checkbox as HTMLInputElement).removeEventListener('change', () => {});\n          }\n        });\n      }\n    };\n  }, [map, type]);\n  \n  return null;\n};\n\n// Composant pour afficher les sites par p�le\nconst PoleLayer: React.FC<{\n  sites: Site[];\n  icon: L.Icon;\n  pole: string;\n  getIconForSiteType: (type: string) => L.Icon;\n  showLabels: boolean;\n  showGeneratedCoordinates: boolean;\n}> = ({ sites, icon, pole, getIconForSiteType, showLabels, showGeneratedCoordinates }) => {\n  const map = useMap();\n  const layerRef = useRef<L.LayerGroup | null>(null);\n  const [isVisible, setIsVisible] = useState(true);\n  \n  useEffect(() => {\n    // Cr�er un nouveau LayerGroup si n�cessaire\n    if (!layerRef.current) {\n      layerRef.current = L.layerGroup();\n      \n      // Ajouter le LayerGroup �  la carte si la couche est visible\n      if (isVisible) {\n        layerRef.current.addTo(map);\n      }\n    } else {\n      // Sinon, vider le LayerGroup existant\n      layerRef.current.clearLayers();\n      \n      // Ajouter ou retirer le LayerGroup de la carte selon la visibilit�\n      if (isVisible && !map.hasLayer(layerRef.current)) {\n        map.addLayer(layerRef.current);\n      } else if (!isVisible && map.hasLayer(layerRef.current)) {\n        map.removeLayer(layerRef.current);\n      }\n    }\n    \n    // Ajouter les marqueurs au LayerGroup seulement si la couche est visible\n    if (isVisible) {\n      // Filtrer les sites par p�le et ajouter les marqueurs au LayerGroup\n      const filteredSites = sites.filter(site => site.pole === pole);\n      \n      filteredSites.forEach(site => {\n        // V�rifier si les coordonn�es sont g�n�r�es\n        const isGeneratedCoords = site.hasOwnProperty('isGeneratedCoordinates') && \n                                (site as any).isGeneratedCoordinates === true;\n        \n        if (!showGeneratedCoordinates && isGeneratedCoords) {\n          return;\n        }\n        \n        if (site.latitude && site.longitude) {\n          const siteIcon = getIconForSiteType(site.type || '');\n          const marker = L.marker([site.latitude, site.longitude], { icon: siteIcon })\n            .bindPopup(`\n              <div class=\"site-popup\">\n                <h3>${site.nom}</h3>\n                <p><strong>Type:</strong> ${site.type}</p>\n                <p><strong>Adresse:</strong> ${site.adresse}</p>\n                <p><strong>P�le:</strong> ${site.pole || 'Non d�fini'}</p>\n                ${isGeneratedCoords ? '<p class=\"warning\">Coordonn�es g�n�r�es automatiquement</p>' : \n''}\n              </div>\n            `);\n          \n          if (showLabels) {\n            marker.bindTooltip(site.nom, { permanent: true, direction: 'top', className: 'site-label' });\n          }\n          \n          layerRef.current?.addLayer(marker);\n        }\n      });\n    }\n    \n    // Nettoyer le LayerGroup lors du d�montage du composant\n    return () => {\n      if (layerRef.current) {\n        if (map.hasLayer(layerRef.current)) {\n          map.removeLayer(layerRef.current);\n        }\n        layerRef.current = null;\n      }\n    };\n  }, [sites, icon, pole, getIconForSiteType, showLabels, showGeneratedCoordinates, map, isVisible]);\n  \n  // G�rer l'affichage/masquage de la couche en fonction du contr�le des couches\n  useEffect(() => {\n    const handleLayerControlChange = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          if ((checkbox as HTMLInputElement).nextSibling?.textContent?.trim() === `P�le ${pole}`) {\n            // Mettre �  jour l'�tat de visibilit� en fonction de la case �  cocher\n            setIsVisible((checkbox as HTMLInputElement).checked);\n            \n            // Ajouter un �couteur d'�v�nements pour les changements futurs\n            (checkbox as HTMLInputElement).addEventListener('change', (e) => {\n              const isChecked = (e.target as HTMLInputElement).checked;\n              setIsVisible(isChecked);\n            });\n          }\n        });\n      }\n    };\n    \n    // Attendre que le contr�le des couches soit ajout�  la carte\n    const checkLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        handleLayerControlChange();\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(checkLayersControl, 100);\n      }\n    };\n    \n    checkLayersControl();\n    \n    // Nettoyer les �couteurs d'�v�nements lors du d�montage du composant\n    return () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          if ((checkbox as HTMLInputElement).nextSibling?.textContent?.trim() === `P�le ${pole}`) {\n            (checkbox as HTMLInputElement).removeEventListener('change', () => {});\n          }\n        });\n      }\n    };\n  }, [map, pole]);\n  \n  return null;\n};\n\n// Composant pour afficher les coursiers\nconst CouriersLayer: React.FC<{\n  courierLocations: CourierLocation[];\n  departIcon: L.Icon;\n  arrivalIcon: L.Icon;\n  formatDate: (date: any) => string;\n}> = ({ courierLocations, departIcon, arrivalIcon, formatDate }) => {\n  const map = useMap();\n  const layerRef = useRef<L.LayerGroup | null>(null);\n  const [isVisible, setIsVisible] = useState(true);\n  \n  useEffect(() => {\n    // Cr�er un nouveau LayerGroup si n�cessaire\n    if (!layerRef.current) {\n      layerRef.current = L.layerGroup();\n      \n      // Ajouter le LayerGroup �  la carte si la couche est visible\n      if (isVisible) {\n        layerRef.current.addTo(map);\n      }\n    } else {\n      // Sinon, vider le LayerGroup existant\n      layerRef.current.clearLayers();\n      \n      // Ajouter ou retirer le LayerGroup de la carte selon la visibilit�\n      if (isVisible && !map.hasLayer(layerRef.current)) {\n        map.addLayer(layerRef.current);\n      } else if (!isVisible && map.hasLayer(layerRef.current)) {\n        map.removeLayer(layerRef.current);\n      }\n    }\n    \n    // Ajouter les marqueurs des coursiers au LayerGroup seulement si la couche est visible\n    if (isVisible) {\n      courierLocations.forEach(courier => {\n        const icon = courier.isArrival ? arrivalIcon : departIcon;\n        const marker = L.marker([courier.latitude, courier.longitude], { icon })\n          .bindPopup(`\n            <div class=\"courier-popup\">\n              <h3>${courier.nom}</h3>\n              <p><strong>Tourn�e:</strong> ${courier.tourneeName}</p>\n              <p><strong>Dernier scan:</strong> ${formatDate(courier.lastScan)}</p>\n              <p><strong>Site:</strong> ${courier.siteName}</p>\n              <p><strong>Statut:</strong> ${courier.isArrival ? 'Arriv�e' : 'D�part'}</p>\n            </div>\n          `);\n        \n        layerRef.current?.addLayer(marker);\n      });\n    }\n    \n    // Nettoyer le LayerGroup lors du d�montage du composant\n    return () => {\n      if (layerRef.current) {\n        if (map.hasLayer(layerRef.current)) {\n          map.removeLayer(layerRef.current);\n        }\n        layerRef.current = null;\n      }\n    };\n  }, [courierLocations, departIcon, arrivalIcon, formatDate, map, isVisible]);\n  \n  // G�rer l'affichage/masquage de la couche en fonction du contr�le des couches\n  useEffect(() => {\n    const handleLayerControlChange = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          if ((checkbox as HTMLInputElement).nextSibling?.textContent?.trim() === 'Coursiers') {\n            // Mettre �  jour l'�tat de visibilit� en fonction de la case �  cocher\n            setIsVisible((checkbox as HTMLInputElement).checked);\n            \n            // Ajouter un �couteur d'�v�nements pour les changements futurs\n            (checkbox as HTMLInputElement).addEventListener('change', (e) => {\n              const isChecked = (e.target as HTMLInputElement).checked;\n              setIsVisible(isChecked);\n            });\n          }\n        });\n      }\n    };\n    \n    // Attendre que le contr�le des couches soit ajout�  la carte\n    const checkLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        handleLayerControlChange();\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(checkLayersControl, 100);\n      }\n    };\n    \n    checkLayersControl();\n    \n    // Nettoyer les �couteurs d'�v�nements lors du d�montage du composant\n    return () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          if ((checkbox as HTMLInputElement).nextSibling?.textContent?.trim() === 'Coursiers') {\n            (checkbox as HTMLInputElement).removeEventListener('change', () => {});\n          }\n        });\n      }\n    };\n  }, [map]);\n  \n  return null;\n};\n\n// Composant pour g�rer les animations des marqueurs\nconst AnimatedMarker: React.FC<{\n  position: [number, number];\n  icon: L.Icon;\n  popup: React.ReactNode;\n  markerId: string;\n}> = ({ position, icon, popup, markerId }) => {\n  const markerRef = useRef<L.Marker | null>(null);\n  const map = useMap();\n\n  useEffect(() => {\n    if (markerRef.current) {\n      const marker = markerRef.current;\n      const currentPos = marker.getLatLng();\n      const targetPos = L.latLng(position[0], position[1]);\n\n      // Animation fluide si le marqueur existe d�j� \n      if (currentPos && !currentPos.equals(targetPos)) {\n        marker.slideTo(targetPos, {\n          duration: 1000,\n          keepAtCenter: false\n        });\n      }\n    }\n  }, [position]);\n\n  return (\n    <Marker\n      position={position}\n      icon={icon}\n      ref={markerRef}\n    >\n      {popup}\n    </Marker>\n  );\n};\n\n// Coordonn�es du centre de la France\nconst franceCenter: [number, number] = [46.603354, 1.888334];\n\n// Fonction pour g�n�rer des coordonn�es pour un site sans coordonn�es\nconst generateCoordinates = (site: Site, index: number): [number, number] => {\n  // Coordonn�es de base (centre de la France)\n  const baseLatitude = 46.603354;\n  const baseLongitude = 1.888334;\n  \n  // Si le site a un code postal, utiliser les deux premiers chiffres pour g�n�rer des coordonn�es\n  if (site.codePostal && site.codePostal.length >= 2) {\n    const departement = parseInt(site.codePostal.substring(0, 2), 10);\n    \n    // Carte approximative des d�partements fran�ais (latitude et longitude)\n    // Nous utilisons le num�ro de d�partement pour g�n�rer des coordonn�es approximatives\n    const latOffset = ((departement % 10) - 5) * 0.5; // -2.5 �  +2.5 degr�s\n    const lonOffset = ((Math.floor(departement / 10) % 10) - 5) * 0.5; // -2.5 �  +2.5 degr�s\n    \n    // Ajouter un petit d�calage pour chaque site dans le m�me d�partement\n    const siteOffset = index * 0.01;\n    \n    return [\n      baseLatitude + latOffset + siteOffset,\n      baseLongitude + lonOffset + siteOffset\n    ];\n  }\n  \n  // Si le site a une ville mais pas de code postal, utiliser la premi�re lettre de la ville\n  if (site.ville) {\n    const firstLetter = site.ville.charAt(0).toUpperCase();\n    const letterCode = firstLetter.charCodeAt(0) - 65; // A=0, B=1, etc.\n    \n    // Utiliser le code de la lettre pour g�n�rer des coordonn�es\n    const latOffset = ((letterCode % 5) - 2) * 0.5; // -1 �  +1 degr�s\n    const lonOffset = ((Math.floor(letterCode / 5) % 5) - 2) * 0.5; // -1 �  +1 degr�s\n    \n    // Ajouter un petit d�calage pour chaque site dans la m�me ville\n    const siteOffset = index * 0.01;\n    \n    return [\n      baseLatitude + latOffset + siteOffset,\n      baseLongitude + lonOffset + siteOffset\n    ];\n  }\n  \n  // Si le site n'a ni code postal ni ville, utiliser un d�calage bas� sur l'index\n  return [\n    baseLatitude + (index * 0.01),\n    baseLongitude + (index * 0.01)\n  ];\n};\n\n// Composant pour la l�gende des sites\nconst SiteLegend: React.FC = () => {\n  const map = useMap();\n  const [markerPreferences, setMarkerPreferences] = useState<MarkerPreference[]>([]);\n  const legendControlRef = useRef<any>(null);\n  const updateTimerRef = useRef<number | null>(null);\n\n  // Utiliser useMemo pour �viter les recalculs inutiles du contenu de la l�gende\n  const legendContent = useMemo(() => {\n    // Utiliser les pr�f�rences de marqueurs si disponibles\n    const legendItems = markerPreferences.length > 0 \n      ? markerPreferences.map(pref => `\n          <div class=\"site-legend-item\">\n            <div class=\"site-legend-color\" style=\"background-color: ${pref.color};\"></div>\n            <div class=\"site-legend-label\">${pref.name}</div>\n          </div>\n        `).join('')\n      : `\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-laboratoire\"></div>\n          <div class=\"site-legend-label\">Laboratoire</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-clinique\"></div>\n          <div class=\"site-legend-label\">Clinique</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-plateau\"></div>\n          <div class=\"site-legend-label\">Plateau technique</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-collecte\"></div>\n          <div class=\"site-legend-label\">Point de collecte</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-etablissement\"></div>\n          <div class=\"site-legend-label\">�tablissement de sant�</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-ehpad\"></div>\n          <div class=\"site-legend-label\">Ehpad</div>\n        </div>\n        <div class=\"site-legend-item\">\n          <div class=\"site-legend-color site-legend-color-veterinaire\"></div>\n          <div class=\"site-legend-label\">V�t�rinaire</div>\n        </div>\n      `;\n    \n    return `\n      ${legendItems}\n      <div class=\"site-legend-item generated\">\n        <div class=\"site-legend-color\" style=\"border: 2px dashed red; opacity: 0.6;\"></div>\n        <div class=\"site-legend-label\">Coordonn�es g�n�r�es</div>\n      </div>\n    `;\n  }, [markerPreferences]);\n\n  useEffect(() => {\n    // R�cup�rer les pr�f�rences de marqueurs une seule fois\n    const fetchPreferences = async () => {\n      try {\n        const preferencesRef = collection(db, 'markerPreferences');\n        const snapshot = await getDocs(preferencesRef);\n        \n        if (!snapshot.empty) {\n          const preferencesData = snapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          })) as MarkerPreference[];\n          \n          setMarkerPreferences(preferencesData);\n          // Utiliser un niveau de log moins verbeux\n          console.debug(`L�gende: ${preferencesData.length} pr�f�rences de marqueurs charg�es`);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la r�cup�ration des pr�f�rences de marqueurs pour la l�gende:', \nerror);\n      }\n    };\n    \n    fetchPreferences();\n    \n    // Cr�er un contr�le personnalis� pour la l�gende une seule fois\n    if (!legendControlRef.current) {\n      const LegendControl = L.Control.extend({\n        options: {\n          position: 'bottomright'\n        },\n        \n        onAdd: function(map: L.Map): HTMLElement {\n          const div = L.DomUtil.create('div', 'info legend site-legend');\n          div.innerHTML = `\n            <h4>Types de sites</h4>\n            <div class=\"site-legend-items\">Chargement...</div>\n          `;\n          return div;\n        }\n      });\n\n      // Ajouter le contr�le �  la carte une seule fois\n      legendControlRef.current = new LegendControl();\n      map.addControl(legendControlRef.current);\n    }\n\n    // Mettre �  jour le contenu de la l�gende\n    const updateLegendContent = () => {\n      if (!legendControlRef.current || !legendControlRef.current._container) return;\n      \n      const legendContainer = legendControlRef.current._container.querySelector('.site-legend-items');\n      if (!legendContainer) return;\n      \n      legendContainer.innerHTML = legendContent;\n    };\n    \n    // Mettre �  jour le contenu initial\n    updateLegendContent();\n    \n    // Configurer un �couteur pour les changements dans les pr�f�rences de marqueurs\n    // avec une fr�quence limit�e pour �viter les mises �  jour trop fr�quentes\n    const preferencesRef = collection(db, 'markerPreferences');\n    const unsubscribe = onSnapshot(preferencesRef, (snapshot) => {\n      // Annuler la mise �  jour pr�c�dente si elle est en attente\n      if (updateTimerRef.current !== null) {\n        clearTimeout(updateTimerRef.current);\n      }\n      \n      // Planifier une nouvelle mise �  jour avec un d�lai pour limiter la fr�quence\n      updateTimerRef.current = window.setTimeout(() => {\n        const preferencesData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as MarkerPreference[];\n        \n        setMarkerPreferences(preferencesData);\n        // Utiliser un niveau de log moins verbeux et limiter les informations affich�es\n        if (import.meta.env.DEV) {\n          console.debug(`Mise � jour de la l�gende: ${preferencesData.length} pr�f�rences`);\n        }\n        updateTimerRef.current = null;\n      }, 1000); // Attendre 1 seconde avant de mettre �  jour\n    });\n    \n    return () => {\n      unsubscribe();\n      if (updateTimerRef.current !== null) {\n        clearTimeout(updateTimerRef.current);\n      }\n    };\n  }, [map, legendContent]);\n\n  // Nettoyer le contr�le lors du d�montage final du composant\n  useEffect(() => {\n    return () => {\n      if (legendControlRef.current) {\n        map.removeControl(legendControlRef.current);\n        legendControlRef.current = null;\n      }\n    };\n  }, [map]);\n\n  return null;\n};\n\n// Composant pour les en-t�tes de section dans le contr�le des couches\nconst SectionHeader: React.FC<{ title: string }> = ({ title }) => {\n  const map = useMap();\n  \n  useEffect(() => {\n    // Ajouter un style personnalis� apr�s le rendu du composant\n    const addCustomStyle = () => {\n      const labels = document.querySelectorAll('.leaflet-control-layers-overlays label');\n      \n      labels.forEach(label => {\n        const span = label.querySelector('span');\n        if (span && span.textContent === title) {\n          label.classList.add('layer-section-header');\n          const checkbox = label.querySelector('input[type=\"checkbox\"]') as HTMLInputElement;\n          if (checkbox) {\n            checkbox.disabled = true;\n            checkbox.style.display = 'none';\n          }\n        }\n      });\n    };\n    \n    // Ex�cuter apr�s un court d�lai pour s'assurer que le DOM est mis �  jour\n    setTimeout(addCustomStyle, 100);\n    \n    // Observer les changements dans le contr�le de couches\n    const observer = new MutationObserver(addCustomStyle);\n    const layersControl = document.querySelector('.leaflet-control-layers');\n    \n    if (layersControl) {\n      observer.observe(layersControl, { childList: true, subtree: true });\n    }\n    \n    return () => {\n      observer.disconnect();\n    };\n  }, [title]);\n  \n  return <LayerGroup />;\n};\n\n// Composant pour ajouter le contr�le des libell�s et des filtres personnalis�s\nconst MapControls: React.FC<{\n  showLabels: boolean,\n  setShowLabels: (show: boolean) => void,\n  sites: Site[],\n  setSiteFilter: (filter: string | null) => void,\n  currentFilter: string | null,\n  showGeneratedCoordinates: boolean,\n  setShowGeneratedCoordinates: (show: boolean) => void,\n  onZoomToSite: (site: Site) => void\n}> = ({ \n  showLabels, \n  setShowLabels, \n  sites, \n  setSiteFilter, \n  currentFilter,\n  showGeneratedCoordinates,\n  setShowGeneratedCoordinates,\n  onZoomToSite\n}) => {\n  const map = useMap();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtersVisible, setFiltersVisible] = useState(false);\n  const [searchResults, setSearchResults] = useState<Site[]>([]);\n  \n  // Mettre �  jour les r�sultats de recherche lorsque le terme de recherche change\n  useEffect(() => {\n    if (!searchTerm) {\n      setSearchResults([]);\n      return;\n    }\n    \n    const normalizedSearch = searchTerm.toLowerCase();\n    const results = sites.filter(site => \n      site.nom?.toLowerCase().includes(normalizedSearch) ||\n      site.adresse?.toLowerCase().includes(normalizedSearch) ||\n      site.ville?.toLowerCase().includes(normalizedSearch) ||\n      site.codePostal?.includes(normalizedSearch) ||\n      site.type?.toLowerCase().includes(normalizedSearch)\n    ).slice(0, 5); // Limiter �  5 r�sultats\n    \n    setSearchResults(results);\n  }, [searchTerm, sites]);\n  \n  useEffect(() => {\n    // Cr�er un contr�le personnalis�\n    const MapControlsControl = L.Control.extend({\n      options: {\n        position: 'topleft'\n      },\n      \n      onAdd: function() {\n        const container = L.DomUtil.create('div', 'leaflet-bar leaflet-control map-custom-controls');\n        \n        // Bouton pour activer/d�sactiver les libell�s\n        const labelsButton = L.DomUtil.create('a', 'leaflet-control-labels', container);\n        labelsButton.innerHTML = '<i class=\"fas fa-tag\"></i>';\n        labelsButton.href = '#';\n        labelsButton.title = showLabels ? 'Masquer les libell�s' : 'Afficher les libell�s';\n        labelsButton.setAttribute('role', 'button');\n        labelsButton.setAttribute('aria-label', showLabels ? 'Masquer les libell�s' : 'Afficher les libell�s');\n        \n        if (showLabels) {\n          labelsButton.classList.add('active');\n        }\n        \n        L.DomEvent.on(labelsButton, 'click', function(e) {\n          L.DomEvent.preventDefault(e);\n          setShowLabels(!showLabels);\n          labelsButton.title = !showLabels ? 'Masquer les libell�s' : 'Afficher les libell�s';\n          labelsButton.classList.toggle('active');\n        });\n        \n        // Cr�er un conteneur pour les filtres\n        const filtersContainer = L.DomUtil.create('div', 'map-filters-container', container);\n        filtersContainer.style.display = filtersVisible ? 'block' : 'none';\n        \n        // Ajouter un titre\n        const filterTitle = L.DomUtil.create('div', 'map-filter-title', filtersContainer);\n        filterTitle.textContent = 'Filtres';\n        \n        // Ajouter un champ de recherche\n        const searchContainer = L.DomUtil.create('div', 'map-filter-search', filtersContainer);\n        const searchInput = L.DomUtil.create('input', 'map-filter-search-input', searchContainer);\n        searchInput.type = 'text';\n        searchInput.placeholder = 'Rechercher un site...';\n        searchInput.value = searchTerm;\n        \n        // Conteneur pour les r�sultats de recherche\n        const searchResultsContainer = L.DomUtil.create('div', 'map-search-results', filtersContainer);\n        searchResultsContainer.style.display = 'none';\n        \n        // Mettre �  jour les r�sultats de recherche\n        const updateSearchResults = () => {\n          searchResultsContainer.innerHTML = '';\n          \n          if (searchResults.length === 0) {\n            if (searchTerm) {\n              searchResultsContainer.innerHTML = '<div class=\"map-search-no-results\">Aucun r�sultat trouv�</div>';\n              searchResultsContainer.style.display = 'block';\n            } else {\n              searchResultsContainer.style.display = 'none';\n            }\n            return;\n          }\n          \n          searchResultsContainer.style.display = 'block';\n          \n          searchResults.forEach(site => {\n            const resultItem = L.DomUtil.create('div', 'map-search-result-item', searchResultsContainer);\n            resultItem.innerHTML = `\n              <div class=\"map-search-result-name\">${site.nom}</div>\n              <div class=\"map-search-result-details\">\n                ${site.type ? `<span>${site.type}</span>` : ''}\n                ${site.ville ? `<span>${site.ville}</span>` : ''}\n              </div>\n            `;\n            \n            L.DomEvent.on(resultItem, 'click', function() {\n              onZoomToSite(site);\n              searchResultsContainer.style.display = 'none';\n              setSearchTerm('');\n              searchInput.value = '';\n            });\n          });\n        };\n        \n        // Mettre �  jour les r�sultats initiaux\n        updateSearchResults();\n        \n        // Mettre �  jour les r�sultats lorsqu'ils changent\n        const observer = new MutationObserver(() => {\n          updateSearchResults();\n        });\n        \n        L.DomEvent.on(searchInput, 'input', function(e) {\n          setSearchTerm((e.target as HTMLInputElement).value);\n          if ((e.target as HTMLInputElement).value) {\n            setSiteFilter((e.target as HTMLInputElement).value);\n          } else {\n            setSiteFilter(null);\n            searchResultsContainer.style.display = 'none';\n          }\n        });\n        \n        // Ajouter une option pour afficher/masquer les coordonn�es g�n�r�es\n        const generatedCoordsContainer = L.DomUtil.create('div', 'map-filter-option', filtersContainer);\n        const generatedCoordsCheckbox = L.DomUtil.create('input', '', generatedCoordsContainer);\n        generatedCoordsCheckbox.type = 'checkbox';\n        generatedCoordsCheckbox.id = 'show-generated-coords';\n        generatedCoordsCheckbox.checked = showGeneratedCoordinates;\n        \n        const generatedCoordsLabel = L.DomUtil.create('label', '', generatedCoordsContainer);\n        generatedCoordsLabel.htmlFor = 'show-generated-coords';\n        generatedCoordsLabel.textContent = 'Afficher les coordonn�es g�n�r�es';\n        \n        L.DomEvent.on(generatedCoordsCheckbox, 'change', function(e) {\n          setShowGeneratedCoordinates((e.target as HTMLInputElement).checked);\n        });\n        \n        // Bouton pour afficher/masquer les filtres\n        const filtersButton = L.DomUtil.create('a', 'leaflet-control-filters', container);\n        filtersButton.innerHTML = '<i class=\"fas fa-filter\"></i>';\n        filtersButton.href = '#';\n        filtersButton.title = 'Filtres avanc�s';\n        filtersButton.setAttribute('role', 'button');\n        filtersButton.setAttribute('aria-label', 'Filtres avanc�s');\n        \n        if (filtersVisible) {\n          filtersButton.classList.add('active');\n        }\n        \n        L.DomEvent.on(filtersButton, 'click', function(e) {\n          L.DomEvent.preventDefault(e);\n          setFiltersVisible(!filtersVisible);\n          filtersContainer.style.display = filtersVisible ? 'block' : 'none';\n          filtersButton.classList.toggle('active');\n        });\n        \n        // Emp�cher la propagation des �v�nements pour �viter que la carte ne se d�place\n        L.DomEvent.disableClickPropagation(container);\n        L.DomEvent.disableScrollPropagation(container);\n        \n        return container;\n      }\n    });\n    \n    // Ajouter le contr�le �  la carte\n    const mapControlsControl = new MapControlsControl();\n    map.addControl(mapControlsControl);\n    \n    return () => {\n      map.removeControl(mapControlsControl);\n    };\n  }, [map, showLabels, setShowLabels, sites, setSiteFilter, currentFilter, searchTerm, filtersVisible, \nshowGeneratedCoordinates, setShowGeneratedCoordinates, searchResults, onZoomToSite]);\n  \n  return null;\n};\n\n// Composant pour initialiser les �v�nements des couches\nconst LayersEventInitializer: React.FC = () => {\n  const map = useMap();\n  \n  useEffect(() => {\n    // Initialiser le contr�le des couches\n    const initLayersControl = () => {\n      const layersControl = document.querySelector('.leaflet-control-layers');\n      if (layersControl) {\n        // S'assurer que toutes les cases �  cocher sont coch�es par d�faut\n        const checkboxes = layersControl.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(checkbox => {\n          (checkbox as HTMLInputElement).checked = true;\n        });\n        \n        // D�clencher un �v�nement change sur chaque case �  cocher pour activer les couches\n        checkboxes.forEach(checkbox => {\n          const event = new Event('change', { bubbles: true });\n          (checkbox as HTMLInputElement).dispatchEvent(event);\n        });\n        \n        // Ajouter des s�parateurs visuels pour les sections\n        const overlaysContainer = layersControl.querySelector('.leaflet-control-layers-overlays');\n        if (overlaysContainer) {\n          const labels = overlaysContainer.querySelectorAll('label');\n          labels.forEach(label => {\n            const text = label.textContent?.trim();\n            if (text && text.startsWith('---')) {\n              // Cr�er un �l�ment de s�paration\n              const separator = document.createElement('div');\n              separator.className = 'layer-section-header';\n              separator.innerHTML = `<span>${text.replace(/^---\\s*/, '')}</span>`;\n              \n              // Remplacer le label par le s�parateur\n              label.parentNode?.replaceChild(separator, label);\n            }\n          });\n        }\n      } else {\n        // Si le contr�le n'est pas encore disponible, r�essayer plus tard\n        setTimeout(initLayersControl, 100);\n      }\n    };\n    \n    // Attendre que la carte soit charg�e avant d'initialiser le contr�le des couches\n    setTimeout(initLayersControl, 500);\n    \n    return () => {\n      // Nettoyer les �couteurs d'�v�nements si n�cessaire\n    };\n  }, [map]);\n  \n  return null;\n};\n\n// Composant pour corriger manuellement les coordonn�es d'un site\nconst ManualCoordinatesCorrection: React.FC<{\n  sites: Site[];\n  onCoordinatesUpdated: (siteId: string, latitude: number, longitude: number) => void;\n}> = ({ sites, onCoordinatesUpdated }) => {\n  const map = useMap();\n  const [isActive, setIsActive] = useState(false);\n  const [selectedSite, setSelectedSite] = useState<Site | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<Site[]>([]);\n  const markerRef = useRef<L.Marker | null>(null);\n  \n  // Filtrer les sites en fonction du terme de recherche\n  useEffect(() => {\n    if (!searchTerm) {\n      setSearchResults([]);\n      return;\n    }\n    \n    const normalizedSearch = searchTerm.toLowerCase();\n    const results = sites.filter(site => \n      site.nom?.toLowerCase().includes(normalizedSearch) ||\n      site.adresse?.toLowerCase().includes(normalizedSearch) ||\n      site.ville?.toLowerCase().includes(normalizedSearch) ||\n      site.codePostal?.includes(normalizedSearch)\n    ).slice(0, 10); // Limiter �  10 r�sultats\n    \n    setSearchResults(results);\n  }, [searchTerm, sites]);\n  \n  // Fonction pour s�lectionner un site\n  const selectSite = (site: Site) => {\n    setSelectedSite(site);\n    setSearchTerm('');\n    setSearchResults([]);\n    \n    if (site.latitude && site.longitude) {\n      // Centrer la carte sur le site\n      map.setView([site.latitude, site.longitude], 15);\n      \n      // Cr�er un marqueur d�pla�able\n      if (markerRef.current) {\n        map.removeLayer(markerRef.current);\n      }\n      \n      const marker = L.marker([site.latitude, site.longitude], {\n        draggable: true,\n        icon: L.divIcon({\n          className: 'correction-marker',\n          html: `<div style=\"background-color: red; width: 24px; height: 24px; border-radius: 50%; \ndisplay: flex; justify-content: center; align-items: center; box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\">\n                  <i class=\"fas fa-map-marker-alt\" style=\"color: white; font-size: 14px;\"></i>\n                </div>`,\n          iconSize: [24, 24],\n          iconAnchor: [12, 12]\n        })\n      }).addTo(map);\n      \n      // Ajouter un popup avec les informations du site\n      marker.bindPopup(`\n        <div>\n          <strong>${site.nom}</strong><br>\n          ${site.adresse}<br>\n          ${site.codePostal} ${site.ville || ''}\n        </div>\n      `).openPopup();\n      \n      // Mettre �  jour les coordonn�es lorsque le marqueur est d�plac�\n      marker.on('dragend', (e) => {\n        const newLatLng = marker.getLatLng();\n        console.log(`Nouvelles coordonn�es pour ${site.nom}: Lat=${newLatLng.lat}, Lng=${newLatLng.lng}`);\n      });\n      \n      markerRef.current = marker;\n    } else {\n      alert(`Le site \"${site.nom}\" n'a pas de coordonn�es. Veuillez d'abord le g�ocoder.`);\n    }\n  };\n  \n  // Fonction pour enregistrer les nouvelles coordonn�es\n  const saveCoordinates = () => {\n    if (selectedSite && markerRef.current) {\n      const newLatLng = markerRef.current.getLatLng();\n      onCoordinatesUpdated(selectedSite.id, newLatLng.lat, newLatLng.lng);\n      \n      // Afficher un message de confirmation\n      alert(`Les coordonn�es du site \"${selectedSite.nom}\" ont ét� mises �  jour.`);\n      \n      // R�initialiser\n      map.removeLayer(markerRef.current);\n      markerRef.current = null;\n      setSelectedSite(null);\n      setIsActive(false);\n    }\n  };\n  \n  // Fonction pour annuler la correction\n  const cancelCorrection = () => {\n    if (markerRef.current) {\n      map.removeLayer(markerRef.current);\n      markerRef.current = null;\n    }\n    \n    setSelectedSite(null);\n    setIsActive(false);\n  };\n  \n  useEffect(() => {\n    // Cr�er un contr�le personnalis�\n    const CorrectionControl = L.Control.extend({\n      options: {\n        position: 'topleft'\n      },\n      \n      onAdd: function() {\n        const container = L.DomUtil.create('div', 'leaflet-bar leaflet-control correction-control');\n        \n        \n        if (!isActive) {\n          // Bouton pour activer la correction\n          const button = L.DomUtil.create('a', 'correction-button', container);\n          button.innerHTML = '<i class=\"fas fa-map-marker-alt\"></i>';\n          button.href = '#';\n          button.title = 'Corriger les coordonn�es d\\'un site';\n          \n          L.DomEvent.on(button, 'click', function(e) {\n            L.DomEvent.preventDefault(e);\n            setIsActive(true);\n          });\n        } else {\n          // Interface de correction\n          const correctionPanel = L.DomUtil.create('div', 'correction-panel', container);\n          \n          // Titre\n          const title = L.DomUtil.create('div', 'correction-title', correctionPanel);\n          title.textContent = 'Correction de coordonn�es';\n          \n          // Champ de recherche\n          const searchContainer = L.DomUtil.create('div', 'correction-search', correctionPanel);\n          const searchInput = L.DomUtil.create('input', 'correction-search-input', searchContainer);\n          searchInput.type = 'text';\n          searchInput.placeholder = 'Rechercher un site...';\n          searchInput.value = searchTerm;\n          \n          L.DomEvent.on(searchInput, 'input', function(e) {\n            setSearchTerm((e.target as HTMLInputElement).value);\n          });\n          \n          // R�sultats de recherche\n          if (searchResults.length > 0) {\n            const resultsContainer = L.DomUtil.create('div', 'correction-results', correctionPanel);\n            \n            searchResults.forEach(site => {\n              const resultItem = L.DomUtil.create('div', 'correction-result-item', resultsContainer);\n              resultItem.textContent = site.nom;\n              \n              L.DomEvent.on(resultItem, 'click', function() {\n                selectSite(site);\n              });\n            });\n          }\n          \n          // Site s�lectionn�\n          if (selectedSite) {\n            const selectedContainer = L.DomUtil.create('div', 'correction-selected', correctionPanel);\n            \n            const siteInfo = L.DomUtil.create('div', 'correction-site-info', selectedContainer);\n            siteInfo.innerHTML = `\n              <strong>${selectedSite.nom}</strong><br>\n              ${selectedSite.adresse}<br>\n              ${selectedSite.codePostal} ${selectedSite.ville || ''}\n            `;\n            \n            const instructions = L.DomUtil.create('div', 'correction-instructions', selectedContainer);\n            instructions.textContent = 'D�placez le marqueur rouge � la position correcte, puis cliquez sur \"Enregistrer\".';\n            \n            const buttonsContainer = L.DomUtil.create('div', 'correction-buttons', selectedContainer);\n            \n            const saveButton = L.DomUtil.create('button', 'correction-save-button', buttonsContainer);\n            saveButton.textContent = 'Enregistrer';\n            \n            L.DomEvent.on(saveButton, 'click', function() {\n              saveCoordinates();\n            });\n            \n            const cancelButton = L.DomUtil.create('button', 'correction-cancel-button', buttonsContainer);\n            cancelButton.textContent = 'Annuler';\n            \n            L.DomEvent.on(cancelButton, 'click', function() {\n              cancelCorrection();\n            });\n          }\n          \n          // Bouton pour fermer le panneau\n          if (!selectedSite) {\n            const closeButton = L.DomUtil.create('button', 'correction-close-button', correctionPanel);\n            closeButton.textContent = 'Fermer';\n            \n            L.DomEvent.on(closeButton, 'click', function() {\n              setIsActive(false);\n            });\n          }\n        }\n        \n        // Emp�cher la propagation des �v�nements pour �viter que la carte ne se d�place\n        L.DomEvent.disableClickPropagation(container);\n        L.DomEvent.disableScrollPropagation(container);\n        \n        return container;\n      }\n    });\n    \n    // Ajouter le contr�le �  la carte\n    const correctionControl = new CorrectionControl();\n    map.addControl(correctionControl);\n    \n    return () => {\n      map.removeControl(correctionControl);\n      \n      if (markerRef.current) {\n        map.removeLayer(markerRef.current);\n        markerRef.current = null;\n      }\n    };\n  }, [map, isActive, searchTerm, searchResults, selectedSite, sites, onCoordinatesUpdated]);\n  \n  return null;\n};\n\n// Composant de marqueur m�mo�s�\nconst MemoizedMarker = React.memo<{ \n  site: Site, \n  markerPreferences: MarkerPreference[] \n}>(({ site, markerPreferences }) => {\n  // R�cup�rer l'ic�ne personnalis�e en fonction des pr�f�rences\n  const siteIcon = useMemo(() => {\n    const normalizedSiteType = normalizeType(site.type);\n    \n    const preference = markerPreferences.find(pref => \n      normalizeType(pref.siteType) === normalizedSiteType\n    );\n\n    if (preference) {\n      return L.divIcon({\n        className: 'custom-div-icon',\n        html: `\n          <div style=\"background-color: ${preference.color}; \n                      width: 24px; \n                      height: 24px; \n                      border-radius: 50%; \n                      display: flex; \n                      justify-content: center; \n                      align-items: center; \n                      box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\">\n            <i class=\"fas ${getIconClassForType(preference.icon)}\" \n               style=\"color: white; font-size: 14px;\"></i>\n          </div>\n        `,\n        iconSize: [24, 24],\n        iconAnchor: [12, 12]\n      });\n    }\n\n    return getDefaultIconForSiteType(site.type);\n  }, [site.type, markerPreferences]);\n\n  if (!site.latitude || !site.longitude) return null;\n\n  return (\n    <Marker \n      key={site.id}\n      position={[site.latitude, site.longitude] as L.LatLngTuple}\n      icon={siteIcon}\n    >\n      <Popup>\n        <div>\n          <strong>{site.nom}</strong>\n          <br />\n          {site.adresse}\n          <br />\n          {site.ville} {site.codePostal}\n          <br />\n          Type: {site.type}\n        </div>\n      </Popup>\n    </Marker>\n  );\n}, (prevProps, nextProps) => {\n  // Comparaison personnalis�e pour �viter les re-rendus inutiles\n  return (\n    prevProps.site.id === nextProps.site.id &&\n    prevProps.site.latitude === nextProps.site.latitude &&\n    prevProps.site.longitude === nextProps.site.longitude &&\n    prevProps.site.type === nextProps.site.type &&\n    JSON.stringify(prevProps.markerPreferences) === JSON.stringify(nextProps.markerPreferences)\n  );\n});\n\n// Composant de clustering dynamique\nconst SiteLayer: React.FC<{ \n  sites: Site[], \n  visibleTypes?: string[], \n  maxMarkers?: number \n}> = ({ \n  sites, \n  visibleTypes = [], \n  maxMarkers = 500 \n}) => {\n  const map = useMap();\n  const [currentZoom, setCurrentZoom] = useState(8);\n  const [visibleSites, setVisibleSites] = useState<Site[]>([]);\n  const [markerPreferences, setMarkerPreferences] = useState<MarkerPreference[]>([]);\n\n  // Mettre � jour le zoom lors des changements de la carte\n  useEffect(() => {\n    if (!map) return;\n\n    const updateZoom = () => {\n      setCurrentZoom(map.getZoom());\n    };\n\n    map.on('zoomend', updateZoom);\n    return () => {\n      map.off('zoomend', updateZoom);\n    };\n  }, [map]);\n\n  // Charger les pr�f�rences de marqueurs\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const preferencesRef = collection(db, 'markerPreferences');\n        const snapshot = await getDocs(preferencesRef);\n        \n        const preferencesData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as MarkerPreference[];\n        \n        setMarkerPreferences(preferencesData);\n      } catch (error) {\n        console.error('Erreur lors du chargement des pr�f�rences de marqueurs:', error);\n      }\n    };\n\n    fetchPreferences();\n  }, []);\n\n  // Filtrage et pagination des sites\n  const filteredSites = useMemo(() => {\n    return sites.filter(site => {\n      const normalizedSiteType = normalizeType(site.type);\n      \n      // Si aucun type n'est s�lectionn�, afficher tous les sites\n      if (visibleTypes.length === 0) {\n        return site.latitude && site.longitude;\n      }\n      \n      // V�rifier si le type de site est dans les types s�lectionn�s\n      const isTypeVisible = visibleTypes.some(selectedType => \n        normalizedSiteType === normalizeType(selectedType)\n      );\n      \n      return isTypeVisible && site.latitude && site.longitude;\n    });\n  }, [sites, visibleTypes]);\n\n  // Mettre � jour les sites visibles\n  useEffect(() => {\n    const sitesToShow = filteredSites.slice(0, maxMarkers);\n    setVisibleSites(sitesToShow);\n\n    // Ajuster la vue de la carte\n    if (map && sitesToShow.length > 0) {\n      const coordinates = sitesToShow\n        .map(site => [site.latitude, site.longitude])\n        .filter((coords): coords is [number, number] => \n          coords[0] !== undefined && \n          coords[1] !== undefined && \n          !isNaN(coords[0]) && \n          !isNaN(coords[1])\n        );\n      \n      if (coordinates.length > 0) {\n        const bounds = L.latLngBounds(coordinates);\n        map.fitBounds(bounds, { \n          padding: [50, 50],\n          maxZoom: 12\n        });\n      }\n    }\n  }, [filteredSites, map, maxMarkers]);\n\n  // Clustering personnalis�\n  const renderMarkers = useMemo(() => {\n    // Si le nombre de sites est faible, afficher tous les marqueurs\n    if (visibleSites.length <= 50) {\n      return visibleSites.map(site => (\n        <MemoizedMarker \n          key={site.id} \n          site={site} \n          markerPreferences={markerPreferences}\n        />\n      ));\n    }\n\n    // Clustering dynamique bas� sur le niveau de zoom\n    const currentZoom = map ? map.getZoom() : 8; // Zoom par d�faut\n    const clusterThreshold = 12; // Niveau de zoom o� le clustering commence � se d�sagr�ger\n    const clusterRadius = currentZoom < clusterThreshold \n      ? 0.2 // Rayon de clustering plus grand pour les zooms �loign�s\n      : 0.05; // Rayon plus petit pour un d�groupement plus pr�coce\n\n    const clusters: { [key: string]: Site[] } = {};\n\n    visibleSites.forEach(site => {\n      if (!site.latitude || !site.longitude) return;\n\n      let clustered = false;\n      for (const clusterKey in clusters) {\n        const [clusterLat, clusterLng] = clusterKey.split(',').map(Number);\n        const distance = Math.sqrt(\n          Math.pow(site.latitude - clusterLat, 2) + \n          Math.pow(site.longitude - clusterLng, 2)\n        );\n\n        // Ajuster la logique de clustering en fonction du zoom\n        if (distance < clusterRadius) {\n          clusters[clusterKey].push(site);\n          clustered = true;\n          break;\n        }\n      }\n\n      if (!clustered) {\n        const newClusterKey = `${site.latitude.toFixed(1)},${site.longitude.toFixed(1)}`;\n        clusters[newClusterKey] = [site];\n      }\n    });\n\n    // Rendu des clusters\n    return Object.entries(clusters).flatMap(([key, clusterSites]) => {\n      // D�grouper plus t�t si le zoom est suffisant\n      if (currentZoom >= clusterThreshold || clusterSites.length <= 3) {\n        return clusterSites.map(site => (\n          <MemoizedMarker \n            key={site.id} \n            site={site} \n            markerPreferences={markerPreferences}\n          />\n        ));\n      }\n\n      // Cluster avec plusieurs sites\n      const validSites = clusterSites.filter((site): site is Site => \n        site.latitude !== undefined && \n        site.longitude !== undefined\n      );\n\n      if (validSites.length === 0) return [];\n\n      const centerLat = validSites.reduce((sum, site) => sum + (site.latitude || 0), 0) / validSites.length;\n      const centerLng = validSites.reduce((sum, site) => sum + (site.longitude || 0), 0) / validSites.length;\n\n      // D�terminer l'ic�ne et la couleur du cluster\n      const clusterPreference = markerPreferences.find(pref => \n        normalizeType(pref.siteType) === \n        normalizeType(validSites[0].type)\n      );\n\n      return [\n        <Marker \n          key={`cluster-${key}`} \n          position={[centerLat, centerLng]}\n          icon={L.divIcon({\n            className: 'marker-cluster',\n            html: `\n              <div style=\"\n                background-color: ${clusterPreference?.color || 'gray'}; \n                width: 40px; \n                height: 40px; \n                border-radius: 50%; \n                display: flex; \n                justify-content: center; \n                align-items: center; \n                color: white; \n                font-weight: bold;\n                box-shadow: 0 0 5px rgba(0,0,0,0.3);\n                opacity: ${currentZoom < clusterThreshold ? 1 : 0.7};\n              \">\n                ${clusterSites.length}\n              </div>\n            `,\n            iconSize: L.point(40, 40)\n          })}\n        >\n          <Popup>\n            <div>\n              <strong>Cluster de {clusterSites.length} sites</strong>\n              <ul>\n                {clusterSites.slice(0, 5).map(site => (\n                  <li key={site.id}>{site.nom}</li>\n                ))}\n                {clusterSites.length > 5 && <li>... et {clusterSites.length - 5} autres</li>}\n              </ul>\n            </div>\n          </Popup>\n        </Marker>\n      ];\n    }); \n  }, [visibleSites, markerPreferences, map, currentZoom]);\n\n  return <>{renderMarkers}</>;\n};\n\nconst MapView: React.FC = () => {\n  const [sites, setSites] = useState<Site[]>([]);\n  const [selectedTypes, setSelectedTypes] = useState<string[]>([]);\n  const [markerPreferences, setMarkerPreferences] = useState<MarkerPreference[]>([]);\n  const mapRef = useRef<L.Map | null>(null);\n\n  // Charger les sites et les pr�f�rences de marqueurs\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Charger les sites\n        const sitesCollection = collection(db, 'sites');\n        const sitesSnapshot = await getDocs(sitesCollection);\n        const loadedSites = sitesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        } as Site));\n\n        // Filtrer les sites avec coordonn�es\n        const validSites = loadedSites.filter(site => \n          site.latitude && site.longitude\n        );\n\n        setSites(validSites);\n\n        // Charger les pr�f�rences de marqueurs\n        const preferencesRef = collection(db, 'markerPreferences');\n        const preferencesSnapshot = await getDocs(preferencesRef);\n        const preferencesData = preferencesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as MarkerPreference[];\n\n        setMarkerPreferences(preferencesData);\n      } catch (error) {\n        console.error('Erreur lors du chargement des donn�es:', error);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Gestion des types de sites s�lectionn�s\n  const handleTypeToggle = (type: string) => {\n    setSelectedTypes(prev => \n      prev.includes(type) \n        ? prev.filter(t => t !== type)\n        : [...prev, type]\n    );\n  };\n\n  return (\n    <MapContainer \n      center={[43.6, 3.8]} \n      zoom={8} \n      style={{ height: '100vh', width: '100%' }}\n      ref={(ref) => { mapRef.current = ref; }}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n\n      {/* Contr�le plein �cran */}\n      <FullscreenControl />\n\n      {/* L�gende des sites */}\n      <div style={{ \n        position: 'absolute', \n        bottom: '20px', \n        right: '20px', \n        zIndex: 1000, \n        background: 'white', \n        padding: '10px', \n        borderRadius: '5px',\n        boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n      }}>\n        <h4 style={{ margin: '0 0 10px 0', textAlign: 'center' }}>Types de sites</h4>\n        {SITE_TYPES.map(type => {\n          const normalizedType = normalizeType(type);\n          const preference = markerPreferences.find(pref => \n            normalizeType(pref.siteType) === normalizedType\n          );\n\n          return (\n            <div \n              key={type} \n              style={{ \n                display: 'flex', \n                alignItems: 'center', \n                marginBottom: '5px' \n              }}\n            >\n              <div \n                style={{ \n                  width: '20px', \n                  height: '20px', \n                  borderRadius: '50%', \n                  marginRight: '10px',\n                  backgroundColor: preference ? preference.color : 'gray',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                }}\n              >\n                {preference && (\n                  <i \n                    className={`fas ${getIconClassForType(preference.icon)}`} \n                    style={{ \n                      color: 'white', \n                      fontSize: '12px' \n                    }} \n                  />\n                )}\n              </div>\n              <span>{type}</span>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Contr�le de s�lection des types de sites */}\n      <div style={{ \n        position: 'absolute', \n        top: '10px', \n        right: '10px', \n        zIndex: 1000, \n        background: 'white', \n        padding: '10px', \n        borderRadius: '5px' \n      }}>\n        {SITE_TYPES.map(type => (\n          <label key={type} style={{ display: 'block' }}>\n            <input \n              type=\"checkbox\" \n              checked={selectedTypes.includes(normalizeType(type))}\n              onChange={() => handleTypeToggle(normalizeType(type))}\n            />\n            {type}\n          </label>\n        ))}\n      </div>\n\n      {/* Couche de sites avec optimisations */}\n      <SiteLayer \n        sites={sites} \n        visibleTypes={selectedTypes}\n        maxMarkers={500}\n      />\n    </MapContainer>\n  );\n};\n\n// Fonction pour obtenir la classe d'ic�ne FontAwesome en fonction du type\nconst getIconClassForType = (iconType: string): string => {\n  switch (iconType) {\n    case 'droplet':\n      return 'fa-tint';\n    case 'circle':\n      return 'fa-circle';\n    case 'square':\n      return 'fa-square';\n    case 'triangle':\n      return 'fa-exclamation-triangle';\n    case 'star':\n      return 'fa-star';\n    case 'pin':\n      return 'fa-map-marker-alt';\n    default:\n      return 'fa-tint';\n  }\n};\n\n// Extension du prototype de Marker pour ajouter slideTo\ndeclare module 'leaflet' {\n  interface Marker {\n    slideTo(latlng: L.LatLng, options?: { duration?: number; keepAtCenter?: boolean }): void;\n  }\n}\n\nL.Marker.prototype.slideTo = function(latlng: L.LatLng, options: { duration?: number; keepAtCenter?: boolean } = {}) {\n  const duration = options.duration || 1000;\n  const keepAtCenter = options.keepAtCenter || false;\n  \n  const start = this.getLatLng();\n  const startTime = performance.now();\n  \n  const animate = (currentTime: number) => {\n    const elapsed = currentTime - startTime;\n    const progress = Math.min(elapsed / duration, 1);\n    \n    const lat = start.lat + (latlng.lat - start.lat) * progress;\n    const lng = start.lng + (latlng.lng - start.lng) * progress;\n    \n    this.setLatLng([lat, lng]);\n    \n    if (keepAtCenter) {\n      this._map?.setView([lat, lng]);\n    }\n    \n    if (progress < 1) {\n      requestAnimationFrame(animate);\n    }\n  };\n  \n  requestAnimationFrame(animate);\n};\n\nexport default MapView; \n\n\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}