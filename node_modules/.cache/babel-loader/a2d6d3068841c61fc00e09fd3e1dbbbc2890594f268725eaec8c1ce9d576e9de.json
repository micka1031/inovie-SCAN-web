{"ast":null,"code":"import{createUserWithEmailAndPassword,sendPasswordResetEmail}from'firebase/auth';import{collection,addDoc}from'firebase/firestore';import{db,auth,PRODUCTION_URL}from'../config/firebase';/**\n * Génère un mot de passe temporaire complexe\n * Format: 2 majuscules + 2 minuscules + 2 chiffres + 1 caractère spécial\n * Exemple: AB12cd!\n */export const generateTempPassword=()=>{const uppercaseChars='ABCDEFGHIJKLMNOPQRSTUVWXYZ';const lowercaseChars='abcdefghijklmnopqrstuvwxyz';const numbers='0123456789';const specialChars='!@#$%&*-_=+';let password='';// Ajouter 2 lettres majuscules\nfor(let i=0;i<2;i++){password+=uppercaseChars.charAt(Math.floor(Math.random()*uppercaseChars.length));}// Ajouter 2 chiffres\nfor(let i=0;i<2;i++){password+=numbers.charAt(Math.floor(Math.random()*numbers.length));}// Ajouter 2 lettres minuscules\nfor(let i=0;i<2;i++){password+=lowercaseChars.charAt(Math.floor(Math.random()*lowercaseChars.length));}// Ajouter 1 caractère spécial\npassword+=specialChars.charAt(Math.floor(Math.random()*specialChars.length));// Mélanger le mot de passe (Fisher-Yates shuffle)\nconst passwordArray=password.split('');for(let i=passwordArray.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[passwordArray[i],passwordArray[j]]=[passwordArray[j],passwordArray[i]];}return passwordArray.join('');};/**\n * Crée un nouvel utilisateur sans déconnecter l'administrateur actuel\n */export const createUserWithoutSignOut=async userData=>{try{console.log('Début de la création d\\'un nouvel utilisateur:',userData.email);// Créer l'utilisateur dans Firebase Auth avec un mot de passe aléatoire\nconst tempPassword=generateTempPassword();console.log('Mot de passe temporaire généré');const userCredential=await createUserWithEmailAndPassword(auth,userData.email,tempPassword);const uid=userCredential.user.uid;console.log('Utilisateur créé dans Firebase Auth avec UID:',uid);// Configuration personnalisée pour l'email de réinitialisation\nconst resetActionCodeSettings={// URL de redirection après la réinitialisation du mot de passe\nurl:PRODUCTION_URL+`/login?email=${encodeURIComponent(userData.email)}&newUser=true&nom=${encodeURIComponent(userData.nom)}`,// Activer la gestion du code dans l'application\nhandleCodeInApp:true};// Envoyer l'email de réinitialisation de mot de passe\nconsole.log('Envoi de l\\'email de réinitialisation à:',userData.email);await sendPasswordResetEmail(auth,userData.email,resetActionCodeSettings);console.log('Email de réinitialisation envoyé avec succès');// Créer le document utilisateur dans Firestore\nconst userDocRef=await addDoc(collection(db,'users'),{...userData,uid:uid,identifiant:uid,createdAt:new Date().toISOString()});console.log('Document utilisateur créé dans Firestore avec ID:',userDocRef.id);return{success:true,docId:userDocRef.id,uid:uid};}catch(error){console.error('Erreur lors de la création de l\\'utilisateur:',error);return{success:false,error:error};}};","map":{"version":3,"names":["createUserWithEmailAndPassword","sendPasswordResetEmail","collection","addDoc","db","auth","PRODUCTION_URL","generateTempPassword","uppercaseChars","lowercaseChars","numbers","specialChars","password","i","charAt","Math","floor","random","length","passwordArray","split","j","join","createUserWithoutSignOut","userData","console","log","email","tempPassword","userCredential","uid","user","resetActionCodeSettings","url","encodeURIComponent","nom","handleCodeInApp","userDocRef","identifiant","createdAt","Date","toISOString","id","success","docId","error"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/services/userService.ts"],"sourcesContent":["import { \n  createUserWithEmailAndPassword, \n  sendPasswordResetEmail,\n  signInWithEmailAndPassword\n} from 'firebase/auth';\nimport { \n  collection, \n  addDoc, \n  updateDoc, \n  doc, \n  deleteDoc \n} from 'firebase/firestore';\nimport { \n  db, \n  auth, \n  PRODUCTION_URL,\n  actionCodeSettings \n} from '../config/firebase';\n\ninterface UserData {\n  email: string;\n  nom: string;\n  role: string;\n  pole: string;\n  statut: string;\n  [key: string]: any;\n}\n\ninterface AdminCredentials {\n  email: string;\n  password: string;\n}\n\ninterface CreateUserResult {\n  success: boolean;\n  uid?: string;\n  docId?: string;\n  error?: any;\n}\n\n/**\n * Génère un mot de passe temporaire complexe\n * Format: 2 majuscules + 2 minuscules + 2 chiffres + 1 caractère spécial\n * Exemple: AB12cd!\n */\nexport const generateTempPassword = (): string => {\n  const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '0123456789';\n  const specialChars = '!@#$%&*-_=+';\n  \n  let password = '';\n  \n  // Ajouter 2 lettres majuscules\n  for (let i = 0; i < 2; i++) {\n    password += uppercaseChars.charAt(Math.floor(Math.random() * uppercaseChars.length));\n  }\n  \n  // Ajouter 2 chiffres\n  for (let i = 0; i < 2; i++) {\n    password += numbers.charAt(Math.floor(Math.random() * numbers.length));\n  }\n  \n  // Ajouter 2 lettres minuscules\n  for (let i = 0; i < 2; i++) {\n    password += lowercaseChars.charAt(Math.floor(Math.random() * lowercaseChars.length));\n  }\n  \n  // Ajouter 1 caractère spécial\n  password += specialChars.charAt(Math.floor(Math.random() * specialChars.length));\n  \n  // Mélanger le mot de passe (Fisher-Yates shuffle)\n  const passwordArray = password.split('');\n  for (let i = passwordArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [passwordArray[i], passwordArray[j]] = [passwordArray[j], passwordArray[i]];\n  }\n  \n  return passwordArray.join('');\n};\n\n/**\n * Crée un nouvel utilisateur sans déconnecter l'administrateur actuel\n */\nexport const createUserWithoutSignOut = async (userData: UserData): Promise<CreateUserResult> => {\n  try {\n    console.log('Début de la création d\\'un nouvel utilisateur:', userData.email);\n    \n    // Créer l'utilisateur dans Firebase Auth avec un mot de passe aléatoire\n    const tempPassword = generateTempPassword();\n    console.log('Mot de passe temporaire généré');\n    \n    const userCredential = await createUserWithEmailAndPassword(auth, userData.email, tempPassword);\n    const uid = userCredential.user.uid;\n    console.log('Utilisateur créé dans Firebase Auth avec UID:', uid);\n\n    // Configuration personnalisée pour l'email de réinitialisation\n    const resetActionCodeSettings = {\n      // URL de redirection après la réinitialisation du mot de passe\n      url: PRODUCTION_URL + `/login?email=${encodeURIComponent(userData.email)}&newUser=true&nom=${encodeURIComponent(userData.nom)}`,\n      // Activer la gestion du code dans l'application\n      handleCodeInApp: true\n    };\n    \n    // Envoyer l'email de réinitialisation de mot de passe\n    console.log('Envoi de l\\'email de réinitialisation à:', userData.email);\n    await sendPasswordResetEmail(auth, userData.email, resetActionCodeSettings);\n    console.log('Email de réinitialisation envoyé avec succès');\n\n    // Créer le document utilisateur dans Firestore\n    const userDocRef = await addDoc(collection(db, 'users'), {\n      ...userData,\n      uid: uid,\n      identifiant: uid,\n      createdAt: new Date().toISOString()\n    });\n    console.log('Document utilisateur créé dans Firestore avec ID:', userDocRef.id);\n\n    return {\n      success: true,\n      docId: userDocRef.id,\n      uid: uid\n    };\n  } catch (error) {\n    console.error('Erreur lors de la création de l\\'utilisateur:', error);\n    return {\n      success: false,\n      error: error as Error\n    };\n  }\n}; \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}