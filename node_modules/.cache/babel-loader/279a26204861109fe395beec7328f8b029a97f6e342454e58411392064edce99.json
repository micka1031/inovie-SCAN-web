{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{hasPageAccess}from'../utils/pageAccessUtils';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";/**\n * Composant pour prot√©ger les routes en fonction du r√¥le de l'utilisateur, des permissions et de l'acc√®s aux pages\n * @param children - Le composant √† afficher si l'utilisateur a acc√®s\n * @param userRole - Le r√¥le de l'utilisateur actuel\n * @param allowedRoles - Les r√¥les autoris√©s √† acc√©der √† cette route\n * @param requiredPermissions - Les permissions requises pour acc√©der √† cette route\n * @param pageName - Le nom de la page pour v√©rifier l'acc√®s sp√©cifique\n * @param roles - Liste des r√¥les disponibles\n */const ProtectedRoute=_ref=>{let{children,userRole,allowedRoles,requiredPermissions=[],pageName,roles}=_ref;const{currentUser,hasPermission,isAllowedRoute}=useAuth();const location=useLocation();const[accessChecked,setAccessChecked]=useState(false);const[hasAccess,setHasAccess]=useState(false);// Helper pour v√©rifier en toute s√©curit√© l'acc√®s √† une page pour un r√¥le\nconst checkPageAccess=(role,page)=>{var _role$pageAccess;if(!role||!page)return false;if(role.isAdmin===true)return true;// Convertir pageName en cl√© de pageAccess de mani√®re s√ªre\nconst pageKey=page.toLowerCase();return((_role$pageAccess=role.pageAccess)===null||_role$pageAccess===void 0?void 0:_role$pageAccess[pageKey])===true;};useEffect(()=>{// V√©rifier si l'utilisateur a le r√¥le requis\nconst hasRole=allowedRoles.includes(userRole)||allowedRoles.includes('default');// V√©rifier si l'utilisateur a toutes les permissions requises\nconst hasAllPermissions=requiredPermissions.length===0||requiredPermissions.every(permission=>hasPermission(permission));// V√©rifier si l'utilisateur est autoris√© √† acc√©der √† cette route\nconst hasRouteAccess=isAllowedRoute(location.pathname);// V√©rifier l'acc√®s sp√©cifique √† la page si un nom de page est fourni\nconst hasPageSpecificAccess=pageName?hasPageAccess(currentUser,pageName,roles):true;// D√©bogage avanc√© pour les probl√®mes d'acc√®s\nconsole.log('V√âRIFICATION D\\'ACC√àS D√âTAILL√âE:',{url:location.pathname,page:pageName,userRole:userRole,allowedRoles:allowedRoles,hasRole:hasRole,requiredPermissions:requiredPermissions,userPermissions:(currentUser===null||currentUser===void 0?void 0:currentUser.permissions)||[],hasAllPermissions:hasAllPermissions,hasRouteAccess:hasRouteAccess,// V√©rification sp√©cifique de l'acc√®s √† la page\npageAccessCheck:{pageName:pageName,allRoles:roles.map(r=>({name:r.name,pageAccess:r.pageAccess})),userRoleObject:roles.find(role=>role.name===userRole),hasPageAccess:pageName?checkPageAccess(roles.find(role=>role.name===userRole),pageName):true},hasPageSpecificAccess:hasPageSpecificAccess,currentUser:{...currentUser,role:currentUser===null||currentUser===void 0?void 0:currentUser.role}});console.log(`üîë D√âCISION FINALE pour ${location.pathname} (${pageName||'sans nom de page'}):`);console.log(`- R√¥le autoris√©: ${hasRole?'OUI':'NON'} (${userRole} dans [${allowedRoles.join(', ')}])`);console.log(`- Permissions requises: ${hasAllPermissions?'OUI':'NON'} (${requiredPermissions.join(', ')})`);console.log(`- Acc√®s sp√©cifique √† la page: ${hasPageSpecificAccess?'OUI':'NON'}`);console.log(`- Route autoris√©e: ${hasRouteAccess?'OUI':'NON'}`);console.log(`- R√©sultat final: ${hasRole&&hasAllPermissions&&hasPageSpecificAccess||hasRouteAccess?'‚úÖ ACC√àS AUTORIS√â':'‚ùå ACC√àS REFUS√â'}`);// Si l'utilisateur a le r√¥le requis, toutes les permissions requises, acc√®s √† la route et acc√®s √† la page, accorder l'acc√®s\nsetHasAccess(hasRole&&hasAllPermissions&&hasPageSpecificAccess||hasRouteAccess);setAccessChecked(true);},[userRole,currentUser,location.pathname,roles,allowedRoles,requiredPermissions,pageName,hasPermission,isAllowedRoute]);// Attendre que la v√©rification d'acc√®s soit termin√©e\nif(!accessChecked){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"V\\xE9rification des permissions...\"})]});}// Si l'acc√®s est accord√©, afficher le composant enfant\nif(hasAccess){return/*#__PURE__*/_jsx(_Fragment,{children:children});}// Pour que l'utilisateur puisse bien comprendre pourquoi l'acc√®s est refus√©\nconsole.log('ACC√àS REFUS√â - Redirection vers la page d\\'accueil');// Sinon, rediriger vers la page d'accueil\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});};export default ProtectedRoute;","map":{"version":3,"names":["React","useState","useEffect","Navigate","useLocation","useAuth","hasPageAccess","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProtectedRoute","_ref","children","userRole","allowedRoles","requiredPermissions","pageName","roles","currentUser","hasPermission","isAllowedRoute","location","accessChecked","setAccessChecked","hasAccess","setHasAccess","checkPageAccess","role","page","_role$pageAccess","isAdmin","pageKey","toLowerCase","pageAccess","hasRole","includes","hasAllPermissions","length","every","permission","hasRouteAccess","pathname","hasPageSpecificAccess","console","log","url","userPermissions","permissions","pageAccessCheck","allRoles","map","r","name","userRoleObject","find","join","className","to","replace"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { hasPageAccess, PAGES, PageName } from '../utils/pageAccessUtils';\nimport { Role } from '../types/roles';\nimport { RoleService } from '../services/RoleService';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  userRole: string;\n  allowedRoles: string[];\n  requiredPermissions?: string[];\n  pageName?: PageName;\n  roles: Role[];\n}\n\n/**\n * Composant pour prot√©ger les routes en fonction du r√¥le de l'utilisateur, des permissions et de l'acc√®s aux pages\n * @param children - Le composant √† afficher si l'utilisateur a acc√®s\n * @param userRole - Le r√¥le de l'utilisateur actuel\n * @param allowedRoles - Les r√¥les autoris√©s √† acc√©der √† cette route\n * @param requiredPermissions - Les permissions requises pour acc√©der √† cette route\n * @param pageName - Le nom de la page pour v√©rifier l'acc√®s sp√©cifique\n * @param roles - Liste des r√¥les disponibles\n */\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \n  children, \n  userRole, \n  allowedRoles,\n  requiredPermissions = [],\n  pageName,\n  roles\n}) => {\n  const { currentUser, hasPermission, isAllowedRoute } = useAuth();\n  const location = useLocation();\n  const [accessChecked, setAccessChecked] = useState(false);\n  const [hasAccess, setHasAccess] = useState(false);\n  \n  // Helper pour v√©rifier en toute s√©curit√© l'acc√®s √† une page pour un r√¥le\n  const checkPageAccess = (role: Role | undefined, page: PageName | undefined): boolean => {\n    if (!role || !page) return false;\n    \n    if (role.isAdmin === true) return true;\n    \n    // Convertir pageName en cl√© de pageAccess de mani√®re s√ªre\n    const pageKey = page.toLowerCase() as keyof typeof role.pageAccess;\n    return role.pageAccess?.[pageKey] === true;\n  };\n  \n  useEffect(() => {\n    // V√©rifier si l'utilisateur a le r√¥le requis\n    const hasRole = allowedRoles.includes(userRole) || allowedRoles.includes('default');\n    \n    // V√©rifier si l'utilisateur a toutes les permissions requises\n    const hasAllPermissions = requiredPermissions.length === 0 || \n      requiredPermissions.every(permission => hasPermission(permission));\n      \n    // V√©rifier si l'utilisateur est autoris√© √† acc√©der √† cette route\n    const hasRouteAccess = isAllowedRoute(location.pathname);\n    \n    // V√©rifier l'acc√®s sp√©cifique √† la page si un nom de page est fourni\n    const hasPageSpecificAccess = pageName \n      ? hasPageAccess(currentUser, pageName, roles) \n      : true;\n    \n    // D√©bogage avanc√© pour les probl√®mes d'acc√®s\n    console.log('V√âRIFICATION D\\'ACC√àS D√âTAILL√âE:', {\n      url: location.pathname,\n      page: pageName,\n      userRole: userRole,\n      allowedRoles: allowedRoles,\n      hasRole: hasRole,\n      \n      requiredPermissions: requiredPermissions,\n      userPermissions: currentUser?.permissions || [],\n      hasAllPermissions: hasAllPermissions,\n      \n      hasRouteAccess: hasRouteAccess,\n      \n      // V√©rification sp√©cifique de l'acc√®s √† la page\n      pageAccessCheck: {\n        pageName: pageName,\n        allRoles: roles.map(r => ({name: r.name, pageAccess: r.pageAccess})),\n        userRoleObject: roles.find(role => role.name === userRole),\n        hasPageAccess: pageName ? checkPageAccess(roles.find(role => role.name === userRole), pageName) : true\n      },\n      \n      hasPageSpecificAccess: hasPageSpecificAccess,\n      \n      currentUser: {\n        ...currentUser,\n        role: currentUser?.role\n      }\n    });\n    \n    console.log(`üîë D√âCISION FINALE pour ${location.pathname} (${pageName || 'sans nom de page'}):`);\n    console.log(`- R√¥le autoris√©: ${hasRole ? 'OUI' : 'NON'} (${userRole} dans [${allowedRoles.join(', ')}])`);\n    console.log(`- Permissions requises: ${hasAllPermissions ? 'OUI' : 'NON'} (${requiredPermissions.join(', ')})`);\n    console.log(`- Acc√®s sp√©cifique √† la page: ${hasPageSpecificAccess ? 'OUI' : 'NON'}`);\n    console.log(`- Route autoris√©e: ${hasRouteAccess ? 'OUI' : 'NON'}`);\n    console.log(`- R√©sultat final: ${(hasRole && hasAllPermissions && hasPageSpecificAccess) || hasRouteAccess ? '‚úÖ ACC√àS AUTORIS√â' : '‚ùå ACC√àS REFUS√â'}`);\n    \n    // Si l'utilisateur a le r√¥le requis, toutes les permissions requises, acc√®s √† la route et acc√®s √† la page, accorder l'acc√®s\n    setHasAccess((hasRole && hasAllPermissions && hasPageSpecificAccess) || hasRouteAccess);\n    setAccessChecked(true);\n    \n  }, [userRole, currentUser, location.pathname, roles, allowedRoles, requiredPermissions, pageName, hasPermission, isAllowedRoute]);\n  \n  // Attendre que la v√©rification d'acc√®s soit termin√©e\n  if (!accessChecked) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>V√©rification des permissions...</p>\n      </div>\n    );\n  }\n  \n  // Si l'acc√®s est accord√©, afficher le composant enfant\n  if (hasAccess) {\n    return <>{children}</>;\n  }\n\n  // Pour que l'utilisateur puisse bien comprendre pourquoi l'acc√®s est refus√©\n  console.log('ACC√àS REFUS√â - Redirection vers la page d\\'accueil');\n\n  // Sinon, rediriger vers la page d'accueil\n  return <Navigate to=\"/\" replace />;\n};\n\nexport default ProtectedRoute;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}