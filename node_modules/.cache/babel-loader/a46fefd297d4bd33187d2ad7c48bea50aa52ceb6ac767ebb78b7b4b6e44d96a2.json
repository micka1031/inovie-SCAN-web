{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\SELASManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Checkbox, Select, Switch, Input, Tag, Tooltip } from 'antd';\nimport { FaEdit, FaPlus, FaSave, FaTimes, FaTrash, FaCheckCircle, FaUser } from 'react-icons/fa';\nimport { SELASService } from '../services/SELASService';\nimport { collection, getDocs, updateDoc, doc, query, where } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { db } from '../config/firebase';\nimport './SELASManagement.css';\nimport './DataTable.css';\nimport './EditMode.css';\n\n// Type pour les utilisateurs\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SELASManagement = () => {\n  _s();\n  const [selas, setSelas] = useState([]);\n  const [filteredSelas, setFilteredSelas] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [editingSelas, setEditingSelas] = useState({});\n  const [newSelas, setNewSelas] = useState(null);\n  const [selectedSelas, setSelectedSelas] = useState([]);\n  const [quickSearch, setQuickSearch] = useState('');\n  const [adminAction, setAdminAction] = useState('default');\n  const [bulkActionType, setBulkActionType] = useState('activate');\n\n  // Nouvel état pour les utilisateurs disponibles\n  const [availableUsers, setAvailableUsers] = useState([]);\n  const selasService = SELASService.getInstance();\n  useEffect(() => {\n    fetchSELAS();\n  }, []);\n\n  // Initialiser les SELAS filtrées au chargement\n  useEffect(() => {\n    setFilteredSelas(selas);\n  }, [selas]);\n\n  // Effet pour filtrer les SELAS en fonction de la recherche rapide\n  useEffect(() => {\n    if (!quickSearch.trim()) {\n      setFilteredSelas(selas);\n      return;\n    }\n    const searchTerm = quickSearch.toLowerCase().trim();\n    const results = selas.filter(sela => {\n      return (sela.nom || '').toLowerCase().includes(searchTerm) || (sela.description || '').toLowerCase().includes(searchTerm) || (sela.code || '').toLowerCase().includes(searchTerm);\n    });\n    setFilteredSelas(results);\n  }, [quickSearch, selas]);\n\n  // Ajouter l'effet pour charger les utilisateurs\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchSELAS = async () => {\n    try {\n      setLoading(true);\n      const selasData = await selasService.getSELAS();\n      setSelas(selasData);\n      setLoading(false);\n    } catch (err) {\n      setError('Erreur lors du chargement des SELAS');\n      setLoading(false);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      // Récupérer tous les utilisateurs depuis Firestore\n      const usersCollection = collection(db, 'users');\n      const usersSnapshot = await getDocs(usersCollection);\n      const usersList = usersSnapshot.docs.filter(doc => doc.data().statut !== 'Inactif') // Optionnel: filtrer les utilisateurs inactifs\n      .map(doc => ({\n        id: doc.id,\n        nom: doc.data().nom || 'Sans nom',\n        email: doc.data().email || '',\n        role: doc.data().role || ''\n      }));\n      setAvailableUsers(usersList);\n      console.log('Utilisateurs chargés:', usersList.length);\n    } catch (error) {\n      console.error('Erreur lors du chargement des utilisateurs:', error);\n      setError('Erreur lors du chargement des utilisateurs');\n    }\n  };\n  const handleEdit = (id, field, value) => {\n    // Si c'est la nouvelle SELAS temporaire, mettre à jour l'état newSelas\n    if (id === 'new-selas-temp') {\n      handleNewSelasChange(field, value);\n      return;\n    }\n\n    // Sinon, mettre à jour une SELAS existante\n    setSelas(prev => prev.map(sela => sela.id === id ? {\n      ...sela,\n      [field]: value\n    } : sela));\n  };\n  const handleNewSelasChange = (field, value) => {\n    setNewSelas(prev => {\n      const updated = {\n        ...(prev || {})\n      };\n      if (field.startsWith('accesPages.')) {\n        const pageKey = field.split('.')[1];\n        updated.accesPages = {\n          ...(updated.accesPages || {\n            dashboard: true,\n            passages: false,\n            sites: false,\n            tournees: false,\n            vehicules: false,\n            map: false,\n            userManagement: false,\n            adminPanel: false\n          }),\n          [pageKey]: value\n        };\n      } else {\n        // Type-safe key check\n        const selasKeys = ['nom', 'description', 'code', 'active', 'sitesAutorises'];\n        const typedField = field;\n        if (selasKeys.includes(typedField)) {\n          updated[typedField] = value;\n        }\n      }\n      return updated;\n    });\n  };\n  const handleSaveChanges = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Mettre à jour les SELAS existantes\n      const updatePromises = selas.map(sela => selasService.updateSELAS(sela.id, sela));\n\n      // Ajouter une nouvelle SELAS si nécessaire\n      if (newSelas && newSelas.nom) {\n        // Valider les champs obligatoires\n        if (!newSelas.nom) {\n          setError('Le nom de la SELAS est obligatoire');\n          setLoading(false);\n          return;\n        }\n\n        // Préparer l'objet avec les valeurs par défaut pour les champs manquants\n        const completeSelas = {\n          nom: newSelas.nom,\n          description: newSelas.description || '',\n          code: newSelas.code || '',\n          active: newSelas.active !== undefined ? newSelas.active : true,\n          accesPages: newSelas.accesPages || {\n            dashboard: true,\n            passages: false,\n            sites: false,\n            tournees: false,\n            vehicules: false,\n            map: false,\n            userManagement: false,\n            adminPanel: false\n          },\n          sitesAutorises: newSelas.sitesAutorises || []\n        };\n        await selasService.addSELAS(completeSelas);\n      }\n\n      // Attendre que toutes les mises à jour soient terminées\n      await Promise.all(updatePromises);\n\n      // Réinitialiser les états\n      setEditMode(false);\n      setEditingSelas({});\n      setNewSelas(null);\n      setSelectedSelas([]);\n\n      // Recharger les données\n      await fetchSELAS();\n    } catch (err) {\n      setError('Erreur lors de la sauvegarde des modifications');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditMode(false);\n    setEditingSelas({});\n    setNewSelas(null);\n    setSelectedSelas([]);\n  };\n  const handleDeleteSelected = async () => {\n    if (!window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedSelas.length} SELAS ?`)) {\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const deletePromises = selectedSelas.map(id => selasService.deleteSELAS(id));\n      await Promise.all(deletePromises);\n      setEditMode(false);\n      setSelectedSelas([]);\n      await fetchSELAS();\n    } catch (err) {\n      setError('Erreur lors de la suppression des SELAS');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleSelectSelas = id => {\n    // Si c'est la nouvelle SELAS temporaire, ne rien faire car elle n'est pas encore sauvegardée\n    if (id === 'new-selas-temp') {\n      return;\n    }\n    setSelectedSelas(prev => prev.includes(id) ? prev.filter(selasId => selasId !== id) : [...prev, id]);\n  };\n  const toggleSelectAll = () => {\n    if (selectedSelas.length === filteredSelas.length) {\n      setSelectedSelas([]);\n    } else {\n      setSelectedSelas(filteredSelas.map(sela => sela.id));\n    }\n  };\n  const selasToRender = [...filteredSelas];\n\n  // Après cette ligne, ajoutons la nouvelle SELAS au tableau s'il y en a une\n  if (editMode && newSelas) {\n    // Créer un objet SELAS temporaire pour l'affichage\n    const tempNewSelas = {\n      id: 'new-selas-temp',\n      // ID temporaire\n      nom: newSelas.nom || '',\n      description: newSelas.description || '',\n      code: newSelas.code || '',\n      active: newSelas.active !== undefined ? newSelas.active : true,\n      accesPages: newSelas.accesPages || {\n        dashboard: true,\n        passages: false,\n        sites: false,\n        tournees: false,\n        vehicules: false,\n        map: false,\n        userManagement: false,\n        adminPanel: false\n      },\n      sitesAutorises: newSelas.sitesAutorises || [],\n      dateCreation: new Date().toISOString(),\n      dateModification: new Date().toISOString()\n    };\n\n    // Si tempNewSelas a besoin de la propriété utilisateurs (qui semble ne pas être définie dans le type SELAS),\n    // nous devons l'ajouter à l'objet après sa création, en utilisant une assertion de type\n    tempNewSelas.utilisateurs = [];\n\n    // Ajouter la nouvelle SELAS en haut du tableau\n    selasToRender.unshift(tempNewSelas);\n  }\n  const handleBulkAction = async () => {\n    try {\n      setLoading(true);\n      switch (bulkActionType) {\n        case 'activate':\n          await Promise.all(selectedSelas.map(id => selasService.updateSELAS(id, {\n            active: true\n          })));\n          break;\n        case 'deactivate':\n          await Promise.all(selectedSelas.map(id => selasService.updateSELAS(id, {\n            active: false\n          })));\n          break;\n        case 'delete':\n          await Promise.all(selectedSelas.map(id => selasService.deleteSELAS(id)));\n          break;\n      }\n      await fetchSELAS();\n      setSelectedSelas([]);\n      setAdminAction('default');\n    } catch (err) {\n      setError(`Erreur lors de l'action de masse`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleExportSELAS = async () => {\n    try {\n      const exportData = await selasService.exportSELAS(selectedSelas);\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n        type: 'application/json'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'selas_export.json';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      setError('Erreur lors de l\\'exportation des SELAS');\n    }\n  };\n  const renderAdminSection = () => {\n    if (!editMode) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Actions d'administration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), adminAction === 'default' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setAdminAction('bulk'),\n          disabled: selectedSelas.length === 0,\n          children: \"Actions de masse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setAdminAction('export'),\n          disabled: selectedSelas.length === 0,\n          children: \"Exporter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), adminAction === 'bulk' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: bulkActionType,\n          onChange: e => setBulkActionType(e.target.value),\n          title: \"S\\xE9lectionner une action de masse\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"activate\",\n            children: \"Activer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"deactivate\",\n            children: \"D\\xE9sactiver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"delete\",\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleBulkAction,\n          children: \"Appliquer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setAdminAction('default'),\n          children: \"Annuler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), adminAction === 'export' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleExportSELAS,\n          children: \"Confirmer l'exportation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setAdminAction('default'),\n          children: \"Annuler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Nouvelle fonction pour définir la SELAS par défaut\n  const handleSetDefaultSELAS = async selasId => {\n    try {\n      // Récupérer l'ID de l'utilisateur connecté\n      const auth = getAuth();\n      const currentUser = auth.currentUser;\n      if (!currentUser || !currentUser.uid) {\n        alert('Vous devez être connecté pour effectuer cette action');\n        return;\n      }\n\n      // Trouver l'utilisateur dans Firestore et mettre à jour son SELAS par défaut\n      const usersRef = collection(db, 'users');\n      const userQuery = query(usersRef, where('uid', '==', currentUser.uid));\n      const querySnapshot = await getDocs(userQuery);\n      if (querySnapshot.empty) {\n        alert('Votre profil utilisateur n\\'a pas été trouvé');\n        return;\n      }\n      const userDoc = querySnapshot.docs[0];\n      await updateDoc(doc(db, 'users', userDoc.id), {\n        defaultSelasId: selasId,\n        lastUpdated: new Date().toISOString()\n      });\n\n      // Afficher un message de succès\n      alert(`SELAS définie comme SELAS par défaut avec succès`);\n\n      // Mettre à jour localStorage pour une expérience utilisateur immédiate\n      localStorage.setItem('currentSelasId', selasId);\n    } catch (error) {\n      // Gérer les erreurs\n      console.error('Erreur lors de la définition de la SELAS par défaut:', error);\n      setError('Impossible de définir la SELAS par défaut');\n      alert('Impossible de définir la SELAS par défaut');\n    }\n  };\n\n  // Mappings pour les noms d'accès\n  const accessPageNames = {\n    dashboard: 'Tableau de bord',\n    passages: 'Passages',\n    sites: 'Sites',\n    tournees: 'Tournées',\n    vehicules: 'Véhicules',\n    map: 'Carte',\n    userManagement: 'Gestion utilisateurs',\n    adminPanel: 'Administration'\n  };\n\n  // Améliorer la définition des colonnes\n  const columns = [{\n    title: 'Sélection',\n    dataIndex: 'id',\n    width: 50,\n    render: id => /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: selectedSelas.includes(id),\n      onChange: () => toggleSelectSelas(id),\n      \"aria-label\": `Sélectionner SELAS ${id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Nom',\n    dataIndex: 'nom',\n    width: 150,\n    render: (nom, record) => /*#__PURE__*/_jsxDEV(Input, {\n      value: nom,\n      onChange: e => handleEdit(record.id, 'nom', e.target.value),\n      \"aria-label\": \"Nom de la SELAS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Description',\n    dataIndex: 'description',\n    width: 200,\n    render: (description, record) => /*#__PURE__*/_jsxDEV(Input, {\n      value: description,\n      onChange: e => handleEdit(record.id, 'description', e.target.value),\n      \"aria-label\": \"Description de la SELAS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Code',\n    dataIndex: 'code',\n    width: 100,\n    render: (code, record) => /*#__PURE__*/_jsxDEV(Input, {\n      value: code,\n      onChange: e => handleEdit(record.id, 'code', e.target.value),\n      \"aria-label\": \"Code de la SELAS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Statut',\n    dataIndex: 'active',\n    width: 100,\n    render: (active, record) => /*#__PURE__*/_jsxDEV(Switch, {\n      checked: active,\n      onChange: checked => handleEdit(record.id, 'active', checked),\n      \"aria-label\": \"Statut de la SELAS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Accès',\n    dataIndex: 'accesPages',\n    width: 300,\n    render: (accesPages = {}, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"acces-pages-container\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '8px'\n        },\n        children: Object.entries(accesPages).map(([page, hasAccess]) => /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: !!hasAccess,\n          onChange: e => handleEdit(record.id, `accesPages.${page}`, e.target.checked),\n          style: {\n            marginRight: '8px',\n            marginBottom: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.8rem'\n            },\n            children: accessPageNames[page] || page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 19\n          }, this)\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '5px'\n        },\n        children: [Object.entries(accesPages).filter(([_, hasAccess]) => hasAccess).map(([page]) => /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"blue\",\n          style: {\n            margin: '2px'\n          },\n          children: accessPageNames[page] || page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 17\n        }, this)), !Object.values(accesPages || {}).some(Boolean) && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#999',\n            fontStyle: 'italic'\n          },\n          children: \"Aucun acc\\xE8s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Utilisateurs',\n    dataIndex: 'utilisateurs',\n    width: 200,\n    render: (utilisateurs = [], record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-association\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(Select, {\n        mode: \"multiple\",\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Associer des utilisateurs\",\n        value: utilisateurs || [],\n        onChange: newUsers => handleUserAssociation(record.id, newUsers),\n        optionFilterProp: \"children\",\n        filterOption: (input, option) => {\n          var _option$label;\n          return ((option === null || option === void 0 ? void 0 : (_option$label = option.label) === null || _option$label === void 0 ? void 0 : _option$label.toString().toLowerCase()) || '').includes(input.toLowerCase());\n        },\n        options: availableUsers.map(user => ({\n          value: user.id,\n          label: user.nom ? `${user.nom} (${user.email})` : user.email\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: utilisateurs && utilisateurs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '3px'\n          },\n          children: [utilisateurs.slice(0, 3).map(userId => {\n            const user = availableUsers.find(u => u.id === userId);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#52c41a',\n                color: 'white',\n                padding: '2px 8px',\n                borderRadius: '4px',\n                display: 'flex',\n                alignItems: 'center',\n                margin: '2px 0',\n                fontSize: '12px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FaUser, {\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 25\n              }, this), user ? user.nom || user.email : 'Utilisateur inconnu']\n            }, userId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 23\n            }, this);\n          }), utilisateurs.length > 3 && /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: utilisateurs.slice(3).map(userId => {\n              const user = availableUsers.find(u => u.id === userId);\n              return user ? user.nom || user.email : 'Utilisateur inconnu';\n            }).join(', '),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#1890ff',\n                color: 'white',\n                padding: '2px 8px',\n                borderRadius: '4px',\n                margin: '2px 0',\n                fontSize: '12px',\n                cursor: 'pointer'\n              },\n              children: `+${utilisateurs.length - 3} autres`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#999',\n            fontStyle: 'italic'\n          },\n          children: \"Aucun utilisateur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 9\n    }, this)\n  }];\n\n  // Améliorer la fonction handleUserAssociation\n  const handleUserAssociation = async (selasId, userIds) => {\n    try {\n      console.log(`Association des utilisateurs à la SELAS ${selasId}:`, userIds);\n\n      // Si c'est la nouvelle SELAS temporaire, mettre à jour l'état newSelas\n      if (selasId === 'new-selas-temp') {\n        setNewSelas(prev => ({\n          ...prev,\n          utilisateurs: userIds\n        }));\n        return;\n      }\n\n      // Sinon, mettre à jour une SELAS existante\n      setSelas(prev => prev.map(sela => sela.id === selasId ? {\n        ...sela,\n        utilisateurs: userIds\n      } : sela));\n\n      // Si vous avez une API pour l'association, vous pouvez l'appeler ici\n      // await userService.associateUsersToSELAS(selasId, userIds);\n    } catch (error) {\n      console.error('Erreur lors de l\\'association des utilisateurs:', error);\n      setError('Erreur lors de l\\'association des utilisateurs');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Chargement des SELAS...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selas-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selas-management-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Gestion des SELAS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: !editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setEditMode(true),\n            style: {\n              backgroundColor: '#1976d2',\n              color: 'white',\n              padding: '10px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              fontWeight: 500,\n              transition: 'all 0.3s ease',\n              boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 17\n            }, this), \" Modifier\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => {\n              setEditMode(true);\n              setNewSelas({\n                nom: '',\n                description: '',\n                code: '',\n                active: true,\n                accesPages: {\n                  dashboard: true,\n                  passages: false,\n                  sites: false,\n                  tournees: false,\n                  vehicules: false,\n                  map: false,\n                  userManagement: false,\n                  adminPanel: false\n                },\n                sitesAutorises: []\n              });\n            },\n            style: {\n              backgroundColor: '#2196f3',\n              color: 'white',\n              padding: '10px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              fontWeight: 500,\n              marginLeft: '10px',\n              transition: 'all 0.3s ease',\n              boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 17\n            }, this), \" Ajouter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleSaveChanges,\n            style: {\n              backgroundColor: '#4caf50',\n              color: 'white',\n              padding: '10px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              fontWeight: 500,\n              transition: 'all 0.3s ease',\n              boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 17\n            }, this), \" Enregistrer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: handleCancelEdit,\n            style: {\n              backgroundColor: '#ff9800',\n              color: 'white',\n              padding: '10px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              fontWeight: 500,\n              marginLeft: '10px',\n              transition: 'all 0.3s ease',\n              boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 17\n            }, this), \" Annuler\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 15\n          }, this), selectedSelas.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: handleDeleteSelected,\n            style: {\n              backgroundColor: '#f44336',\n              color: 'white',\n              padding: '10px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              fontWeight: 500,\n              marginLeft: '10px',\n              transition: 'all 0.3s ease',\n              boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 19\n            }, this), \" Supprimer (\", selectedSelas.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }, this), renderAdminSection(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Rechercher une SELAS...\",\n          value: quickSearch,\n          onChange: e => setQuickSearch(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 11\n        }, this), quickSearch && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-search\",\n          onClick: () => setQuickSearch(''),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: !editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: selectedSelas.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modern-button delete-button\",\n            onClick: handleDeleteSelected,\n            style: {\n              backgroundColor: '#f44336',\n              color: 'white',\n              padding: '8px 15px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '5px',\n              fontWeight: 'bold',\n              transition: 'all 0.3s ease',\n              boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 19\n            }, this), \" Supprimer (\", selectedSelas.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selas-table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [filteredSelas.length, \" r\\xE9sultat(s) trouv\\xE9(s)\", quickSearch ? ` pour la recherche \"${quickSearch}\"` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: selasToRender,\n        loading: loading,\n        scroll: {\n          x: 1500\n        },\n        rowSelection: {\n          selectedRowKeys: selectedSelas,\n          onChange: keys => {\n            const stringKeys = keys.map(key => key.toString());\n            setSelectedSelas(stringKeys);\n          }\n        },\n        pagination: {\n          pageSize: 10,\n          showSizeChanger: true\n        },\n        rowKey: \"id\",\n        rowClassName: record => {\n          return record.id === 'new-selas-temp' ? 'new-selas-row' : '';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 7\n    }, this), editMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"default-selas-actions\",\n      children: selectedSelas.length === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"set-default-button\",\n        onClick: () => handleSetDefaultSELAS(selectedSelas[0]),\n        style: {\n          backgroundColor: '#2196f3',\n          color: 'white',\n          padding: '10px 16px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px',\n          fontWeight: 500,\n          marginTop: '15px',\n          transition: 'all 0.3s ease',\n          boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 15\n        }, this), \" D\\xE9finir comme SELAS par d\\xE9faut\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 695,\n    columnNumber: 5\n  }, this);\n};\n_s(SELASManagement, \"4ND4VFqKwiNWTjAp0aI3kI8UvEs=\");\n_c = SELASManagement;\nexport default SELASManagement;\nvar _c;\n$RefreshReg$(_c, \"SELASManagement\");","map":{"version":3,"names":["React","useState","useEffect","Table","Checkbox","Select","Switch","Input","Tag","Tooltip","FaEdit","FaPlus","FaSave","FaTimes","FaTrash","FaCheckCircle","FaUser","SELASService","collection","getDocs","updateDoc","doc","query","where","getAuth","db","jsxDEV","_jsxDEV","Fragment","_Fragment","SELASManagement","_s","selas","setSelas","filteredSelas","setFilteredSelas","loading","setLoading","error","setError","editMode","setEditMode","editingSelas","setEditingSelas","newSelas","setNewSelas","selectedSelas","setSelectedSelas","quickSearch","setQuickSearch","adminAction","setAdminAction","bulkActionType","setBulkActionType","availableUsers","setAvailableUsers","selasService","getInstance","fetchSELAS","trim","searchTerm","toLowerCase","results","filter","sela","nom","includes","description","code","fetchUsers","selasData","getSELAS","err","usersCollection","usersSnapshot","usersList","docs","data","statut","map","id","email","role","console","log","length","handleEdit","field","value","handleNewSelasChange","prev","updated","startsWith","pageKey","split","accesPages","dashboard","passages","sites","tournees","vehicules","userManagement","adminPanel","selasKeys","typedField","handleSaveChanges","updatePromises","updateSELAS","completeSelas","active","undefined","sitesAutorises","addSELAS","Promise","all","handleCancelEdit","handleDeleteSelected","window","confirm","deletePromises","deleteSELAS","toggleSelectSelas","selasId","toggleSelectAll","selasToRender","tempNewSelas","dateCreation","Date","toISOString","dateModification","utilisateurs","unshift","handleBulkAction","handleExportSELAS","exportData","exportSELAS","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","renderAdminSection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","e","target","title","handleSetDefaultSELAS","auth","currentUser","uid","alert","usersRef","userQuery","querySnapshot","empty","userDoc","defaultSelasId","lastUpdated","localStorage","setItem","accessPageNames","columns","dataIndex","width","render","checked","record","style","display","flexWrap","gap","Object","entries","page","hasAccess","marginRight","marginBottom","fontSize","_","color","margin","values","some","Boolean","fontStyle","mode","placeholder","newUsers","handleUserAssociation","optionFilterProp","filterOption","input","option","_option$label","label","toString","options","user","flexDirection","slice","userId","find","u","backgroundColor","padding","borderRadius","alignItems","join","cursor","userIds","border","fontWeight","transition","boxShadow","marginLeft","dataSource","scroll","x","rowSelection","selectedRowKeys","keys","stringKeys","key","pagination","pageSize","showSizeChanger","rowKey","rowClassName","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/SELASManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Checkbox, Select, Switch, Input, Tag, Tooltip } from 'antd';\nimport { \n  FaEdit, \n  FaPlus, \n  FaSave, \n  FaTimes, \n  FaTrash, \n  FaFileExport, \n  FaCheckCircle, \n  FaTimesCircle,\n  FaUser,\n  FaUsers,\n  FaLock,\n  FaLockOpen,\n  FaKey\n} from 'react-icons/fa';\nimport { SELAS } from '../types/SELAS';\nimport { SELASService } from '../services/SELASService';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { db } from '../config/firebase';\nimport './SELASManagement.css';\nimport './DataTable.css';\nimport './EditMode.css';\n\n// Type pour les utilisateurs\ninterface User {\n  id: string;\n  nom: string;\n  email: string;\n  role?: string;\n}\n\nconst SELASManagement: React.FC = () => {\n  const [selas, setSelas] = useState<SELAS[]>([]);\n  const [filteredSelas, setFilteredSelas] = useState<SELAS[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [editMode, setEditMode] = useState(false);\n  const [editingSelas, setEditingSelas] = useState<{[key: string]: SELAS}>({});\n  const [newSelas, setNewSelas] = useState<Partial<SELAS> | null>(null);\n  const [selectedSelas, setSelectedSelas] = useState<string[]>([]);\n  const [quickSearch, setQuickSearch] = useState('');\n  const [adminAction, setAdminAction] = useState<'default' | 'bulk' | 'export'>('default');\n  const [bulkActionType, setBulkActionType] = useState<'activate' | 'deactivate' | 'delete'>('activate');\n  \n  // Nouvel état pour les utilisateurs disponibles\n  const [availableUsers, setAvailableUsers] = useState<User[]>([]);\n  \n  const selasService = SELASService.getInstance();\n\n  useEffect(() => {\n    fetchSELAS();\n  }, []);\n\n  // Initialiser les SELAS filtrées au chargement\n  useEffect(() => {\n    setFilteredSelas(selas);\n  }, [selas]);\n\n  // Effet pour filtrer les SELAS en fonction de la recherche rapide\n  useEffect(() => {\n    if (!quickSearch.trim()) {\n      setFilteredSelas(selas);\n      return;\n    }\n\n    const searchTerm = quickSearch.toLowerCase().trim();\n    const results = selas.filter(sela => {\n      return (\n        (sela.nom || '').toLowerCase().includes(searchTerm) ||\n        (sela.description || '').toLowerCase().includes(searchTerm) ||\n        (sela.code || '').toLowerCase().includes(searchTerm)\n      );\n    });\n\n    setFilteredSelas(results);\n  }, [quickSearch, selas]);\n\n  // Ajouter l'effet pour charger les utilisateurs\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchSELAS = async () => {\n    try {\n      setLoading(true);\n      const selasData = await selasService.getSELAS();\n      setSelas(selasData);\n      setLoading(false);\n    } catch (err) {\n      setError('Erreur lors du chargement des SELAS');\n      setLoading(false);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      // Récupérer tous les utilisateurs depuis Firestore\n      const usersCollection = collection(db, 'users');\n      const usersSnapshot = await getDocs(usersCollection);\n      \n      const usersList = usersSnapshot.docs\n        .filter(doc => doc.data().statut !== 'Inactif') // Optionnel: filtrer les utilisateurs inactifs\n        .map(doc => ({\n          id: doc.id,\n          nom: doc.data().nom || 'Sans nom',\n          email: doc.data().email || '',\n          role: doc.data().role || ''\n        }));\n      \n      setAvailableUsers(usersList);\n      console.log('Utilisateurs chargés:', usersList.length);\n    } catch (error) {\n      console.error('Erreur lors du chargement des utilisateurs:', error);\n      setError('Erreur lors du chargement des utilisateurs');\n    }\n  };\n\n  const handleEdit = (id: string, field: string, value: any) => {\n    // Si c'est la nouvelle SELAS temporaire, mettre à jour l'état newSelas\n    if (id === 'new-selas-temp') {\n      handleNewSelasChange(field, value);\n      return;\n    }\n    \n    // Sinon, mettre à jour une SELAS existante\n    setSelas(prev => \n      prev.map(sela => \n        sela.id === id \n          ? { ...sela, [field]: value }\n          : sela\n      )\n    );\n  };\n\n  const handleNewSelasChange = (field: string, value: any) => {\n    setNewSelas(prev => {\n      const updated = { ...(prev || {}) };\n      \n      if (field.startsWith('accesPages.')) {\n        const pageKey = field.split('.')[1];\n        updated.accesPages = {\n          ...(updated.accesPages || {\n            dashboard: true,\n            passages: false,\n            sites: false,\n            tournees: false,\n            vehicules: false,\n            map: false,\n            userManagement: false,\n            adminPanel: false\n          }),\n          [pageKey]: value\n        };\n      } else {\n        // Type-safe key check\n        const selasKeys = ['nom', 'description', 'code', 'active', 'sitesAutorises'] as const;\n        const typedField = field as typeof selasKeys[number];\n        \n        if (selasKeys.includes(typedField)) {\n          (updated as any)[typedField] = value;\n        }\n      }\n      \n      return updated;\n    });\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Mettre à jour les SELAS existantes\n      const updatePromises = selas.map(sela => selasService.updateSELAS(sela.id, sela));\n      \n      // Ajouter une nouvelle SELAS si nécessaire\n      if (newSelas && newSelas.nom) {\n        // Valider les champs obligatoires\n        if (!newSelas.nom) {\n          setError('Le nom de la SELAS est obligatoire');\n          setLoading(false);\n          return;\n        }\n        \n        // Préparer l'objet avec les valeurs par défaut pour les champs manquants\n        const completeSelas: Omit<SELAS, 'id' | 'dateCreation' | 'dateModification'> = {\n          nom: newSelas.nom,\n          description: newSelas.description || '',\n          code: newSelas.code || '',\n          active: newSelas.active !== undefined ? newSelas.active : true,\n          accesPages: newSelas.accesPages || {\n            dashboard: true,\n            passages: false,\n            sites: false,\n            tournees: false,\n            vehicules: false,\n            map: false,\n            userManagement: false,\n            adminPanel: false\n          },\n          sitesAutorises: newSelas.sitesAutorises || []\n        };\n        \n        await selasService.addSELAS(completeSelas);\n      }\n      \n      // Attendre que toutes les mises à jour soient terminées\n      await Promise.all(updatePromises);\n      \n      // Réinitialiser les états\n      setEditMode(false);\n      setEditingSelas({});\n      setNewSelas(null);\n      setSelectedSelas([]);\n      \n      // Recharger les données\n      await fetchSELAS();\n    } catch (err) {\n      setError('Erreur lors de la sauvegarde des modifications');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditMode(false);\n    setEditingSelas({});\n    setNewSelas(null);\n    setSelectedSelas([]);\n  };\n\n  const handleDeleteSelected = async () => {\n    if (!window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedSelas.length} SELAS ?`)) {\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const deletePromises = selectedSelas.map(id => selasService.deleteSELAS(id));\n      await Promise.all(deletePromises);\n      \n      setEditMode(false);\n      setSelectedSelas([]);\n      \n      await fetchSELAS();\n    } catch (err) {\n      setError('Erreur lors de la suppression des SELAS');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const toggleSelectSelas = (id: string) => {\n    // Si c'est la nouvelle SELAS temporaire, ne rien faire car elle n'est pas encore sauvegardée\n    if (id === 'new-selas-temp') {\n      return;\n    }\n    \n    setSelectedSelas(prev => \n      prev.includes(id) \n        ? prev.filter(selasId => selasId !== id)\n        : [...prev, id]\n    );\n  };\n\n  const toggleSelectAll = () => {\n    if (selectedSelas.length === filteredSelas.length) {\n      setSelectedSelas([]);\n    } else {\n      setSelectedSelas(filteredSelas.map(sela => sela.id));\n    }\n  };\n\n  const selasToRender = [...filteredSelas];\n  \n  // Après cette ligne, ajoutons la nouvelle SELAS au tableau s'il y en a une\n  if (editMode && newSelas) {\n    // Créer un objet SELAS temporaire pour l'affichage\n    const tempNewSelas: SELAS = {\n      id: 'new-selas-temp',  // ID temporaire\n      nom: newSelas.nom || '',\n      description: newSelas.description || '',\n      code: newSelas.code || '',\n      active: newSelas.active !== undefined ? newSelas.active : true,\n      accesPages: newSelas.accesPages || {\n        dashboard: true,\n        passages: false,\n        sites: false,\n        tournees: false,\n        vehicules: false,\n        map: false,\n        userManagement: false,\n        adminPanel: false\n      },\n      sitesAutorises: newSelas.sitesAutorises || [],\n      dateCreation: new Date().toISOString(),\n      dateModification: new Date().toISOString()\n    };\n    \n    // Si tempNewSelas a besoin de la propriété utilisateurs (qui semble ne pas être définie dans le type SELAS),\n    // nous devons l'ajouter à l'objet après sa création, en utilisant une assertion de type\n    (tempNewSelas as any).utilisateurs = [];\n    \n    // Ajouter la nouvelle SELAS en haut du tableau\n    selasToRender.unshift(tempNewSelas);\n  }\n\n  const handleBulkAction = async () => {\n    try {\n      setLoading(true);\n      switch (bulkActionType) {\n        case 'activate':\n          await Promise.all(\n            selectedSelas.map(id => selasService.updateSELAS(id, { active: true }))\n          );\n          break;\n        case 'deactivate':\n          await Promise.all(\n            selectedSelas.map(id => selasService.updateSELAS(id, { active: false }))\n          );\n          break;\n        case 'delete':\n          await Promise.all(\n            selectedSelas.map(id => selasService.deleteSELAS(id))\n          );\n          break;\n      }\n      \n      await fetchSELAS();\n      setSelectedSelas([]);\n      setAdminAction('default');\n    } catch (err) {\n      setError(`Erreur lors de l'action de masse`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExportSELAS = async () => {\n    try {\n      const exportData = await selasService.exportSELAS(selectedSelas);\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'selas_export.json';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      setError('Erreur lors de l\\'exportation des SELAS');\n    }\n  };\n\n  const renderAdminSection = () => {\n    if (!editMode) return null;\n\n    return (\n      <div className=\"admin-section\">\n        <h3>Actions d'administration</h3>\n        {adminAction === 'default' && (\n          <div className=\"action-buttons\">\n            <button \n              className=\"btn btn-secondary\"\n              onClick={() => setAdminAction('bulk')}\n              disabled={selectedSelas.length === 0}\n            >\n              Actions de masse\n            </button>\n            <button \n              className=\"btn btn-secondary\"\n              onClick={() => setAdminAction('export')}\n              disabled={selectedSelas.length === 0}\n            >\n              Exporter\n            </button>\n          </div>\n        )}\n\n        {adminAction === 'bulk' && (\n          <div>\n            <select \n              value={bulkActionType}\n              onChange={(e) => setBulkActionType(e.target.value as any)}\n              title=\"Sélectionner une action de masse\"\n            >\n              <option value=\"activate\">Activer</option>\n              <option value=\"deactivate\">Désactiver</option>\n              <option value=\"delete\">Supprimer</option>\n            </select>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleBulkAction}\n            >\n              Appliquer\n            </button>\n            <button \n              className=\"btn btn-secondary\"\n              onClick={() => setAdminAction('default')}\n            >\n              Annuler\n            </button>\n          </div>\n        )}\n\n        {adminAction === 'export' && (\n          <div>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleExportSELAS}\n            >\n              Confirmer l'exportation\n            </button>\n            <button \n              className=\"btn btn-secondary\"\n              onClick={() => setAdminAction('default')}\n            >\n              Annuler\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Nouvelle fonction pour définir la SELAS par défaut\n  const handleSetDefaultSELAS = async (selasId: string) => {\n    try {\n      // Récupérer l'ID de l'utilisateur connecté\n      const auth = getAuth();\n      const currentUser = auth.currentUser;\n      \n      if (!currentUser || !currentUser.uid) {\n        alert('Vous devez être connecté pour effectuer cette action');\n        return;\n      }\n      \n      // Trouver l'utilisateur dans Firestore et mettre à jour son SELAS par défaut\n      const usersRef = collection(db, 'users');\n      const userQuery = query(usersRef, where('uid', '==', currentUser.uid));\n      const querySnapshot = await getDocs(userQuery);\n      \n      if (querySnapshot.empty) {\n        alert('Votre profil utilisateur n\\'a pas été trouvé');\n        return;\n      }\n      \n      const userDoc = querySnapshot.docs[0];\n      await updateDoc(doc(db, 'users', userDoc.id), {\n        defaultSelasId: selasId,\n        lastUpdated: new Date().toISOString()\n      });\n      \n      // Afficher un message de succès\n      alert(`SELAS définie comme SELAS par défaut avec succès`);\n      \n      // Mettre à jour localStorage pour une expérience utilisateur immédiate\n      localStorage.setItem('currentSelasId', selasId);\n    } catch (error) {\n      // Gérer les erreurs\n      console.error('Erreur lors de la définition de la SELAS par défaut:', error);\n      setError('Impossible de définir la SELAS par défaut');\n      alert('Impossible de définir la SELAS par défaut');\n    }\n  };\n\n  // Mappings pour les noms d'accès\n  const accessPageNames: Record<string, string> = {\n    dashboard: 'Tableau de bord',\n    passages: 'Passages',\n    sites: 'Sites',\n    tournees: 'Tournées',\n    vehicules: 'Véhicules',\n    map: 'Carte',\n    userManagement: 'Gestion utilisateurs',\n    adminPanel: 'Administration'\n  };\n  \n  // Améliorer la définition des colonnes\n  const columns = [\n    {\n      title: 'Sélection',\n      dataIndex: 'id',\n      width: 50,\n      render: (id: string) => (\n        <Checkbox \n          checked={selectedSelas.includes(id)}\n          onChange={() => toggleSelectSelas(id)}\n          aria-label={`Sélectionner SELAS ${id}`}\n        />\n      )\n    },\n    {\n      title: 'Nom',\n      dataIndex: 'nom',\n      width: 150,\n      render: (nom: string, record: SELAS) => (\n        <Input \n          value={nom}\n          onChange={(e) => handleEdit(record.id, 'nom', e.target.value)}\n          aria-label=\"Nom de la SELAS\"\n        />\n      )\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      width: 200,\n      render: (description: string, record: SELAS) => (\n        <Input \n          value={description}\n          onChange={(e) => handleEdit(record.id, 'description', e.target.value)}\n          aria-label=\"Description de la SELAS\"\n        />\n      )\n    },\n    {\n      title: 'Code',\n      dataIndex: 'code',\n      width: 100,\n      render: (code: string, record: SELAS) => (\n        <Input \n          value={code}\n          onChange={(e) => handleEdit(record.id, 'code', e.target.value)}\n          aria-label=\"Code de la SELAS\"\n        />\n      )\n    },\n    {\n      title: 'Statut',\n      dataIndex: 'active',\n      width: 100,\n      render: (active: boolean, record: SELAS) => (\n        <Switch \n          checked={active}\n          onChange={(checked) => handleEdit(record.id, 'active', checked)}\n          aria-label=\"Statut de la SELAS\"\n        />\n      )\n    },\n    {\n      title: 'Accès',\n      dataIndex: 'accesPages',\n      width: 300,\n      render: (accesPages: Record<string, boolean> = {}, record: SELAS) => (\n        <div className=\"acces-pages-container\">\n          {editMode ? (\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\n              {Object.entries(accesPages).map(([page, hasAccess]) => (\n                <Checkbox \n                  key={page}\n                  checked={!!hasAccess}\n                  onChange={(e) => handleEdit(\n                    record.id, \n                    `accesPages.${page}`, \n                    e.target.checked\n                  )}\n                  style={{ marginRight: '8px', marginBottom: '8px' }}\n                >\n                  <span style={{ fontSize: '0.8rem' }}>{accessPageNames[page] || page}</span>\n                </Checkbox>\n              ))}\n            </div>\n          ) : (\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '5px' }}>\n              {Object.entries(accesPages).filter(([_, hasAccess]) => hasAccess).map(([page]) => (\n                <Tag color=\"blue\" key={page} style={{ margin: '2px' }}>\n                  {accessPageNames[page] || page}\n                </Tag>\n              ))}\n              {!Object.values(accesPages || {}).some(Boolean) && (\n                <span style={{ color: '#999', fontStyle: 'italic' }}>Aucun accès</span>\n              )}\n            </div>\n          )}\n        </div>\n      )\n    },\n    {\n      title: 'Utilisateurs',\n      dataIndex: 'utilisateurs',\n      width: 200,\n      render: (utilisateurs: string[] = [], record: SELAS) => (\n        <div className=\"users-association\">\n          {editMode ? (\n            <Select\n              mode=\"multiple\"\n              style={{ width: '100%' }}\n              placeholder=\"Associer des utilisateurs\"\n              value={utilisateurs || []}\n              onChange={(newUsers) => handleUserAssociation(record.id, newUsers)}\n              optionFilterProp=\"children\"\n              filterOption={(input, option) => \n                (option?.label?.toString().toLowerCase() || '').includes(input.toLowerCase())\n              }\n              options={availableUsers.map(user => ({\n                value: user.id,\n                label: user.nom ? `${user.nom} (${user.email})` : user.email\n              }))}\n            />\n          ) : (\n            <div>\n              {utilisateurs && utilisateurs.length > 0 ? (\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '3px' }}>\n                  {utilisateurs.slice(0, 3).map(userId => {\n                    const user = availableUsers.find(u => u.id === userId);\n                    return (\n                      <div\n                        key={userId}\n                        style={{\n                          backgroundColor: '#52c41a',\n                          color: 'white',\n                          padding: '2px 8px',\n                          borderRadius: '4px',\n                          display: 'flex',\n                          alignItems: 'center',\n                          margin: '2px 0',\n                          fontSize: '12px'\n                        }}\n                      >\n                        <FaUser style={{ marginRight: '5px' }} />\n                        {user ? user.nom || user.email : 'Utilisateur inconnu'}\n                      </div>\n                    );\n                  })}\n                  {utilisateurs.length > 3 && (\n                    <Tooltip title={utilisateurs.slice(3).map(userId => {\n                      const user = availableUsers.find(u => u.id === userId);\n                      return user ? user.nom || user.email : 'Utilisateur inconnu';\n                    }).join(', ')}>\n                      <div style={{\n                        backgroundColor: '#1890ff',\n                        color: 'white',\n                        padding: '2px 8px',\n                        borderRadius: '4px',\n                        margin: '2px 0',\n                        fontSize: '12px',\n                        cursor: 'pointer'\n                      }}>\n                        {`+${utilisateurs.length - 3} autres`}\n                      </div>\n                    </Tooltip>\n                  )}\n                </div>\n              ) : (\n                <span style={{ color: '#999', fontStyle: 'italic' }}>Aucun utilisateur</span>\n              )}\n            </div>\n          )}\n        </div>\n      )\n    }\n  ];\n\n  // Améliorer la fonction handleUserAssociation\n  const handleUserAssociation = async (selasId: string, userIds: string[]) => {\n    try {\n      console.log(`Association des utilisateurs à la SELAS ${selasId}:`, userIds);\n      \n      // Si c'est la nouvelle SELAS temporaire, mettre à jour l'état newSelas\n      if (selasId === 'new-selas-temp') {\n        setNewSelas(prev => ({\n          ...prev!,\n          utilisateurs: userIds\n        }));\n        return;\n      }\n      \n      // Sinon, mettre à jour une SELAS existante\n      setSelas(prev => \n        prev.map(sela => \n          sela.id === selasId \n            ? { ...sela, utilisateurs: userIds }\n            : sela\n        )\n      );\n      \n      // Si vous avez une API pour l'association, vous pouvez l'appeler ici\n      // await userService.associateUsersToSELAS(selasId, userIds);\n    } catch (error) {\n      console.error('Erreur lors de l\\'association des utilisateurs:', error);\n      setError('Erreur lors de l\\'association des utilisateurs');\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Chargement des SELAS...</div>;\n  }\n\n  return (\n    <div className=\"selas-management\">\n      <div className=\"selas-management-header\">\n        <h2>Gestion des SELAS</h2>\n        <div className=\"action-buttons\">\n          {!editMode ? (\n            <>\n              <button \n                className=\"btn btn-primary\"\n                onClick={() => setEditMode(true)}\n                style={{\n                  backgroundColor: '#1976d2',\n                  color: 'white',\n                  padding: '10px 16px',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                  fontWeight: 500,\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                }}\n              >\n                <FaEdit /> Modifier\n              </button>\n              <button \n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setEditMode(true);\n                  setNewSelas({\n                    nom: '',\n                    description: '',\n                    code: '',\n                    active: true,\n                    accesPages: {\n                      dashboard: true,\n                      passages: false,\n                      sites: false,\n                      tournees: false,\n                      vehicules: false,\n                      map: false,\n                      userManagement: false,\n                      adminPanel: false\n                    },\n                    sitesAutorises: []\n                  });\n                }}\n                style={{\n                  backgroundColor: '#2196f3',\n                  color: 'white',\n                  padding: '10px 16px',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                  fontWeight: 500,\n                  marginLeft: '10px',\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                }}\n              >\n                <FaPlus /> Ajouter\n              </button>\n            </>\n          ) : (\n            <>\n              <button \n                className=\"btn btn-primary\"\n                onClick={handleSaveChanges}\n                style={{\n                  backgroundColor: '#4caf50',\n                  color: 'white',\n                  padding: '10px 16px',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                  fontWeight: 500,\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                }}\n              >\n                <FaSave /> Enregistrer\n              </button>\n              <button \n                className=\"btn btn-secondary\"\n                onClick={handleCancelEdit}\n                style={{\n                  backgroundColor: '#ff9800',\n                  color: 'white',\n                  padding: '10px 16px',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                  fontWeight: 500,\n                  marginLeft: '10px',\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                }}\n              >\n                <FaTimes /> Annuler\n              </button>\n              {selectedSelas.length > 0 && (\n                <button \n                  className=\"btn btn-danger\"\n                  onClick={handleDeleteSelected}\n                  style={{\n                    backgroundColor: '#f44336',\n                    color: 'white',\n                    padding: '10px 16px',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    fontWeight: 500,\n                    marginLeft: '10px',\n                    transition: 'all 0.3s ease',\n                    boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                  }}\n                >\n                  <FaTrash /> Supprimer ({selectedSelas.length})\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n      \n      {renderAdminSection()}\n      \n      <div className=\"controls\">\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            placeholder=\"Rechercher une SELAS...\"\n            value={quickSearch}\n            onChange={e => setQuickSearch(e.target.value)}\n            className=\"search-input\"\n          />\n          {quickSearch && (\n            <button \n              className=\"clear-search\" \n              onClick={() => setQuickSearch('')}\n            >\n              ✕\n            </button>\n          )}\n        </div>\n        \n        <div className=\"action-buttons\">\n          {!editMode ? (\n            <>\n              {/* Actions pour le mode consultation - pas de boutons ici, ils sont déjà en haut */}\n            </>\n          ) : (\n            <>\n              {selectedSelas.length > 0 && (\n                <button \n                  className=\"modern-button delete-button\" \n                  onClick={handleDeleteSelected}\n                  style={{ \n                    backgroundColor: '#f44336', \n                    color: 'white',\n                    padding: '8px 15px',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '5px',\n                    fontWeight: 'bold',\n                    transition: 'all 0.3s ease',\n                    boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                  }}\n                >\n                  <FaTrash /> Supprimer ({selectedSelas.length})\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"selas-table-container\">\n        <div className=\"results-info\">\n          <p>{filteredSelas.length} résultat(s) trouvé(s){quickSearch ? ` pour la recherche \"${quickSearch}\"` : ''}</p>\n        </div>\n        \n        <Table \n          columns={columns}\n          dataSource={selasToRender}\n          loading={loading}\n          scroll={{ x: 1500 }}\n          rowSelection={{\n            selectedRowKeys: selectedSelas,\n            onChange: (keys) => {\n              const stringKeys = keys.map(key => key.toString());\n              setSelectedSelas(stringKeys);\n            },\n          }}\n          pagination={{\n            pageSize: 10,\n            showSizeChanger: true,\n          }}\n          rowKey=\"id\"\n          rowClassName={(record) => {\n            return record.id === 'new-selas-temp' ? 'new-selas-row' : '';\n          }}\n        />\n      </div>\n      \n      {editMode && (\n        <div className=\"default-selas-actions\">\n          {selectedSelas.length === 1 && (\n            <button \n              className=\"set-default-button\"\n              onClick={() => handleSetDefaultSELAS(selectedSelas[0])}\n              style={{\n                backgroundColor: '#2196f3',\n                color: 'white',\n                padding: '10px 16px',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                fontWeight: 500,\n                marginTop: '15px',\n                transition: 'all 0.3s ease',\n                boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n              }}\n            >\n              <FaCheckCircle /> Définir comme SELAS par défaut\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SELASManagement; \n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}