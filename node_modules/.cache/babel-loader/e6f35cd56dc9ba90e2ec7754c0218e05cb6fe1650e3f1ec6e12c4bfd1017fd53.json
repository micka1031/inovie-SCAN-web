{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\RoleManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { updateDoc, doc, setDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport './RoleManagement.css';\nimport { RoleService } from '../services/RoleService';\nimport PageAccessManagement from './PageAccessManagement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_PERMISSIONS = [\n// Gestion des utilisateurs\n{\n  id: 'users.view',\n  name: 'Lecture des utilisateurs',\n  description: 'Voir la liste des utilisateurs (page utilisateurs)',\n  category: 'Utilisateurs'\n}, {\n  id: 'users.create',\n  name: 'Création d\\'utilisateurs',\n  description: 'Créer de nouveaux utilisateurs',\n  category: 'Utilisateurs'\n}, {\n  id: 'users.edit',\n  name: 'Modification des utilisateurs',\n  description: 'Modifier les informations des utilisateurs',\n  category: 'Utilisateurs'\n}, {\n  id: 'users.delete',\n  name: 'Suppression des utilisateurs',\n  description: 'Supprimer des utilisateurs',\n  category: 'Utilisateurs'\n},\n// Gestion des sites\n{\n  id: 'sites.view',\n  name: 'Lecture des sites',\n  description: 'Voir la liste des sites (page sites)',\n  category: 'Sites'\n}, {\n  id: 'sites.create',\n  name: 'Création de sites',\n  description: 'Créer de nouveaux sites',\n  category: 'Sites'\n}, {\n  id: 'sites.edit',\n  name: 'Modification des sites',\n  description: 'Modifier les informations des sites',\n  category: 'Sites'\n}, {\n  id: 'sites.delete',\n  name: 'Suppression des sites',\n  description: 'Supprimer des sites',\n  category: 'Sites'\n},\n// Gestion des tournées\n{\n  id: 'tournees.view',\n  name: 'Lecture des tournées',\n  description: 'Voir la liste des tournées (page tournées)',\n  category: 'Tournées'\n}, {\n  id: 'tournees.create',\n  name: 'Création de tournées',\n  description: 'Créer de nouvelles tournées',\n  category: 'Tournées'\n}, {\n  id: 'tournees.edit',\n  name: 'Modification des tournées',\n  description: 'Modifier les tournées',\n  category: 'Tournées'\n}, {\n  id: 'tournees.delete',\n  name: 'Suppression des tournées',\n  description: 'Supprimer des tournées',\n  category: 'Tournées'\n},\n// Gestion des passages\n{\n  id: 'passages.view',\n  name: 'Lecture des passages',\n  description: 'Voir les passages (page passages)',\n  category: 'Passages'\n}, {\n  id: 'passages.create',\n  name: 'Création de passages',\n  description: 'Créer des passages',\n  category: 'Passages'\n}, {\n  id: 'passages.edit',\n  name: 'Modification des passages',\n  description: 'Modifier les passages',\n  category: 'Passages'\n}, {\n  id: 'passages.delete',\n  name: 'Suppression des passages',\n  description: 'Supprimer des passages',\n  category: 'Passages'\n},\n// Gestion des véhicules\n{\n  id: 'vehicules.view',\n  name: 'Lecture des véhicules',\n  description: 'Voir la liste des véhicules (page véhicules)',\n  category: 'Véhicules'\n}, {\n  id: 'vehicules.create',\n  name: 'Création de véhicules',\n  description: 'Créer de nouveaux véhicules',\n  category: 'Véhicules'\n}, {\n  id: 'vehicules.edit',\n  name: 'Modification des véhicules',\n  description: 'Modifier les véhicules',\n  category: 'Véhicules'\n}, {\n  id: 'vehicules.delete',\n  name: 'Suppression des véhicules',\n  description: 'Supprimer des véhicules',\n  category: 'Véhicules'\n},\n// Gestion de la carte\n{\n  id: 'carte.view',\n  name: 'Accès à la carte',\n  description: 'Voir et utiliser la carte interactive (page carte)',\n  category: 'Carte'\n}, {\n  id: 'carte.edit',\n  name: 'Modification de la carte',\n  description: 'Modifier les paramètres de la carte',\n  category: 'Carte'\n},\n// Accès aux fonctionnalités\n{\n  id: 'dashboard.view',\n  name: 'Accès au tableau de bord',\n  description: 'Voir et utiliser le tableau de bord (page principale)',\n  category: 'Fonctionnalités'\n}, {\n  id: 'init-passages.view',\n  name: 'Initialisation des passages',\n  description: 'Accéder à la page d\\'initialisation des passages',\n  category: 'Fonctionnalités'\n}, {\n  id: 'configuration_systeme',\n  name: 'Configuration système',\n  description: 'Accéder aux paramètres système (page admin)',\n  category: 'Administration'\n}];\nconst DEFAULT_ROLES = [{\n  id: 'administrateur',\n  name: 'Administrateur',\n  description: 'Accès complet à toutes les fonctionnalités',\n  permissions: DEFAULT_PERMISSIONS.map(p => p.id),\n  isDefault: true,\n  isAdmin: true\n}, {\n  id: 'utilisateur',\n  name: 'Utilisateur',\n  description: 'Accès standard aux fonctionnalités de base',\n  permissions: ['passages.view', 'passages.create', 'passages.edit', 'sites.view', 'sites.create', 'sites.edit', 'tournees.view', 'tournees.create', 'tournees.edit', 'vehicules.view', 'vehicules.create', 'vehicules.edit', 'dashboard.view', 'init-passages.view', 'carte.view'],\n  isDefault: true\n}, {\n  id: 'coursier',\n  name: 'Coursier',\n  description: 'Accès limité aux passages',\n  permissions: ['passages.view', 'passages.create', 'passages.edit'],\n  isDefault: true\n}];\nconst RoleManagement = () => {\n  _s();\n  const [roles, setRoles] = useState([]);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isAddingRole, setIsAddingRole] = useState(false);\n  const [newRole, setNewRole] = useState({\n    id: '',\n    name: '',\n    description: '',\n    permissions: []\n  });\n  const [activeTab, setActiveTab] = useState('permissions'); // 'permissions' ou 'pageAccess'\n\n  const roleService = RoleService.getInstance();\n  useEffect(() => {\n    fetchRoles();\n  }, []);\n  const fetchRoles = async () => {\n    try {\n      setLoading(true);\n      const roles = await roleService.getRoles();\n      if (roles.length === 0) {\n        // Si aucun rôle n'existe, initialiser avec les rôles par défaut\n        await initializeDefaultRoles();\n        return;\n      }\n      setRoles(roles);\n    } catch (err) {\n      console.error('Erreur lors du chargement des rôles:', err);\n      setError('Erreur lors du chargement des rôles');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const initializeDefaultRoles = async () => {\n    try {\n      const batch = [];\n      for (const role of DEFAULT_ROLES) {\n        const roleRef = doc(db, 'roles', role.id);\n        batch.push(setDoc(roleRef, role));\n      }\n      await Promise.all(batch);\n      await fetchRoles();\n    } catch (err) {\n      console.error('Erreur lors de l\\'initialisation des rôles par défaut:', err);\n      setError('Erreur lors de l\\'initialisation des rôles par défaut');\n    }\n  };\n  const handleRoleSelect = role => {\n    setSelectedRole(role);\n  };\n  const handlePermissionToggle = async (roleId, permissionId) => {\n    console.log('handlePermissionToggle appelé avec:', {\n      roleId,\n      permissionId\n    });\n    const role = roles.find(r => r.id === roleId);\n    if (!role) {\n      console.error('Rôle non trouvé:', roleId);\n      return;\n    }\n    try {\n      setError(null);\n\n      // Créer une copie des permissions actuelles\n      const currentPermissions = [...role.permissions];\n      const newPermissions = currentPermissions.includes(permissionId) ? currentPermissions.filter(p => p !== permissionId) : [...currentPermissions, permissionId];\n\n      // Mettre à jour l'état local immédiatement pour une réponse instantanée\n      const updatedRole = {\n        ...role,\n        permissions: newPermissions\n      };\n      setRoles(prevRoles => prevRoles.map(r => r.id === roleId ? updatedRole : r));\n      setSelectedRole(updatedRole);\n\n      // Mettre à jour dans Firestore via le service\n      await roleService.updateRolePermissions(roleId, newPermissions);\n\n      // Rafraîchir silencieusement les données en arrière-plan\n      const refreshedRoles = await roleService.getRoles();\n      setRoles(refreshedRoles);\n\n      // Mettre à jour le rôle sélectionné si nécessaire\n      const refreshedRole = refreshedRoles.find(r => r.id === roleId);\n      if (refreshedRole) {\n        setSelectedRole(refreshedRole);\n      }\n    } catch (err) {\n      console.error('Erreur lors de la mise à jour des permissions:', err);\n      setError(`Erreur lors de la mise à jour de la permission : ${err.message}`);\n\n      // En cas d'erreur, restaurer l'état précédent\n      await fetchRoles();\n    }\n  };\n  const handleSaveRole = async () => {\n    if (!selectedRole) return;\n    try {\n      const roleRef = doc(db, 'roles', selectedRole.id);\n      await updateDoc(roleRef, {\n        name: selectedRole.name,\n        description: selectedRole.description,\n        permissions: selectedRole.permissions\n      });\n      setRoles(prev => prev.map(role => role.id === selectedRole.id ? selectedRole : role));\n      alert('Rôle mis à jour avec succès');\n    } catch (err) {\n      setError('Erreur lors de la sauvegarde du rôle');\n    }\n  };\n  const handleCancelEdit = () => {\n    if (selectedRole) {\n      // Restaurer l'état original du rôle\n      setSelectedRole(roles.find(r => r.id === selectedRole.id) || null);\n    }\n  };\n  const handleAddRole = () => {\n    setIsAddingRole(true);\n    setNewRole({\n      id: '',\n      name: '',\n      description: '',\n      permissions: []\n    });\n  };\n  const handleSaveNewRole = async () => {\n    if (!newRole.name || !newRole.description) {\n      setError('Le nom et la description sont requis');\n      return;\n    }\n    try {\n      const roleId = newRole.name.toLowerCase().replace(/\\s+/g, '_');\n      const roleToSave = {\n        ...newRole,\n        id: roleId\n      };\n      const roleRef = doc(db, 'roles', roleId);\n      await setDoc(roleRef, roleToSave);\n      setRoles([...roles, roleToSave]);\n      setIsAddingRole(false);\n      setNewRole({\n        id: '',\n        name: '',\n        description: '',\n        permissions: []\n      });\n    } catch (err) {\n      setError('Erreur lors de la création du rôle');\n    }\n  };\n  const handleDeleteRole = async roleId => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer ce rôle ?')) {\n      return;\n    }\n    try {\n      const roleRef = doc(db, 'roles', roleId);\n      await deleteDoc(roleRef);\n      setRoles(roles.filter(role => role.id !== roleId));\n      setSelectedRole(null);\n    } catch (err) {\n      setError('Erreur lors de la suppression du rôle');\n    }\n  };\n  const togglePageAccess = pageName => {\n    // Implementation of togglePageAccess\n  };\n  const handleSavePageAccess = async () => {\n    if (!selectedRole) return;\n    try {\n      const roleService = RoleService.getInstance();\n      await roleService.updatePageAccess(selectedRole.id, selectedRole.pageAccess);\n      alert('Accès aux pages mis à jour avec succès !');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour des accès:', error);\n      alert('Erreur lors de la mise à jour des accès.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des r\\xF4les...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roles-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gestion des R\\xF4les et Permissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-role-button\",\n        onClick: handleAddRole,\n        children: \"Ajouter un nouveau r\\xF4le\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'permissions' ? 'active' : ''}`,\n        onClick: () => setActiveTab('permissions'),\n        children: \"Permissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'pageAccess' ? 'active' : ''}`,\n        onClick: () => setActiveTab('pageAccess'),\n        children: \"Acc\\xE8s aux pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), activeTab === 'permissions' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permissions-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roles-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roles-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"R\\xF4les disponibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roles-grid\",\n          children: roles.map(role => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `role-card ${(selectedRole === null || selectedRole === void 0 ? void 0 : selectedRole.id) === role.id ? 'selected' : ''}`,\n            onClick: () => handleRoleSelect(role),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: role.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: role.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"permission-count\",\n              children: [role.permissions.length, \" permissions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this), role.isDefault ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"default-badge\",\n              children: \"R\\xF4le par d\\xE9faut\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-role-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteRole(role.id);\n              },\n              title: \"Supprimer ce r\\xF4le\",\n              \"aria-label\": \"Supprimer ce r\\xF4le\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 21\n            }, this)]\n          }, role.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), isAddingRole ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nouveau r\\xF4le\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              onClick: handleSaveNewRole,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this), \" Enregistrer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: () => setIsAddingRole(false),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this), \" Annuler\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nom du r\\xF4le\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newRole.name,\n              onChange: e => setNewRole({\n                ...newRole,\n                name: e.target.value\n              }),\n              placeholder: \"Nom du r\\xF4le\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newRole.description,\n              onChange: e => setNewRole({\n                ...newRole,\n                description: e.target.value\n              }),\n              placeholder: \"Description du r\\xF4le\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"permissions-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 17\n          }, this), Object.entries(DEFAULT_PERMISSIONS.reduce((acc, permission) => {\n            if (!acc[permission.category]) {\n              acc[permission.category] = [];\n            }\n            acc[permission.category].push(permission);\n            return acc;\n          }, {})).map(([category, permissions]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"permission-category\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"permissions-grid\",\n              children: permissions.map(permission => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `permission-card ${newRole.permissions.includes(permission.id) ? 'active' : ''} editable`,\n                onClick: () => {\n                  const newPermissions = newRole.permissions.includes(permission.id) ? newRole.permissions.filter(p => p !== permission.id) : [...newRole.permissions, permission.id];\n                  setNewRole({\n                    ...newRole,\n                    permissions: newPermissions\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"permission-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"permission-name\",\n                    children: permission.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 29\n                  }, this), newRole.permissions.includes(permission.id) && /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"permission-description\",\n                  children: permission.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 27\n                }, this)]\n              }, permission.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 21\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this) : selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedRole.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-description\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedRole.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"permissions-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 19\n          }, this), Object.entries(DEFAULT_PERMISSIONS.reduce((acc, permission) => {\n            if (!acc[permission.category]) {\n              acc[permission.category] = [];\n            }\n            acc[permission.category].push(permission);\n            return acc;\n          }, {})).map(([category, permissions]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"permission-category\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"permissions-grid\",\n              children: permissions.map(permission => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `permission-card ${selectedRole.permissions.includes(permission.id) ? 'active' : ''} editable`,\n                onClick: e => {\n                  e.preventDefault();\n                  console.log('Clic sur la permission:', permission.id);\n                  handlePermissionToggle(selectedRole.id, permission.id);\n                },\n                title: \"Cliquer pour activer/d\\xE9sactiver cette permission\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"permission-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"permission-name\",\n                    children: permission.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 31\n                  }, this), selectedRole.permissions.includes(permission.id) && /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"permission-description\",\n                  children: permission.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 29\n                }, this)]\n              }, permission.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 23\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PageAccessManagement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleManagement, \"YXYRNUJW/o61QFBbhUh3tvuUk30=\");\n_c = RoleManagement;\nexport default RoleManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleManagement\");","map":{"version":3,"names":["React","useState","useEffect","updateDoc","doc","setDoc","deleteDoc","db","RoleService","PageAccessManagement","jsxDEV","_jsxDEV","DEFAULT_PERMISSIONS","id","name","description","category","DEFAULT_ROLES","permissions","map","p","isDefault","isAdmin","RoleManagement","_s","roles","setRoles","selectedRole","setSelectedRole","loading","setLoading","error","setError","isAddingRole","setIsAddingRole","newRole","setNewRole","activeTab","setActiveTab","roleService","getInstance","fetchRoles","getRoles","length","initializeDefaultRoles","err","console","batch","role","roleRef","push","Promise","all","handleRoleSelect","handlePermissionToggle","roleId","permissionId","log","find","r","currentPermissions","newPermissions","includes","filter","updatedRole","prevRoles","updateRolePermissions","refreshedRoles","refreshedRole","message","handleSaveRole","prev","alert","handleCancelEdit","handleAddRole","handleSaveNewRole","toLowerCase","replace","roleToSave","handleDeleteRole","window","confirm","togglePageAccess","pageName","handleSavePageAccess","updatePageAccess","pageAccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","stopPropagation","title","type","value","onChange","target","placeholder","Object","entries","reduce","acc","permission","preventDefault","_c","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/RoleManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { collection, getDocs, updateDoc, doc, setDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport './RoleManagement.css';\nimport { RoleService } from '../services/RoleService';\nimport { Role as RoleType } from '../types/roles';\nimport { PAGES, PageName } from '../utils/pageAccessUtils';\nimport PageAccessManagement from './PageAccessManagement';\n\ninterface Permission {\n  id: string;\n  name: string;\n  description: string;\n  category: string;\n}\n\ninterface Role {\n  id: string;\n  name: string;\n  description: string;\n  permissions: string[];\n  isDefault?: boolean;\n  isAdmin?: boolean;\n  pageAccess?: { [key: string]: boolean };\n}\n\nconst DEFAULT_PERMISSIONS: Permission[] = [\n  // Gestion des utilisateurs\n  { id: 'users.view', name: 'Lecture des utilisateurs', description: 'Voir la liste des utilisateurs (page utilisateurs)', category: 'Utilisateurs' },\n  { id: 'users.create', name: 'Création d\\'utilisateurs', description: 'Créer de nouveaux utilisateurs', category: 'Utilisateurs' },\n  { id: 'users.edit', name: 'Modification des utilisateurs', description: 'Modifier les informations des utilisateurs', category: 'Utilisateurs' },\n  { id: 'users.delete', name: 'Suppression des utilisateurs', description: 'Supprimer des utilisateurs', category: 'Utilisateurs' },\n  \n  // Gestion des sites\n  { id: 'sites.view', name: 'Lecture des sites', description: 'Voir la liste des sites (page sites)', category: 'Sites' },\n  { id: 'sites.create', name: 'Création de sites', description: 'Créer de nouveaux sites', category: 'Sites' },\n  { id: 'sites.edit', name: 'Modification des sites', description: 'Modifier les informations des sites', category: 'Sites' },\n  { id: 'sites.delete', name: 'Suppression des sites', description: 'Supprimer des sites', category: 'Sites' },\n  \n  // Gestion des tournées\n  { id: 'tournees.view', name: 'Lecture des tournées', description: 'Voir la liste des tournées (page tournées)', category: 'Tournées' },\n  { id: 'tournees.create', name: 'Création de tournées', description: 'Créer de nouvelles tournées', category: 'Tournées' },\n  { id: 'tournees.edit', name: 'Modification des tournées', description: 'Modifier les tournées', category: 'Tournées' },\n  { id: 'tournees.delete', name: 'Suppression des tournées', description: 'Supprimer des tournées', category: 'Tournées' },\n  \n  // Gestion des passages\n  { id: 'passages.view', name: 'Lecture des passages', description: 'Voir les passages (page passages)', category: 'Passages' },\n  { id: 'passages.create', name: 'Création de passages', description: 'Créer des passages', category: 'Passages' },\n  { id: 'passages.edit', name: 'Modification des passages', description: 'Modifier les passages', category: 'Passages' },\n  { id: 'passages.delete', name: 'Suppression des passages', description: 'Supprimer des passages', category: 'Passages' },\n  \n  // Gestion des véhicules\n  { id: 'vehicules.view', name: 'Lecture des véhicules', description: 'Voir la liste des véhicules (page véhicules)', category: 'Véhicules' },\n  { id: 'vehicules.create', name: 'Création de véhicules', description: 'Créer de nouveaux véhicules', category: 'Véhicules' },\n  { id: 'vehicules.edit', name: 'Modification des véhicules', description: 'Modifier les véhicules', category: 'Véhicules' },\n  { id: 'vehicules.delete', name: 'Suppression des véhicules', description: 'Supprimer des véhicules', category: 'Véhicules' },\n  \n  // Gestion de la carte\n  { id: 'carte.view', name: 'Accès à la carte', description: 'Voir et utiliser la carte interactive (page carte)', category: 'Carte' },\n  { id: 'carte.edit', name: 'Modification de la carte', description: 'Modifier les paramètres de la carte', category: 'Carte' },\n  \n  // Accès aux fonctionnalités\n  { id: 'dashboard.view', name: 'Accès au tableau de bord', description: 'Voir et utiliser le tableau de bord (page principale)', category: 'Fonctionnalités' },\n  { id: 'init-passages.view', name: 'Initialisation des passages', description: 'Accéder à la page d\\'initialisation des passages', category: 'Fonctionnalités' },\n  { id: 'configuration_systeme', name: 'Configuration système', description: 'Accéder aux paramètres système (page admin)', category: 'Administration' }\n];\n\nconst DEFAULT_ROLES: Role[] = [\n  {\n    id: 'administrateur',\n    name: 'Administrateur',\n    description: 'Accès complet à toutes les fonctionnalités',\n    permissions: DEFAULT_PERMISSIONS.map(p => p.id),\n    isDefault: true,\n    isAdmin: true\n  },\n  {\n    id: 'utilisateur',\n    name: 'Utilisateur',\n    description: 'Accès standard aux fonctionnalités de base',\n    permissions: [\n      'passages.view',\n      'passages.create',\n      'passages.edit',\n      'sites.view',\n      'sites.create',\n      'sites.edit',\n      'tournees.view',\n      'tournees.create',\n      'tournees.edit',\n      'vehicules.view',\n      'vehicules.create',\n      'vehicules.edit',\n      'dashboard.view',\n      'init-passages.view',\n      'carte.view'\n    ],\n    isDefault: true\n  },\n  {\n    id: 'coursier',\n    name: 'Coursier',\n    description: 'Accès limité aux passages',\n    permissions: [\n      'passages.view',\n      'passages.create',\n      'passages.edit'\n    ],\n    isDefault: true\n  }\n];\n\nconst RoleManagement: React.FC = () => {\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [selectedRole, setSelectedRole] = useState<RoleType | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isAddingRole, setIsAddingRole] = useState(false);\n  const [newRole, setNewRole] = useState<Role>({\n    id: '',\n    name: '',\n    description: '',\n    permissions: []\n  });\n  const [activeTab, setActiveTab] = useState('permissions'); // 'permissions' ou 'pageAccess'\n\n  const roleService = RoleService.getInstance();\n\n  useEffect(() => {\n    fetchRoles();\n  }, []);\n\n  const fetchRoles = async () => {\n    try {\n      setLoading(true);\n      const roles = await roleService.getRoles();\n      \n      if (roles.length === 0) {\n        // Si aucun rôle n'existe, initialiser avec les rôles par défaut\n        await initializeDefaultRoles();\n        return;\n      }\n\n      setRoles(roles);\n    } catch (err) {\n      console.error('Erreur lors du chargement des rôles:', err);\n      setError('Erreur lors du chargement des rôles');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeDefaultRoles = async () => {\n    try {\n      const batch = [];\n      for (const role of DEFAULT_ROLES) {\n        const roleRef = doc(db, 'roles', role.id);\n        batch.push(setDoc(roleRef, role));\n      }\n      await Promise.all(batch);\n      await fetchRoles();\n    } catch (err) {\n      console.error('Erreur lors de l\\'initialisation des rôles par défaut:', err);\n      setError('Erreur lors de l\\'initialisation des rôles par défaut');\n    }\n  };\n\n  const handleRoleSelect = (role: RoleType) => {\n    setSelectedRole(role);\n  };\n\n  const handlePermissionToggle = async (roleId: string, permissionId: string) => {\n    console.log('handlePermissionToggle appelé avec:', { roleId, permissionId });\n    \n    const role = roles.find(r => r.id === roleId);\n    if (!role) {\n      console.error('Rôle non trouvé:', roleId);\n      return;\n    }\n\n    try {\n      setError(null);\n      \n      // Créer une copie des permissions actuelles\n      const currentPermissions = [...role.permissions];\n      const newPermissions = currentPermissions.includes(permissionId)\n        ? currentPermissions.filter(p => p !== permissionId)\n        : [...currentPermissions, permissionId];\n\n      // Mettre à jour l'état local immédiatement pour une réponse instantanée\n      const updatedRole = { ...role, permissions: newPermissions };\n      setRoles(prevRoles => \n        prevRoles.map(r => r.id === roleId ? updatedRole : r)\n      );\n      setSelectedRole(updatedRole);\n\n      // Mettre à jour dans Firestore via le service\n      await roleService.updateRolePermissions(roleId, newPermissions);\n\n      // Rafraîchir silencieusement les données en arrière-plan\n      const refreshedRoles = await roleService.getRoles();\n      setRoles(refreshedRoles);\n      \n      // Mettre à jour le rôle sélectionné si nécessaire\n      const refreshedRole = refreshedRoles.find(r => r.id === roleId);\n      if (refreshedRole) {\n        setSelectedRole(refreshedRole);\n      }\n\n    } catch (err: any) {\n      console.error('Erreur lors de la mise à jour des permissions:', err);\n      setError(`Erreur lors de la mise à jour de la permission : ${err.message}`);\n      \n      // En cas d'erreur, restaurer l'état précédent\n      await fetchRoles();\n    }\n  };\n\n  const handleSaveRole = async () => {\n    if (!selectedRole) return;\n\n    try {\n      const roleRef = doc(db, 'roles', selectedRole.id);\n      await updateDoc(roleRef, {\n        name: selectedRole.name,\n        description: selectedRole.description,\n        permissions: selectedRole.permissions\n      });\n\n      setRoles(prev => prev.map(role => \n        role.id === selectedRole.id ? selectedRole : role\n      ));\n      \n      alert('Rôle mis à jour avec succès');\n    } catch (err) {\n      setError('Erreur lors de la sauvegarde du rôle');\n    }\n  };\n\n  const handleCancelEdit = () => {\n    if (selectedRole) {\n      // Restaurer l'état original du rôle\n      setSelectedRole(roles.find(r => r.id === selectedRole.id) || null);\n    }\n  };\n\n  const handleAddRole = () => {\n    setIsAddingRole(true);\n    setNewRole({\n      id: '',\n      name: '',\n      description: '',\n      permissions: []\n    });\n  };\n\n  const handleSaveNewRole = async () => {\n    if (!newRole.name || !newRole.description) {\n      setError('Le nom et la description sont requis');\n      return;\n    }\n\n    try {\n      const roleId = newRole.name.toLowerCase().replace(/\\s+/g, '_');\n      const roleToSave = {\n        ...newRole,\n        id: roleId\n      };\n\n      const roleRef = doc(db, 'roles', roleId);\n      await setDoc(roleRef, roleToSave);\n\n      setRoles([...roles, roleToSave]);\n      setIsAddingRole(false);\n      setNewRole({\n        id: '',\n        name: '',\n        description: '',\n        permissions: []\n      });\n    } catch (err) {\n      setError('Erreur lors de la création du rôle');\n    }\n  };\n\n  const handleDeleteRole = async (roleId: string) => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer ce rôle ?')) {\n      return;\n    }\n\n    try {\n      const roleRef = doc(db, 'roles', roleId);\n      await deleteDoc(roleRef);\n      setRoles(roles.filter(role => role.id !== roleId));\n      setSelectedRole(null);\n    } catch (err) {\n      setError('Erreur lors de la suppression du rôle');\n    }\n  };\n\n  const togglePageAccess = (pageName: 'dashboard' | 'userManagement' | 'shipmentTracking' | 'reports' | 'settings') => {\n    // Implementation of togglePageAccess\n  };\n\n  const handleSavePageAccess = async () => {\n    if (!selectedRole) return;\n\n    try {\n      const roleService = RoleService.getInstance();\n      await roleService.updatePageAccess(selectedRole.id, selectedRole.pageAccess);\n      alert('Accès aux pages mis à jour avec succès !');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour des accès:', error);\n      alert('Erreur lors de la mise à jour des accès.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Chargement des rôles...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"role-management\">\n      <div className=\"roles-header\">\n        <h1>Gestion des Rôles et Permissions</h1>\n        <button className=\"add-role-button\" onClick={handleAddRole}>\n          Ajouter un nouveau rôle\n        </button>\n      </div>\n\n      <div className=\"tab-navigation\">\n        <button \n          className={`tab-button ${activeTab === 'permissions' ? 'active' : ''}`}\n          onClick={() => setActiveTab('permissions')}\n        >\n          Permissions\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'pageAccess' ? 'active' : ''}`}\n          onClick={() => setActiveTab('pageAccess')}\n        >\n          Accès aux pages\n        </button>\n      </div>\n\n      {/* Afficher le contenu en fonction de l'onglet actif */}\n      {activeTab === 'permissions' ? (\n        <div className=\"permissions-content\">\n          <div className=\"roles-list\">\n            <div className=\"roles-header\">\n              <h3>Rôles disponibles</h3>\n            </div>\n            <div className=\"roles-grid\">\n              {roles.map(role => (\n                <div\n                  key={role.id}\n                  className={`role-card ${selectedRole?.id === role.id ? 'selected' : ''}`}\n                  onClick={() => handleRoleSelect(role)}\n                >\n                  <h4>{role.name}</h4>\n                  <p>{role.description}</p>\n                  <div className=\"permission-count\">\n                    {role.permissions.length} permissions\n                  </div>\n                  {role.isDefault ? (\n                    <div className=\"default-badge\">\n                      Rôle par défaut\n                    </div>\n                  ) : (\n                    <button\n                      className=\"delete-role-button\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDeleteRole(role.id);\n                      }}\n                      title=\"Supprimer ce rôle\"\n                      aria-label=\"Supprimer ce rôle\"\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </button>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {isAddingRole ? (\n            <div className=\"role-details\">\n              <div className=\"role-header\">\n                <h3>Nouveau rôle</h3>\n                <div className=\"edit-actions\">\n                  <button \n                    className=\"save-button\"\n                    onClick={handleSaveNewRole}\n                  >\n                    <i className=\"fas fa-save\"></i> Enregistrer\n                  </button>\n                  <button \n                    className=\"cancel-button\"\n                    onClick={() => setIsAddingRole(false)}\n                  >\n                    <i className=\"fas fa-times\"></i> Annuler\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"role-form\">\n                <div className=\"form-group\">\n                  <label>Nom du rôle</label>\n                  <input\n                    type=\"text\"\n                    value={newRole.name}\n                    onChange={(e) => setNewRole({...newRole, name: e.target.value})}\n                    placeholder=\"Nom du rôle\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Description</label>\n                  <textarea\n                    value={newRole.description}\n                    onChange={(e) => setNewRole({...newRole, description: e.target.value})}\n                    placeholder=\"Description du rôle\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"permissions-section\">\n                <h4>Permissions</h4>\n                {Object.entries(\n                  DEFAULT_PERMISSIONS.reduce((acc, permission) => {\n                    if (!acc[permission.category]) {\n                      acc[permission.category] = [];\n                    }\n                    acc[permission.category].push(permission);\n                    return acc;\n                  }, {} as { [key: string]: Permission[] })\n                ).map(([category, permissions]) => (\n                  <div key={category} className=\"permission-category\">\n                    <h5>{category}</h5>\n                    <div className=\"permissions-grid\">\n                      {permissions.map(permission => (\n                        <div\n                          key={permission.id}\n                          className={`permission-card ${\n                            newRole.permissions.includes(permission.id) ? 'active' : ''\n                          } editable`}\n                          onClick={() => {\n                            const newPermissions = newRole.permissions.includes(permission.id)\n                              ? newRole.permissions.filter(p => p !== permission.id)\n                              : [...newRole.permissions, permission.id];\n                            setNewRole({...newRole, permissions: newPermissions});\n                          }}\n                        >\n                          <div className=\"permission-header\">\n                            <span className=\"permission-name\">{permission.name}</span>\n                            {newRole.permissions.includes(permission.id) && (\n                              <i className=\"fas fa-check\"></i>\n                            )}\n                          </div>\n                          <p className=\"permission-description\">\n                            {permission.description}\n                          </p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ) : (\n            selectedRole && (\n              <div className=\"role-details\">\n                <div className=\"role-header\">\n                  <h3>{selectedRole.name}</h3>\n                </div>\n\n                <div className=\"role-description\">\n                  <p>{selectedRole.description}</p>\n                </div>\n\n                <div className=\"permissions-section\">\n                  <h4>Permissions</h4>\n                  {Object.entries(\n                    DEFAULT_PERMISSIONS.reduce((acc, permission) => {\n                      if (!acc[permission.category]) {\n                        acc[permission.category] = [];\n                      }\n                      acc[permission.category].push(permission);\n                      return acc;\n                    }, {} as { [key: string]: Permission[] })\n                  ).map(([category, permissions]) => (\n                    <div key={category} className=\"permission-category\">\n                      <h5>{category}</h5>\n                      <div className=\"permissions-grid\">\n                        {permissions.map(permission => (\n                          <div\n                            key={permission.id}\n                            className={`permission-card ${\n                              selectedRole.permissions.includes(permission.id) ? 'active' : ''\n                            } editable`}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              console.log('Clic sur la permission:', permission.id);\n                              handlePermissionToggle(selectedRole.id, permission.id);\n                            }}\n                            title=\"Cliquer pour activer/désactiver cette permission\"\n                          >\n                            <div className=\"permission-header\">\n                              <span className=\"permission-name\">{permission.name}</span>\n                              {selectedRole.permissions.includes(permission.id) && (\n                                <i className=\"fas fa-check\"></i>\n                              )}\n                            </div>\n                            <p className=\"permission-description\">\n                              {permission.description}\n                            </p>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )\n          )}\n        </div>\n      ) : (\n        <PageAccessManagement />\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoleManagement; \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}