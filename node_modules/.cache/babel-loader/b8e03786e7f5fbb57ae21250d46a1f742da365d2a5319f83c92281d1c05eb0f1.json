{"ast":null,"code":"export const PAGES={DASHBOARD:'dashboard',PASSAGES:'passages',SITES:'sites',TOURNEES:'tournees',VEHICULES:'vehicules',CARTE:'carte',USER_MANAGEMENT:'userManagement',ADMINISTRATION:'administration',PASSAGE_DETAILS:'passageDetails',TOURNEE_DETAILS:'tourneeDetails',VEHICULES_ADVANCED:'vehiculesAdvanced'};export function hasPageAccess(user,page,roles){if(!user)return false;const userRole=roles.find(role=>role.name===user.role);if(!userRole)return false;const pageAccess=userRole.pageAccess;return!!pageAccess[page];}export function getUserRoleDetails(user,roles){if(!user)return null;return roles.find(role=>role.name===user.role)||null;}","map":{"version":3,"names":["PAGES","DASHBOARD","PASSAGES","SITES","TOURNEES","VEHICULES","CARTE","USER_MANAGEMENT","ADMINISTRATION","PASSAGE_DETAILS","TOURNEE_DETAILS","VEHICULES_ADVANCED","hasPageAccess","user","page","roles","userRole","find","role","name","pageAccess","getUserRoleDetails"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/utils/pageAccessUtils.ts"],"sourcesContent":["import { Role, User } from '../types/roles';\n\ninterface PageAccess {\n  dashboard?: boolean;\n  passages?: boolean;\n  sites?: boolean;\n  tournees?: boolean;\n  vehicules?: boolean;\n  carte?: boolean;\n  userManagement?: boolean;\n  administration?: boolean;\n  passageDetails?: boolean;\n  tourneeDetails?: boolean;\n  vehiculesAdvanced?: boolean;\n}\n\nexport type PageName = \n  | 'dashboard'\n  | 'passages'\n  | 'sites'\n  | 'tournees'\n  | 'vehicules'\n  | 'carte'\n  | 'userManagement'\n  | 'administration'\n  | 'passageDetails'\n  | 'tourneeDetails'\n  | 'vehiculesAdvanced';\n\nexport const PAGES = {\n  DASHBOARD: 'dashboard',\n  PASSAGES: 'passages',\n  SITES: 'sites',\n  TOURNEES: 'tournees',\n  VEHICULES: 'vehicules',\n  CARTE: 'carte',\n  USER_MANAGEMENT: 'userManagement',\n  ADMINISTRATION: 'administration',\n  PASSAGE_DETAILS: 'passageDetails',\n  TOURNEE_DETAILS: 'tourneeDetails',\n  VEHICULES_ADVANCED: 'vehiculesAdvanced',\n} as const;\n\nexport function hasPageAccess(user: User | null, page: PageName, roles: Role[]): boolean {\n  if (!user) return false;\n\n  const userRole = roles.find(role => role.name === user.role);\n  if (!userRole) return false;\n\n  const pageAccess = userRole.pageAccess as PageAccess;\n  return !!pageAccess[page];\n}\n\nexport function getUserRoleDetails(user: User | null, roles: Role[]): Role | null {\n  if (!user) return null;\n  return roles.find(role => role.name === user.role) || null;\n} \r\n"],"mappings":"AA6BA,MAAO,MAAM,CAAAA,KAAK,CAAG,CACnBC,SAAS,CAAE,WAAW,CACtBC,QAAQ,CAAE,UAAU,CACpBC,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,UAAU,CACpBC,SAAS,CAAE,WAAW,CACtBC,KAAK,CAAE,OAAO,CACdC,eAAe,CAAE,gBAAgB,CACjCC,cAAc,CAAE,gBAAgB,CAChCC,eAAe,CAAE,gBAAgB,CACjCC,eAAe,CAAE,gBAAgB,CACjCC,kBAAkB,CAAE,mBACtB,CAAU,CAEV,MAAO,SAAS,CAAAC,aAAaA,CAACC,IAAiB,CAAEC,IAAc,CAAEC,KAAa,CAAW,CACvF,GAAI,CAACF,IAAI,CAAE,MAAO,MAAK,CAEvB,KAAM,CAAAG,QAAQ,CAAGD,KAAK,CAACE,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,IAAI,GAAKN,IAAI,CAACK,IAAI,CAAC,CAC5D,GAAI,CAACF,QAAQ,CAAE,MAAO,MAAK,CAE3B,KAAM,CAAAI,UAAU,CAAGJ,QAAQ,CAACI,UAAwB,CACpD,MAAO,CAAC,CAACA,UAAU,CAACN,IAAI,CAAC,CAC3B,CAEA,MAAO,SAAS,CAAAO,kBAAkBA,CAACR,IAAiB,CAAEE,KAAa,CAAe,CAChF,GAAI,CAACF,IAAI,CAAE,MAAO,KAAI,CACtB,MAAO,CAAAE,KAAK,CAACE,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,IAAI,GAAKN,IAAI,CAACK,IAAI,CAAC,EAAI,IAAI,CAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}