{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LS_110\\\\Documents\\\\GitHub\\\\inovie-SCAN-web-main\\\\src\\\\components\\\\Tournees.tsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, Timestamp } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale } from 'react-datepicker';\nimport { fr } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './EditMode.css';\nimport './Tournees.css';\nimport { usePoles } from '../services/PoleService';\nimport PoleSelector from './PoleSelector';\nimport PoleFilter from './PoleFilter';\n\n// Enregistrer la locale française\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nregisterLocale('fr', fr);\nconst Tournees = () => {\n  _s();\n  const [tournees, setTournees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // État pour le modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTournee, setCurrentTournee] = useState({\n    nom: '',\n    heureDepart: '',\n    heureFinPrevue: '',\n    heureFinReelle: '',\n    coursier: '',\n    vehicules: [],\n    nombreColis: 0,\n    statut: 'en_attente'\n  });\n\n  // État pour le mode édition et la sélection multiple\n  const [editMode, setEditMode] = useState(false);\n  const [selectedTournees, setSelectedTournees] = useState([]);\n  const [editingTournees, setEditingTournees] = useState({});\n  const [vehicules, setVehicules] = useState([]);\n  const [sites, setSites] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n\n  // Ajouter un nouvel état pour les nouvelles tournées temporaires\n  const [newTournees, setNewTournees] = useState([]);\n\n  // État pour la recherche rapide\n  const [quickSearch, setQuickSearch] = useState('');\n  const [filteredTournees, setFilteredTournees] = useState([]);\n\n  // Ajout du filtre par pôle\n  const [selectedPole, setSelectedPole] = useState('');\n\n  // Utilisation du hook usePoles\n  const {\n    poles\n  } = usePoles();\n\n  // Fonction pour obtenir le nom du pôle\n  const getPoleNameById = poleId => {\n    if (!poleId) return '-';\n    const pole = poles.find(p => p.id === poleId);\n    return pole ? pole.nom : poleId;\n  };\n  useEffect(() => {\n    fetchTournees();\n    fetchVehicules();\n    fetchSites();\n  }, []);\n\n  // Initialiser les tournées filtrées au chargement\n  useEffect(() => {\n    setFilteredTournees(tournees);\n  }, [tournees]);\n\n  // Effet pour filtrer les tournées en fonction de la recherche rapide et du pôle sélectionné\n  useEffect(() => {\n    let results = tournees;\n\n    // Filtrer par pôle si un pôle est sélectionné\n    if (selectedPole) {\n      results = results.filter(tournee => tournee.pole === selectedPole);\n    }\n\n    // Ensuite filtrer par recherche rapide\n    if (quickSearch.trim()) {\n      const searchTerm = quickSearch.toLowerCase().trim();\n      results = results.filter(tournee => {\n        // Rechercher dans tous les champs textuels de la tournée\n        return tournee.nom.toLowerCase().includes(searchTerm) || tournee.heureDepart.toLowerCase().includes(searchTerm) || (tournee.heureFinReelle || '').toLowerCase().includes(searchTerm) || tournee.statut.toLowerCase().includes(searchTerm) || tournee.vehicules.some(vehiculeId => {\n          const vehicule = vehicules.find(v => v.id === vehiculeId);\n          return vehicule && vehicule.immatriculation.toLowerCase().includes(searchTerm);\n        });\n      });\n    }\n    setFilteredTournees(results);\n  }, [quickSearch, tournees, vehicules, selectedPole]);\n\n  // Effet pour gérer la sélection/désélection de toutes les tournées\n  useEffect(() => {\n    if (selectAll) {\n      setSelectedTournees(tournees.map(tournee => tournee.id));\n    } else if (selectedTournees.length === tournees.length) {\n      // Si toutes les tournées sont sélectionnées mais que selectAll est false, cela signifie que l'utilisateur a désélectionné\n      setSelectedTournees([]);\n    }\n  }, [selectAll]);\n  const fetchTournees = async () => {\n    try {\n      setLoading(true);\n      const tourneesRef = collection(db, 'tournees');\n      const snapshot = await getDocs(tourneesRef);\n      if (!snapshot.empty) {\n        const tourneesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            nom: (data === null || data === void 0 ? void 0 : data.nom) || '',\n            heureDepart: (data === null || data === void 0 ? void 0 : data.heureDepart) || '',\n            heureFinPrevue: (data === null || data === void 0 ? void 0 : data.heureFinPrevue) || '',\n            heureFinReelle: (data === null || data === void 0 ? void 0 : data.heureFinReelle) || '',\n            coursier: (data === null || data === void 0 ? void 0 : data.coursier) || '',\n            vehicules: (data === null || data === void 0 ? void 0 : data.vehicules) || [],\n            nombreColis: (data === null || data === void 0 ? void 0 : data.nombreColis) || 0,\n            statut: (data === null || data === void 0 ? void 0 : data.statut) || 'en_attente',\n            pole: (data === null || data === void 0 ? void 0 : data.pole) || '',\n            siteDepart: (data === null || data === void 0 ? void 0 : data.siteDepart) || ''\n          };\n        });\n        console.log(\"Tournées récupérées depuis Firestore:\", tourneesData);\n        setTournees(tourneesData);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des tournées:', error);\n      setError('Erreur lors de la récupération des données');\n      setTournees([]);\n      setLoading(false);\n    }\n  };\n  const fetchVehicules = async () => {\n    try {\n      const vehiculesRef = collection(db, 'vehicules');\n      const snapshot = await getDocs(vehiculesRef);\n      if (!snapshot.empty) {\n        const vehiculesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            immatriculation: (data === null || data === void 0 ? void 0 : data.immatriculation) || ''\n          };\n        });\n        setVehicules(vehiculesData);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des véhicules:', error);\n    }\n  };\n  const fetchSites = async () => {\n    try {\n      const sitesRef = collection(db, 'sites');\n      const snapshot = await getDocs(sitesRef);\n      if (!snapshot.empty) {\n        const sitesData = snapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            nom: (data === null || data === void 0 ? void 0 : data.nom) || ''\n          };\n        });\n        setSites(sitesData);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des sites:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'nombreColis') {\n      setCurrentTournee(prev => ({\n        ...prev,\n        [name]: parseInt(value, 10)\n      }));\n    } else if (name === 'vehicules') {\n      const selectedVehicules = Array.from(e.target.selectedOptions, option => option.value);\n      setCurrentTournee(prev => ({\n        ...prev,\n        vehicules: selectedVehicules\n      }));\n    } else {\n      setCurrentTournee(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleCreateOrUpdateTournee = async () => {\n    try {\n      const tourneeToSave = {\n        ...currentTournee,\n        id: currentTournee.id || '',\n        heureDepart: currentTournee.heureDepart || '',\n        heureFinPrevue: currentTournee.heureFinPrevue || '',\n        heureFinReelle: currentTournee.heureFinReelle || '',\n        coursier: currentTournee.coursier || '',\n        vehicules: currentTournee.vehicules || [],\n        nombreColis: currentTournee.nombreColis || 0,\n        statut: currentTournee.statut || 'en_attente'\n      };\n      if (isEditing) {\n        await updateDoc(doc(db, 'tournees', tourneeToSave.id), {\n          ...tourneeToSave\n        });\n      } else {\n        await addDoc(collection(db, 'tournees'), {\n          ...tourneeToSave\n        });\n      }\n      fetchTournees();\n      closeModal();\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde de la tournée', error);\n      setError('Erreur lors de la sauvegarde de la tournée');\n    }\n  };\n  const handleEdit = tournee => {\n    setCurrentTournee(tournee);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n  const handleDeleteSelected = async () => {\n    if (selectedTournees.length === 0) {\n      alert('Veuillez sélectionner au moins une tournée à supprimer');\n      return;\n    }\n    if (window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedTournees.length} tournée(s) ?`)) {\n      try {\n        // Supprimer les tournées sélectionnées de Firestore\n        const deletePromises = selectedTournees.map(id => deleteDoc(doc(db, 'tournees', id)));\n        await Promise.all(deletePromises);\n\n        // Mettre à jour l'état local\n        setTournees(tournees.filter(tournee => !selectedTournees.includes(tournee.id)));\n        setSelectedTournees([]);\n        setSelectAll(false);\n      } catch (error) {\n        console.error('Erreur lors de la suppression:', error);\n        setError('Erreur lors de la suppression');\n      }\n    }\n  };\n\n  // Fonction pour gérer la sélection/désélection de toutes les tournées\n  const handleSelectAllChange = () => {\n    setSelectAll(!selectAll);\n  };\n  const toggleEditMode = () => {\n    if (editMode) {\n      // Si on quitte le mode édition, réinitialiser les sélections et les modifications\n      setSelectedTournees([]);\n      setEditingTournees({});\n      setSelectAll(false);\n      setNewTournees([]);\n\n      // Rafraîchir les données depuis Firebase\n      fetchTournees();\n    } else {\n      // Si on entre en mode édition, initialiser les sites en édition\n      const editingTourneesObj = {};\n      filteredTournees.forEach(tournee => {\n        editingTourneesObj[tournee.id] = {\n          ...tournee\n        };\n      });\n      setEditingTournees(editingTourneesObj);\n    }\n\n    // Inverser le mode édition\n    setEditMode(!editMode);\n\n    // Réinitialiser la recherche rapide et les filtres\n    setQuickSearch('');\n    setSelectedPole('');\n  };\n  const toggleTourneeSelection = id => {\n    if (selectedTournees.includes(id)) {\n      setSelectedTournees(selectedTournees.filter(tourneeId => tourneeId !== id));\n      // Si on désélectionne une tournée, on désactive aussi \"Tout sélectionner\"\n      setSelectAll(false);\n    } else {\n      setSelectedTournees([...selectedTournees, id]);\n      // Si toutes les tournées sont sélectionnées, on active \"Tout sélectionner\"\n      if (selectedTournees.length + 1 === tournees.length) {\n        setSelectAll(true);\n      }\n    }\n  };\n  const formatDate = date => {\n    if (!date) return '';\n    try {\n      // Si c'est un Timestamp\n      if (date instanceof Timestamp) {\n        return date.toDate().toLocaleDateString('fr-FR');\n      }\n\n      // Si c'est une Date\n      if (date instanceof Date) {\n        return date.toLocaleDateString('fr-FR');\n      }\n      return '';\n    } catch (error) {\n      console.error('Erreur lors du formatage de la date:', error);\n      return '';\n    }\n  };\n  const convertTimestampToDate = timestamp => {\n    if (!timestamp) return null;\n    try {\n      if (timestamp instanceof Timestamp) {\n        return timestamp.toDate();\n      }\n      return null;\n    } catch (error) {\n      console.error('Erreur lors de la conversion du timestamp:', error);\n      return null;\n    }\n  };\n  const getStatusClass = statut => {\n    switch (statut) {\n      case 'en_attente':\n        return 'en-attente';\n      case 'en_cours':\n        return 'en-cours';\n      case 'terminee':\n        return 'livré';\n      case 'annulee':\n        return 'annulé';\n      default:\n        return '';\n    }\n  };\n  const getStatusText = statut => {\n    switch (statut) {\n      case 'en_attente':\n        return 'En attente';\n      case 'en_cours':\n        return 'En cours';\n      case 'terminee':\n        return 'Terminée';\n      case 'annulee':\n        return 'Annulée';\n      default:\n        return '';\n    }\n  };\n  const addNewTourneeRow = () => {\n    // Forcer le mode édition si ce n'est pas déjà le cas\n    if (!editMode) {\n      setEditMode(true);\n    }\n    const newTournee = {\n      id: `temp-${Date.now()}`,\n      // Identifiant temporaire unique\n      nom: '',\n      heureDepart: '',\n      heureFinPrevue: '',\n      heureFinReelle: '',\n      coursier: '',\n      vehicules: [],\n      nombreColis: 0,\n      statut: 'en_attente'\n    };\n\n    // Ajouter la nouvelle ligne au début du tableau\n    setNewTournees(prevNewTournees => [newTournee, ...prevNewTournees]);\n\n    // Ajouter un délai pour permettre le rendu\n    setTimeout(() => {\n      const firstInput = document.querySelector('.tournees-table-container .new-tournee-row input');\n      if (firstInput) {\n        firstInput.focus();\n      }\n    }, 100);\n  };\n  const handleNewTourneeChange = (index, field, value) => {\n    const updatedNewTournees = [...newTournees];\n    updatedNewTournees[index] = {\n      ...updatedNewTournees[index],\n      [field]: value\n    };\n    setNewTournees(updatedNewTournees);\n  };\n  const removeNewTourneeRow = index => {\n    const updatedNewTournees = newTournees.filter((_, i) => i !== index);\n    setNewTournees(updatedNewTournees);\n  };\n  const saveAllChanges = async () => {\n    try {\n      console.log(\"Début de la sauvegarde des modifications...\");\n      console.log(\"Tournées à mettre à jour:\", Object.keys(editingTournees).length);\n      console.log(\"Nouvelles tournées à ajouter:\", newTournees.length);\n\n      // Mettre à jour les tournées existantes\n      const updatePromises = Object.entries(editingTournees).map(async ([id, tournee]) => {\n        try {\n          console.log(`Mise à jour de la tournée ${id}:`, tournee);\n\n          // Créer un objet avec uniquement les champs définis\n          const updateData = {};\n\n          // Vérifier et ajouter chaque champ s'il est défini\n          if (tournee.nom !== undefined) updateData.nom = tournee.nom;\n          if (tournee.heureDepart !== undefined) updateData.heureDepart = tournee.heureDepart;\n          if (tournee.heureFinPrevue !== undefined) updateData.heureFinPrevue = tournee.heureFinPrevue;\n          if (tournee.heureFinReelle !== undefined) updateData.heureFinReelle = tournee.heureFinReelle;\n          if (tournee.coursier !== undefined) updateData.coursier = tournee.coursier;\n          if (tournee.vehicules !== undefined) updateData.vehicules = tournee.vehicules;\n          if (tournee.nombreColis !== undefined) updateData.nombreColis = tournee.nombreColis;\n          if (tournee.statut !== undefined) updateData.statut = tournee.statut;\n          if (tournee.pole !== undefined) updateData.pole = tournee.pole;\n          await updateDoc(doc(db, 'tournees', id), updateData);\n          console.log(`Tournée ${id} mise à jour avec succès`);\n          return id;\n        } catch (error) {\n          console.error(`Erreur lors de la mise à jour de la tournée ${id}:`, error);\n          throw error;\n        }\n      });\n\n      // Ajouter les nouvelles tournées\n      const addPromises = newTournees.map(async (newTournee, index) => {\n        try {\n          console.log(`Ajout de la nouvelle tournée à l'index ${index}:`, newTournee);\n\n          // Supprimer l'ID temporaire avant l'ajout\n          const {\n            id,\n            ...tourneeToAdd\n          } = newTournee;\n\n          // S'assurer que tous les champs requis sont présents\n          const tourneeComplete = {\n            ...tourneeToAdd,\n            vehicules: tourneeToAdd.vehicules || [],\n            nombreColis: tourneeToAdd.nombreColis || 0,\n            statut: tourneeToAdd.statut || 'en_attente'\n          };\n          const docRef = await addDoc(collection(db, 'tournees'), tourneeComplete);\n          console.log(`Nouvelle tournée ajoutée avec l'ID: ${docRef.id}`);\n          return docRef.id;\n        } catch (error) {\n          console.error(`Erreur lors de l'ajout de la nouvelle tournée à l'index ${index}:`, error);\n          throw error;\n        }\n      });\n\n      // Attendre que toutes les opérations soient terminées\n      const results = await Promise.allSettled([...updatePromises, ...addPromises]);\n\n      // Vérifier les résultats\n      const fulfilled = results.filter(result => result.status === 'fulfilled').length;\n      const rejected = results.filter(result => result.status === 'rejected').length;\n      console.log(`Opérations terminées: ${fulfilled} réussies, ${rejected} échouées`);\n      if (rejected > 0) {\n        console.warn(\"Certaines opérations ont échoué. Voir les erreurs ci-dessus.\");\n      }\n\n      // Réinitialiser les états\n      setEditingTournees({});\n      setNewTournees([]);\n\n      // Recharger les tournées\n      await fetchTournees();\n      if (rejected > 0) {\n        alert(`Modifications partiellement enregistrées. ${rejected} opérations ont échoué.`);\n      } else {\n        alert('Modifications enregistrées avec succès');\n      }\n\n      // Désactiver le mode édition après sauvegarde réussie\n      setEditMode(false);\n      setSelectedTournees([]);\n      setSelectAll(false);\n      console.log('Toutes les modifications ont été enregistrées avec succès');\n      return true;\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des modifications:', error);\n      alert('Erreur lors de la sauvegarde des modifications. Veuillez réessayer.');\n      throw error;\n    }\n  };\n  const handleCellChange = (id, field, value) => {\n    console.log(`Mise à jour de la tournée ${id}, champ ${field} avec la valeur:`, value);\n    setEditingTournees({\n      ...editingTournees,\n      [id]: {\n        ...editingTournees[id],\n        [field]: value\n      }\n    });\n  };\n  const formatDateForInput = date => {\n    if (!date) return '';\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setIsEditing(false);\n    setCurrentTournee({\n      nom: '',\n      heureDepart: '',\n      heureFinPrevue: '',\n      heureFinReelle: '',\n      coursier: '',\n      vehicules: [],\n      nombreColis: 0,\n      statut: 'en_attente'\n    });\n  };\n\n  // Fonction pour gérer le changement de pôle\n  const handlePoleChange = pole => {\n    setSelectedPole(pole);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des tourn\\xE9es...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Tourn\\xE9es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky-header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: saveAllChanges,\n            disabled: loading || selectedTournees.length === 0 && newTournees.length === 0,\n            style: {\n              backgroundColor: '#4CAF50',\n              // Vert\n              color: 'white',\n              fontWeight: 'bold'\n            },\n            title: \"Enregistrer les modifications\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this), \" Enr. \", selectedTournees.length > 0 || newTournees.length > 0 ? `(${selectedTournees.length}${newTournees.length > 0 ? `+${newTournees.length}` : ''})` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-secondary\",\n            onClick: () => {\n              if (window.confirm(\"Êtes-vous sûr de vouloir annuler toutes les modifications ?\")) {\n                setEditingTournees({});\n                setNewTournees([]);\n                setSelectedTournees([]);\n                setSelectAll(false);\n                setEditMode(false);\n              }\n            },\n            style: {\n              marginLeft: '5px'\n            },\n            disabled: loading,\n            title: \"Annuler les modifications\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this), \" Annuler\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: addNewTourneeRow,\n            style: {\n              marginLeft: '5px',\n              backgroundColor: '#FF9800',\n              // Orange\n              color: 'white',\n              fontWeight: 'bold'\n            },\n            disabled: loading,\n            title: \"Ajouter une nouvelle tourn\\xE9e\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this), \" Ajouter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-danger\",\n            onClick: handleDeleteSelected,\n            disabled: selectedTournees.length === 0 || loading,\n            style: {\n              marginLeft: '5px',\n              backgroundColor: '#f44336',\n              color: 'white',\n              fontWeight: 'bold'\n            },\n            title: \"Supprimer les tourn\\xE9es s\\xE9lectionn\\xE9es\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this), \" Sup. (\", selectedTournees.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: toggleEditMode,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this), \" Modifier\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-search-container\",\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"quick-search-input\",\n          placeholder: \"Recherche rapide...\",\n          value: quickSearch,\n          onChange: e => setQuickSearch(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pole-filter\",\n          children: /*#__PURE__*/_jsxDEV(PoleFilter, {\n            onPoleChange: handlePoleChange,\n            selectedPole: selectedPole,\n            label: \"Filtrer par p\\xF4le\",\n            className: \"pole-filter-component\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournees-table-container\",\n      style: {\n        overflowX: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [filteredTournees.length, \" r\\xE9sultat(s) trouv\\xE9(s)\", quickSearch ? ` pour la recherche \"${quickSearch}\"` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: `data-table ${editMode ? 'editing' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [editMode && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectAll,\n                onChange: handleSelectAllChange,\n                title: \"S\\xE9lectionner/D\\xE9s\\xE9lectionner toutes les tourn\\xE9es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"P\\xD4LE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Heure de D\\xE9part\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Heure d'Arriv\\xE9e\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"V\\xE9hicules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Statut\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [editMode && newTournees.map((newTournee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"new-tournee-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(PoleSelector, {\n                value: newTournee.pole || '',\n                onChange: value => handleNewTourneeChange(index, 'pole', value),\n                placeholder: \"S\\xE9lectionner un p\\xF4le\",\n                style: {\n                  width: '100%'\n                },\n                showSearch: true,\n                allowClear: true,\n                title: \"P\\xF4le de la tourn\\xE9e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTournee.nom || '',\n                onChange: e => handleNewTourneeChange(index, 'nom', e.target.value),\n                className: \"inline-edit-input\",\n                placeholder: \"Nom de la tourn\\xE9e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                position: 'relative'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-datepicker-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                  selected: newTournee.heureDepart ? new Date(`2000-01-01T${newTournee.heureDepart}`) : null,\n                  onChange: date => {\n                    if (date) {\n                      const hours = date.getHours().toString().padStart(2, '0');\n                      const minutes = date.getMinutes().toString().padStart(2, '0');\n                      handleNewTourneeChange(index, 'heureDepart', `${hours}:${minutes}`);\n                    }\n                  },\n                  locale: \"fr\",\n                  showTimeSelect: true,\n                  showTimeSelectOnly: true,\n                  timeIntervals: 15,\n                  timeCaption: \"Heure\",\n                  dateFormat: \"HH:mm\",\n                  placeholderText: \"HH:MM\",\n                  className: \"custom-datepicker-input\",\n                  popperPlacement: \"bottom-start\",\n                  popperModifiers: [{\n                    name: 'offset',\n                    options: {\n                      offset: [0, 8]\n                    },\n                    fn: state => state\n                  }]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"custom-datepicker-icon\",\n                  children: \"\\uD83D\\uDD52\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                position: 'relative'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-datepicker-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                  selected: newTournee.heureFinReelle ? new Date(`2000-01-01T${newTournee.heureFinReelle}`) : null,\n                  onChange: date => {\n                    if (date) {\n                      const hours = date.getHours().toString().padStart(2, '0');\n                      const minutes = date.getMinutes().toString().padStart(2, '0');\n                      handleNewTourneeChange(index, 'heureFinReelle', `${hours}:${minutes}`);\n                    }\n                  },\n                  locale: \"fr\",\n                  showTimeSelect: true,\n                  showTimeSelectOnly: true,\n                  timeIntervals: 15,\n                  timeCaption: \"Heure\",\n                  dateFormat: \"HH:mm\",\n                  placeholderText: \"HH:MM\",\n                  className: \"custom-datepicker-input\",\n                  popperPlacement: \"bottom-start\",\n                  popperModifiers: [{\n                    name: 'offset',\n                    options: {\n                      offset: [0, 8]\n                    },\n                    fn: state => state\n                  }]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"custom-datepicker-icon\",\n                  children: \"\\uD83D\\uDD52\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"checkbox-list\",\n                style: {\n                  maxHeight: '150px',\n                  overflowY: 'auto',\n                  border: '1px solid #ddd',\n                  borderRadius: '4px',\n                  padding: '8px',\n                  backgroundColor: '#f9f9f9'\n                },\n                children: vehicules.map(vehicule => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '6px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      cursor: 'pointer'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: (newTournee.vehicules || []).includes(vehicule.id),\n                      onChange: e => {\n                        const currentVehicules = [...(newTournee.vehicules || [])];\n                        if (e.target.checked) {\n                          // Ajouter le véhicule s'il n'est pas déjà présent\n                          if (!currentVehicules.includes(vehicule.id)) {\n                            handleNewTourneeChange(index, 'vehicules', [...currentVehicules, vehicule.id]);\n                          }\n                        } else {\n                          // Retirer le véhicule\n                          handleNewTourneeChange(index, 'vehicules', currentVehicules.filter(id => id !== vehicule.id));\n                        }\n                      },\n                      style: {\n                        marginRight: '8px'\n                      },\n                      title: `Sélectionner le véhicule ${vehicule.immatriculation}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 853,\n                      columnNumber: 27\n                    }, this), vehicule.immatriculation]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 25\n                  }, this)\n                }, vehicule.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTournee.statut || 'en_attente',\n                onChange: e => handleNewTourneeChange(index, 'statut', e.target.value),\n                className: \"inline-edit-select\",\n                title: \"Statut de la tourn\\xE9e\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"en_attente\",\n                  children: \"En attente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"en_cours\",\n                  children: \"En cours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 885,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"terminee\",\n                  children: \"Termin\\xE9e\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"annulee\",\n                  children: \"Annul\\xE9e\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 17\n            }, this)]\n          }, newTournee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this)), filteredTournees.map(tournee => {\n            var _editingTournees$tour, _editingTournees$tour2, _editingTournees$tour3, _editingTournees$tour4, _editingTournees$tour7;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: selectedTournees.includes(tournee.id) ? 'selected-row' : '',\n              children: [editMode && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedTournees.includes(tournee.id),\n                  onChange: () => toggleTourneeSelection(tournee.id),\n                  title: `Sélectionner la tournée ${tournee.nom}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editMode ? /*#__PURE__*/_jsxDEV(PoleSelector, {\n                  value: ((_editingTournees$tour = editingTournees[tournee.id]) === null || _editingTournees$tour === void 0 ? void 0 : _editingTournees$tour.pole) || tournee.pole || '',\n                  onChange: value => handleCellChange(tournee.id, 'pole', value),\n                  placeholder: \"S\\xE9lectionner un p\\xF4le\",\n                  style: {\n                    width: '100%'\n                  },\n                  showSearch: true,\n                  allowClear: true,\n                  title: \"P\\xF4le de la tourn\\xE9e\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 21\n                }, this) : getPoleNameById(tournee.pole)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editingTournees$tour2 = editingTournees[tournee.id]) === null || _editingTournees$tour2 === void 0 ? void 0 : _editingTournees$tour2.nom) || tournee.nom,\n                  onChange: e => handleCellChange(tournee.id, 'nom', e.target.value),\n                  className: \"inline-edit-input\",\n                  placeholder: \"Nom de la tourn\\xE9e\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 21\n                }, this) : tournee.nom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  position: 'relative'\n                },\n                children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-datepicker-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                    selected: (_editingTournees$tour3 = editingTournees[tournee.id]) !== null && _editingTournees$tour3 !== void 0 && _editingTournees$tour3.heureDepart ? new Date(`2000-01-01T${editingTournees[tournee.id].heureDepart}`) : tournee.heureDepart ? new Date(`2000-01-01T${tournee.heureDepart}`) : null,\n                    onChange: date => {\n                      if (date) {\n                        const hours = date.getHours().toString().padStart(2, '0');\n                        const minutes = date.getMinutes().toString().padStart(2, '0');\n                        handleCellChange(tournee.id, 'heureDepart', `${hours}:${minutes}`);\n                      }\n                    },\n                    locale: \"fr\",\n                    showTimeSelect: true,\n                    showTimeSelectOnly: true,\n                    timeIntervals: 15,\n                    timeCaption: \"Heure\",\n                    dateFormat: \"HH:mm\",\n                    placeholderText: \"HH:MM\",\n                    className: \"custom-datepicker-input\",\n                    popperPlacement: \"bottom-start\",\n                    popperModifiers: [{\n                      name: 'offset',\n                      options: {\n                        offset: [0, 8]\n                      },\n                      fn: state => state\n                    }]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 936,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"custom-datepicker-icon\",\n                    children: \"\\uD83D\\uDD52\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 964,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 21\n                }, this) : tournee.heureDepart || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  position: 'relative'\n                },\n                children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-datepicker-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                    selected: (_editingTournees$tour4 = editingTournees[tournee.id]) !== null && _editingTournees$tour4 !== void 0 && _editingTournees$tour4.heureFinReelle ? new Date(`2000-01-01T${editingTournees[tournee.id].heureFinReelle}`) : tournee.heureFinReelle ? new Date(`2000-01-01T${tournee.heureFinReelle}`) : null,\n                    onChange: date => {\n                      if (date) {\n                        const hours = date.getHours().toString().padStart(2, '0');\n                        const minutes = date.getMinutes().toString().padStart(2, '0');\n                        handleCellChange(tournee.id, 'heureFinReelle', `${hours}:${minutes}`);\n                      }\n                    },\n                    locale: \"fr\",\n                    showTimeSelect: true,\n                    showTimeSelectOnly: true,\n                    timeIntervals: 15,\n                    timeCaption: \"Heure\",\n                    dateFormat: \"HH:mm\",\n                    placeholderText: \"HH:MM\",\n                    className: \"custom-datepicker-input\",\n                    popperPlacement: \"bottom-start\",\n                    popperModifiers: [{\n                      name: 'offset',\n                      options: {\n                        offset: [0, 8]\n                      },\n                      fn: state => state\n                    }]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 973,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"custom-datepicker-icon\",\n                    children: \"\\uD83D\\uDD52\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1001,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 21\n                }, this) : tournee.heureFinReelle || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox-list\",\n                  style: {\n                    maxHeight: '150px',\n                    overflowY: 'auto',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    padding: '8px',\n                    backgroundColor: '#f9f9f9'\n                  },\n                  children: vehicules.map(vehicule => {\n                    var _editingTournees$tour5;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginBottom: '6px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        style: {\n                          display: 'flex',\n                          alignItems: 'center',\n                          cursor: 'pointer'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          checked: (((_editingTournees$tour5 = editingTournees[tournee.id]) === null || _editingTournees$tour5 === void 0 ? void 0 : _editingTournees$tour5.vehicules) || tournee.vehicules).includes(vehicule.id),\n                          onChange: e => {\n                            var _editingTournees$tour6;\n                            const currentVehicules = [...(((_editingTournees$tour6 = editingTournees[tournee.id]) === null || _editingTournees$tour6 === void 0 ? void 0 : _editingTournees$tour6.vehicules) || tournee.vehicules)];\n                            if (e.target.checked) {\n                              // Ajouter le véhicule s'il n'est pas déjà présent\n                              if (!currentVehicules.includes(vehicule.id)) {\n                                handleCellChange(tournee.id, 'vehicules', [...currentVehicules, vehicule.id]);\n                              }\n                            } else {\n                              // Retirer le véhicule\n                              handleCellChange(tournee.id, 'vehicules', currentVehicules.filter(id => id !== vehicule.id));\n                            }\n                          },\n                          style: {\n                            marginRight: '8px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1020,\n                          columnNumber: 29\n                        }, this), vehicule.immatriculation]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1019,\n                        columnNumber: 27\n                      }, this)\n                    }, vehicule.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1018,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 21\n                }, this) : tournee.vehicules.map(vehiculeId => {\n                  const vehicule = vehicules.find(v => v.id === vehiculeId);\n                  return vehicule ? vehicule.immatriculation : vehiculeId;\n                }).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: ((_editingTournees$tour7 = editingTournees[tournee.id]) === null || _editingTournees$tour7 === void 0 ? void 0 : _editingTournees$tour7.statut) || tournee.statut,\n                  onChange: e => handleCellChange(tournee.id, 'statut', e.target.value),\n                  className: \"inline-edit-select\",\n                  title: \"Statut de la tourn\\xE9e\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"en_attente\",\n                    children: \"En attente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1057,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"en_cours\",\n                    children: \"En cours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1058,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"terminee\",\n                    children: \"Termin\\xE9e\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1059,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"annulee\",\n                    children: \"Annul\\xE9e\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1051,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: getStatusClass(tournee.statut),\n                  children: getStatusText(tournee.statut)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 17\n              }, this)]\n            }, tournee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 623,\n    columnNumber: 5\n  }, this);\n};\n_s(Tournees, \"3bmYsWla4zvmPQIVRp/k1bj8SCc=\", false, function () {\n  return [usePoles];\n});\n_c = Tournees;\nexport default Tournees;\nvar _c;\n$RefreshReg$(_c, \"Tournees\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","Timestamp","db","DatePicker","registerLocale","fr","usePoles","PoleSelector","PoleFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","Tournees","_s","tournees","setTournees","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","isEditing","setIsEditing","currentTournee","setCurrentTournee","nom","heureDepart","heureFinPrevue","heureFinReelle","coursier","vehicules","nombreColis","statut","editMode","setEditMode","selectedTournees","setSelectedTournees","editingTournees","setEditingTournees","setVehicules","sites","setSites","selectAll","setSelectAll","newTournees","setNewTournees","quickSearch","setQuickSearch","filteredTournees","setFilteredTournees","selectedPole","setSelectedPole","poles","getPoleNameById","poleId","pole","find","p","id","fetchTournees","fetchVehicules","fetchSites","results","filter","tournee","trim","searchTerm","toLowerCase","includes","some","vehiculeId","vehicule","v","immatriculation","map","length","tourneesRef","snapshot","empty","tourneesData","docs","data","siteDepart","console","log","vehiculesRef","vehiculesData","sitesRef","sitesData","handleInputChange","e","name","value","target","prev","parseInt","selectedVehicules","Array","from","selectedOptions","option","handleCreateOrUpdateTournee","tourneeToSave","closeModal","handleEdit","handleDeleteSelected","alert","window","confirm","deletePromises","Promise","all","handleSelectAllChange","toggleEditMode","editingTourneesObj","forEach","toggleTourneeSelection","tourneeId","formatDate","date","toDate","toLocaleDateString","Date","convertTimestampToDate","timestamp","getStatusClass","getStatusText","addNewTourneeRow","newTournee","now","prevNewTournees","setTimeout","firstInput","document","querySelector","focus","handleNewTourneeChange","index","field","updatedNewTournees","removeNewTourneeRow","_","i","saveAllChanges","Object","keys","updatePromises","entries","updateData","undefined","addPromises","tourneeToAdd","tourneeComplete","docRef","allSettled","fulfilled","result","status","rejected","warn","handleCellChange","formatDateForInput","year","getFullYear","month","getMonth","toString","padStart","day","getDate","handlePoleChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","backgroundColor","color","fontWeight","title","marginLeft","marginTop","type","placeholder","onChange","onPoleChange","label","overflowX","checked","display","width","showSearch","allowClear","position","selected","hours","getHours","minutes","getMinutes","locale","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","placeholderText","popperPlacement","popperModifiers","options","offset","fn","state","maxHeight","overflowY","border","borderRadius","padding","marginBottom","alignItems","cursor","currentVehicules","marginRight","_editingTournees$tour","_editingTournees$tour2","_editingTournees$tour3","_editingTournees$tour4","_editingTournees$tour7","_editingTournees$tour5","_editingTournees$tour6","join","_c","$RefreshReg$"],"sources":["C:/Users/LS_110/Documents/GitHub/inovie-SCAN-web-main/src/components/Tournees.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport React, { \r\n  useState, \r\n  useEffect, \r\n  ChangeEvent, \r\n  FormEvent \r\n} from 'react';\r\nimport { \r\n  collection, \r\n  getDocs, \r\n  addDoc, \r\n  updateDoc, \r\n  deleteDoc, \r\n  doc, \r\n  Timestamp,\r\n  DocumentSnapshot,\r\n  QueryDocumentSnapshot,\r\n  DocumentData\r\n} from 'firebase/firestore';\r\nimport { db } from '../config/firebase';\r\nimport DatePicker from 'react-datepicker';\r\nimport { registerLocale } from 'react-datepicker';\r\nimport { fr } from 'date-fns/locale';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './EditMode.css';\r\nimport './Tournees.css';\r\nimport ReactDOM from 'react-dom';\r\nimport { usePoles } from '../services/PoleService';\r\nimport PoleSelector from './PoleSelector';\r\nimport PoleFilter from './PoleFilter';\r\n\r\n// Enregistrer la locale française\r\nregisterLocale('fr', fr);\r\n\r\ninterface Tournee {\r\n  id: string;\r\n  nom: string;\r\n  date: Timestamp;\r\n  heureDepart: string;\r\n  heureFinPrevue: string;\r\n  heureFinReelle?: string;\r\n  coursier: string;\r\n  vehicules: string[];\r\n  nombreColis: number;\r\n  statut: 'en_attente' | 'en_cours' | 'terminee' | 'annulee';\r\n  siteDepart: string;\r\n  pole?: string;\r\n}\r\n\r\ninterface Vehicule {\r\n  id: string;\r\n  immatriculation: string;\r\n}\r\n\r\ninterface Site {\r\n  id: string;\r\n  nom: string;\r\n}\r\n\r\nconst Tournees: React.FC = () => {\r\n  const [tournees, setTournees] = useState<Tournee[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // État pour le modal\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [isEditing, setIsEditing] = useState<boolean>(false);\r\n  const [currentTournee, setCurrentTournee] = useState<Partial<Tournee>>({\r\n    nom: '',\r\n    heureDepart: '',\r\n    heureFinPrevue: '',\r\n    heureFinReelle: '',\r\n    coursier: '',\r\n    vehicules: [],\r\n    nombreColis: 0,\r\n    statut: 'en_attente',\r\n  });\r\n\r\n  // État pour le mode édition et la sélection multiple\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const [selectedTournees, setSelectedTournees] = useState<string[]>([]);\r\n  const [editingTournees, setEditingTournees] = useState<{[key: string]: Tournee}>({});\r\n  const [vehicules, setVehicules] = useState<Vehicule[]>([]);\r\n  const [sites, setSites] = useState<Site[]>([]);\r\n  const [selectAll, setSelectAll] = useState<boolean>(false);\r\n\r\n  // Ajouter un nouvel état pour les nouvelles tournées temporaires\r\n  const [newTournees, setNewTournees] = useState<Partial<Tournee>[]>([]);\r\n  \r\n  // État pour la recherche rapide\r\n  const [quickSearch, setQuickSearch] = useState<string>('');\r\n  const [filteredTournees, setFilteredTournees] = useState<Tournee[]>([]);\r\n\r\n  // Ajout du filtre par pôle\r\n  const [selectedPole, setSelectedPole] = useState<string>('');\r\n\r\n  // Utilisation du hook usePoles\r\n  const { poles } = usePoles();\r\n  \r\n  // Fonction pour obtenir le nom du pôle\r\n  const getPoleNameById = (poleId: string | undefined): string => {\r\n    if (!poleId) return '-';\r\n    const pole = poles.find(p => p.id === poleId);\r\n    return pole ? pole.nom : poleId;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTournees();\r\n    fetchVehicules();\r\n    fetchSites();\r\n  }, []);\r\n\r\n  // Initialiser les tournées filtrées au chargement\r\n  useEffect(() => {\r\n    setFilteredTournees(tournees);\r\n  }, [tournees]);\r\n\r\n  // Effet pour filtrer les tournées en fonction de la recherche rapide et du pôle sélectionné\r\n  useEffect(() => {\r\n    let results = tournees;\r\n\r\n    // Filtrer par pôle si un pôle est sélectionné\r\n    if (selectedPole) {\r\n      results = results.filter(tournee => tournee.pole === selectedPole);\r\n    }\r\n\r\n    // Ensuite filtrer par recherche rapide\r\n    if (quickSearch.trim()) {\r\n      const searchTerm = quickSearch.toLowerCase().trim();\r\n      results = results.filter(tournee => {\r\n        // Rechercher dans tous les champs textuels de la tournée\r\n        return (\r\n          tournee.nom.toLowerCase().includes(searchTerm) ||\r\n          tournee.heureDepart.toLowerCase().includes(searchTerm) ||\r\n          (tournee.heureFinReelle || '').toLowerCase().includes(searchTerm) ||\r\n          tournee.statut.toLowerCase().includes(searchTerm) ||\r\n          tournee.vehicules.some(vehiculeId => {\r\n            const vehicule = vehicules.find(v => v.id === vehiculeId);\r\n            return vehicule && vehicule.immatriculation.toLowerCase().includes(searchTerm);\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    setFilteredTournees(results);\r\n  }, [quickSearch, tournees, vehicules, selectedPole]);\r\n\r\n  // Effet pour gérer la sélection/désélection de toutes les tournées\r\n  useEffect(() => {\r\n    if (selectAll) {\r\n      setSelectedTournees(tournees.map(tournee => tournee.id));\r\n    } else if (selectedTournees.length === tournees.length) {\r\n      // Si toutes les tournées sont sélectionnées mais que selectAll est false, cela signifie que l'utilisateur a désélectionné\r\n      setSelectedTournees([]);\r\n    }\r\n  }, [selectAll]);\r\n\r\n  const fetchTournees = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const tourneesRef = collection(db, 'tournees');\r\n      const snapshot = await getDocs(tourneesRef);\r\n      \r\n      if (!snapshot.empty) {\r\n        const tourneesData: Tournee[] = snapshot.docs.map((doc: DocumentSnapshot<DocumentData>) => {\r\n          const data = doc.data() as Tournee;\r\n          return {\r\n            id: doc.id,\r\n            nom: data?.nom || '',\r\n            heureDepart: data?.heureDepart || '',\r\n            heureFinPrevue: data?.heureFinPrevue || '',\r\n            heureFinReelle: data?.heureFinReelle || '',\r\n            coursier: data?.coursier || '',\r\n            vehicules: data?.vehicules || [],\r\n            nombreColis: data?.nombreColis || 0,\r\n            statut: data?.statut || 'en_attente',\r\n            pole: data?.pole || '',\r\n            siteDepart: data?.siteDepart || ''\r\n          };\r\n        });\r\n        \r\n        console.log(\"Tournées récupérées depuis Firestore:\", tourneesData);\r\n        setTournees(tourneesData);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des tournées:', error);\r\n      setError('Erreur lors de la récupération des données');\r\n      setTournees([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchVehicules = async () => {\r\n    try {\r\n      const vehiculesRef = collection(db, 'vehicules');\r\n      const snapshot = await getDocs(vehiculesRef);\r\n      \r\n      if (!snapshot.empty) {\r\n        const vehiculesData: Vehicule[] = snapshot.docs.map((doc: DocumentSnapshot<DocumentData>) => {\r\n          const data = doc.data() as Vehicule;\r\n          return {\r\n            id: doc.id,\r\n            immatriculation: data?.immatriculation || ''\r\n          };\r\n        });\r\n        \r\n        setVehicules(vehiculesData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des véhicules:', error);\r\n    }\r\n  };\r\n\r\n  const fetchSites = async () => {\r\n    try {\r\n      const sitesRef = collection(db, 'sites');\r\n      const snapshot = await getDocs(sitesRef);\r\n      \r\n      if (!snapshot.empty) {\r\n        const sitesData: Site[] = snapshot.docs.map((doc: DocumentSnapshot<DocumentData>) => {\r\n          const data = doc.data() as Site;\r\n          return {\r\n            id: doc.id,\r\n            nom: data?.nom || ''\r\n          };\r\n        });\r\n        \r\n        setSites(sitesData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des sites:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    \r\n    if (name === 'nombreColis') {\r\n      setCurrentTournee((prev: Partial<Tournee>) => ({ \r\n        ...prev, \r\n        [name]: parseInt(value, 10) \r\n      }));\r\n    } else if (name === 'vehicules') {\r\n      const selectedVehicules = Array.from(\r\n        (e.target as HTMLSelectElement).selectedOptions, \r\n        option => option.value\r\n      );\r\n      setCurrentTournee((prev: Partial<Tournee>) => ({ \r\n        ...prev, \r\n        vehicules: selectedVehicules \r\n      }));\r\n    } else {\r\n      setCurrentTournee((prev: Partial<Tournee>) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleCreateOrUpdateTournee = async () => {\r\n    try {\r\n      const tourneeToSave: Tournee = {\r\n        ...currentTournee,\r\n        id: currentTournee.id || '',\r\n        heureDepart: currentTournee.heureDepart || '',\r\n        heureFinPrevue: currentTournee.heureFinPrevue || '',\r\n        heureFinReelle: currentTournee.heureFinReelle || '',\r\n        coursier: currentTournee.coursier || '',\r\n        vehicules: currentTournee.vehicules || [],\r\n        nombreColis: currentTournee.nombreColis || 0,\r\n        statut: currentTournee.statut || 'en_attente',\r\n      } as Tournee;\r\n\r\n      if (isEditing) {\r\n        await updateDoc(doc(db, 'tournees', tourneeToSave.id), {\r\n          ...tourneeToSave,\r\n        });\r\n      } else {\r\n        await addDoc(collection(db, 'tournees'), {\r\n          ...tourneeToSave,\r\n        });\r\n      }\r\n\r\n      fetchTournees();\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde de la tournée', error);\r\n      setError('Erreur lors de la sauvegarde de la tournée');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (tournee: Tournee) => {\r\n    setCurrentTournee(tournee);\r\n    setIsEditing(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteSelected = async () => {\r\n    if (selectedTournees.length === 0) {\r\n      alert('Veuillez sélectionner au moins une tournée à supprimer');\r\n      return;\r\n    }\r\n\r\n    if (window.confirm(`Êtes-vous sûr de vouloir supprimer ${selectedTournees.length} tournée(s) ?`)) {\r\n      try {\r\n        // Supprimer les tournées sélectionnées de Firestore\r\n        const deletePromises = selectedTournees.map(id => deleteDoc(doc(db, 'tournees', id)));\r\n        await Promise.all(deletePromises);\r\n        \r\n        // Mettre à jour l'état local\r\n        setTournees(tournees.filter(tournee => !selectedTournees.includes(tournee.id)));\r\n        setSelectedTournees([]);\r\n        setSelectAll(false);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la suppression:', error);\r\n        setError('Erreur lors de la suppression');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fonction pour gérer la sélection/désélection de toutes les tournées\r\n  const handleSelectAllChange = () => {\r\n    setSelectAll(!selectAll);\r\n  };\r\n\r\n  const toggleEditMode = () => {\r\n    if (editMode) {\r\n      // Si on quitte le mode édition, réinitialiser les sélections et les modifications\r\n      setSelectedTournees([]);\r\n      setEditingTournees({});\r\n      setSelectAll(false);\r\n      setNewTournees([]);\r\n      \r\n      // Rafraîchir les données depuis Firebase\r\n      fetchTournees();\r\n    } else {\r\n      // Si on entre en mode édition, initialiser les sites en édition\r\n      const editingTourneesObj: {[key: string]: Tournee} = {};\r\n      filteredTournees.forEach(tournee => {\r\n        editingTourneesObj[tournee.id] = { ...tournee };\r\n      });\r\n      setEditingTournees(editingTourneesObj);\r\n    }\r\n    \r\n    // Inverser le mode édition\r\n    setEditMode(!editMode);\r\n    \r\n    // Réinitialiser la recherche rapide et les filtres\r\n    setQuickSearch('');\r\n    setSelectedPole('');\r\n  };\r\n\r\n  const toggleTourneeSelection = (id: string) => {\r\n    if (selectedTournees.includes(id)) {\r\n      setSelectedTournees(selectedTournees.filter(tourneeId => tourneeId !== id));\r\n      // Si on désélectionne une tournée, on désactive aussi \"Tout sélectionner\"\r\n      setSelectAll(false);\r\n    } else {\r\n      setSelectedTournees([...selectedTournees, id]);\r\n      // Si toutes les tournées sont sélectionnées, on active \"Tout sélectionner\"\r\n      if (selectedTournees.length + 1 === tournees.length) {\r\n        setSelectAll(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatDate = (date: Date | Timestamp | null) => {\r\n    if (!date) return '';\r\n    \r\n    try {\r\n      // Si c'est un Timestamp\r\n      if (date instanceof Timestamp) {\r\n        return date.toDate().toLocaleDateString('fr-FR');\r\n      }\r\n      \r\n      // Si c'est une Date\r\n      if (date instanceof Date) {\r\n        return date.toLocaleDateString('fr-FR');\r\n      }\r\n      \r\n      return '';\r\n    } catch (error) {\r\n      console.error('Erreur lors du formatage de la date:', error);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const convertTimestampToDate = (timestamp: any): Date | null => {\r\n    if (!timestamp) return null;\r\n    try {\r\n      if (timestamp instanceof Timestamp) {\r\n        return timestamp.toDate();\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la conversion du timestamp:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getStatusClass = (statut: string) => {\r\n    switch (statut) {\r\n      case 'en_attente':\r\n        return 'en-attente';\r\n      case 'en_cours':\r\n        return 'en-cours';\r\n      case 'terminee':\r\n        return 'livré';\r\n      case 'annulee':\r\n        return 'annulé';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (statut: string) => {\r\n    switch (statut) {\r\n      case 'en_attente':\r\n        return 'En attente';\r\n      case 'en_cours':\r\n        return 'En cours';\r\n      case 'terminee':\r\n        return 'Terminée';\r\n      case 'annulee':\r\n        return 'Annulée';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const addNewTourneeRow = () => {\r\n    // Forcer le mode édition si ce n'est pas déjà le cas\r\n    if (!editMode) {\r\n      setEditMode(true);\r\n    }\r\n\r\n    const newTournee: Partial<Tournee> = {\r\n      id: `temp-${Date.now()}`, // Identifiant temporaire unique\r\n      nom: '',\r\n      heureDepart: '',\r\n      heureFinPrevue: '',\r\n      heureFinReelle: '',\r\n      coursier: '',\r\n      vehicules: [],\r\n      nombreColis: 0,\r\n      statut: 'en_attente',\r\n    };\r\n    \r\n    // Ajouter la nouvelle ligne au début du tableau\r\n    setNewTournees(prevNewTournees => [newTournee, ...prevNewTournees]);\r\n    \r\n    // Ajouter un délai pour permettre le rendu\r\n    setTimeout(() => {\r\n      const firstInput = document.querySelector('.tournees-table-container .new-tournee-row input') as HTMLInputElement;\r\n      if (firstInput) {\r\n        firstInput.focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const handleNewTourneeChange = (index: number, field: keyof Tournee, value: any) => {\r\n    const updatedNewTournees = [...newTournees];\r\n    updatedNewTournees[index] = {\r\n      ...updatedNewTournees[index],\r\n      [field]: value\r\n    };\r\n    setNewTournees(updatedNewTournees);\r\n  };\r\n\r\n  const removeNewTourneeRow = (index: number) => {\r\n    const updatedNewTournees = newTournees.filter((_, i) => i !== index);\r\n    setNewTournees(updatedNewTournees);\r\n  };\r\n\r\n  const saveAllChanges = async () => {\r\n    try {\r\n      console.log(\"Début de la sauvegarde des modifications...\");\r\n      console.log(\"Tournées à mettre à jour:\", Object.keys(editingTournees).length);\r\n      console.log(\"Nouvelles tournées à ajouter:\", newTournees.length);\r\n      \r\n      // Mettre à jour les tournées existantes\r\n      const updatePromises = Object.entries(editingTournees).map(async ([id, tournee]) => {\r\n        try {\r\n          console.log(`Mise à jour de la tournée ${id}:`, tournee);\r\n          \r\n          // Créer un objet avec uniquement les champs définis\r\n          const updateData: Partial<Tournee> = {};\r\n          \r\n          // Vérifier et ajouter chaque champ s'il est défini\r\n          if (tournee.nom !== undefined) updateData.nom = tournee.nom;\r\n          if (tournee.heureDepart !== undefined) updateData.heureDepart = tournee.heureDepart;\r\n          if (tournee.heureFinPrevue !== undefined) updateData.heureFinPrevue = tournee.heureFinPrevue;\r\n          if (tournee.heureFinReelle !== undefined) updateData.heureFinReelle = tournee.heureFinReelle;\r\n          if (tournee.coursier !== undefined) updateData.coursier = tournee.coursier;\r\n          if (tournee.vehicules !== undefined) updateData.vehicules = tournee.vehicules;\r\n          if (tournee.nombreColis !== undefined) updateData.nombreColis = tournee.nombreColis;\r\n          if (tournee.statut !== undefined) updateData.statut = tournee.statut;\r\n          if (tournee.pole !== undefined) updateData.pole = tournee.pole;\r\n          \r\n          await updateDoc(doc(db, 'tournees', id), updateData);\r\n          console.log(`Tournée ${id} mise à jour avec succès`);\r\n          return id;\r\n        } catch (error) {\r\n          console.error(`Erreur lors de la mise à jour de la tournée ${id}:`, error);\r\n          throw error;\r\n        }\r\n      });\r\n\r\n      // Ajouter les nouvelles tournées\r\n      const addPromises = newTournees.map(async (newTournee, index) => {\r\n        try {\r\n          console.log(`Ajout de la nouvelle tournée à l'index ${index}:`, newTournee);\r\n          \r\n          // Supprimer l'ID temporaire avant l'ajout\r\n          const { id, ...tourneeToAdd } = newTournee;\r\n          \r\n          // S'assurer que tous les champs requis sont présents\r\n          const tourneeComplete = {\r\n            ...tourneeToAdd,\r\n            vehicules: tourneeToAdd.vehicules || [],\r\n            nombreColis: tourneeToAdd.nombreColis || 0,\r\n            statut: tourneeToAdd.statut || 'en_attente'\r\n          };\r\n          \r\n          const docRef = await addDoc(collection(db, 'tournees'), tourneeComplete);\r\n          console.log(`Nouvelle tournée ajoutée avec l'ID: ${docRef.id}`);\r\n          return docRef.id;\r\n        } catch (error) {\r\n          console.error(`Erreur lors de l'ajout de la nouvelle tournée à l'index ${index}:`, error);\r\n          throw error;\r\n        }\r\n      });\r\n\r\n      // Attendre que toutes les opérations soient terminées\r\n      const results = await Promise.allSettled([...updatePromises, ...addPromises]);\r\n      \r\n      // Vérifier les résultats\r\n      const fulfilled = results.filter(result => result.status === 'fulfilled').length;\r\n      const rejected = results.filter(result => result.status === 'rejected').length;\r\n      \r\n      console.log(`Opérations terminées: ${fulfilled} réussies, ${rejected} échouées`);\r\n      \r\n      if (rejected > 0) {\r\n        console.warn(\"Certaines opérations ont échoué. Voir les erreurs ci-dessus.\");\r\n      }\r\n      \r\n      // Réinitialiser les états\r\n      setEditingTournees({});\r\n      setNewTournees([]);\r\n      \r\n      // Recharger les tournées\r\n      await fetchTournees();\r\n      \r\n      if (rejected > 0) {\r\n        alert(`Modifications partiellement enregistrées. ${rejected} opérations ont échoué.`);\r\n      } else {\r\n        alert('Modifications enregistrées avec succès');\r\n      }\r\n      \r\n      // Désactiver le mode édition après sauvegarde réussie\r\n      setEditMode(false);\r\n      setSelectedTournees([]);\r\n      setSelectAll(false);\r\n      \r\n      console.log('Toutes les modifications ont été enregistrées avec succès');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des modifications:', error);\r\n      alert('Erreur lors de la sauvegarde des modifications. Veuillez réessayer.');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleCellChange = (id: string, field: keyof Tournee, value: any) => {\r\n    console.log(`Mise à jour de la tournée ${id}, champ ${field} avec la valeur:`, value);\r\n    setEditingTournees({\r\n      ...editingTournees,\r\n      [id]: {\r\n        ...editingTournees[id],\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  const formatDateForInput = (date: Date | null): string => {\r\n    if (!date) return '';\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setIsEditing(false);\r\n    setCurrentTournee({\r\n      nom: '',\r\n      heureDepart: '',\r\n      heureFinPrevue: '',\r\n      heureFinReelle: '',\r\n      coursier: '',\r\n      vehicules: [],\r\n      nombreColis: 0,\r\n      statut: 'en_attente',\r\n    });\r\n  };\r\n\r\n  // Fonction pour gérer le changement de pôle\r\n  const handlePoleChange = (pole: string) => {\r\n    setSelectedPole(pole);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Chargement des tournées...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"section-header\">\r\n        <h2 className=\"section-title\">Tournées</h2>\r\n      </div>\r\n      \r\n      <div className=\"sticky-header-container\">\r\n        <div className=\"header-actions\">\r\n          {editMode ? (\r\n            <>\r\n              <button \r\n                className=\"button\" \r\n                onClick={saveAllChanges}\r\n                disabled={loading || (selectedTournees.length === 0 && newTournees.length === 0)}\r\n                style={{ \r\n                  backgroundColor: '#4CAF50', // Vert\r\n                  color: 'white',\r\n                  fontWeight: 'bold'\r\n                }}\r\n                title=\"Enregistrer les modifications\"\r\n              >\r\n                <i className=\"fas fa-save\"></i> Enr. {selectedTournees.length > 0 || newTournees.length > 0 ? \r\n                  `(${selectedTournees.length}${newTournees.length > 0 ? `+${newTournees.length}` : ''})` : \r\n                  ''}\r\n              </button>\r\n              <button \r\n                className=\"button button-secondary\" \r\n                onClick={() => {\r\n                  if (window.confirm(\"Êtes-vous sûr de vouloir annuler toutes les modifications ?\")) {\r\n                    setEditingTournees({});\r\n                    setNewTournees([]);\r\n                    setSelectedTournees([]);\r\n                    setSelectAll(false);\r\n                    setEditMode(false);\r\n                  }\r\n                }}\r\n                style={{ marginLeft: '5px' }}\r\n                disabled={loading}\r\n                title=\"Annuler les modifications\"\r\n              >\r\n                <i className=\"fas fa-times\"></i> Annuler\r\n              </button>\r\n              <button \r\n                className=\"button\" \r\n                onClick={addNewTourneeRow}\r\n                style={{ \r\n                  marginLeft: '5px',\r\n                  backgroundColor: '#FF9800', // Orange\r\n                  color: 'white',\r\n                  fontWeight: 'bold'\r\n                }}\r\n                disabled={loading}\r\n                title=\"Ajouter une nouvelle tournée\"\r\n              >\r\n                <i className=\"fas fa-plus\"></i> Ajouter\r\n              </button>\r\n              <button \r\n                className=\"button button-danger\" \r\n                onClick={handleDeleteSelected}\r\n                disabled={selectedTournees.length === 0 || loading}\r\n                style={{ \r\n                  marginLeft: '5px',\r\n                  backgroundColor: '#f44336', \r\n                  color: 'white',\r\n                  fontWeight: 'bold'\r\n                }}\r\n                title=\"Supprimer les tournées sélectionnées\"\r\n              >\r\n                <i className=\"fas fa-trash-alt\"></i> Sup. ({selectedTournees.length})\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button \r\n              className=\"button\" \r\n              onClick={toggleEditMode}\r\n            >\r\n              <i className=\"fas fa-edit\"></i> Modifier\r\n            </button>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"quick-search-container\" style={{ marginTop: '10px' }}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"quick-search-input\"\r\n            placeholder=\"Recherche rapide...\"\r\n            value={quickSearch}\r\n            onChange={(e) => setQuickSearch(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n          <div className=\"pole-filter\">\r\n            <PoleFilter\r\n              onPoleChange={handlePoleChange}\r\n              selectedPole={selectedPole}\r\n              label=\"Filtrer par pôle\"\r\n              className=\"pole-filter-component\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"tournees-table-container\" style={{ overflowX: 'auto' }}>\r\n        <div className=\"results-info\">\r\n          <p>{filteredTournees.length} résultat(s) trouvé(s){quickSearch ? ` pour la recherche \"${quickSearch}\"` : ''}</p>\r\n        </div>\r\n        <table className={`data-table ${editMode ? 'editing' : ''}`}>\r\n          <thead>\r\n            <tr>\r\n              {editMode && (\r\n                <th>\r\n                  <input \r\n                    type=\"checkbox\" \r\n                    checked={selectAll}\r\n                    onChange={handleSelectAllChange}\r\n                    title=\"Sélectionner/Désélectionner toutes les tournées\"\r\n                  />\r\n                </th>\r\n              )}\r\n              <th>PÔLE</th>\r\n              <th>Nom</th>\r\n              <th>Heure de Départ</th>\r\n              <th>Heure d'Arrivée</th>\r\n              <th>Véhicules</th>\r\n              <th>Statut</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* Nouvelles lignes temporaires */}\r\n            {editMode && newTournees.map((newTournee, index) => (\r\n              <tr key={newTournee.id} className=\"new-tournee-row\">\r\n                <td style={{display: 'none'}}>\r\n                  {/* Cellule masquée pour maintenir l'alignement */}\r\n                </td>\r\n                <td>\r\n                  <PoleSelector\r\n                    value={newTournee.pole || ''}\r\n                    onChange={(value) => handleNewTourneeChange(index, 'pole', value)}\r\n                    placeholder=\"Sélectionner un pôle\"\r\n                    style={{ width: '100%' }}\r\n                    showSearch\r\n                    allowClear\r\n                    title=\"Pôle de la tournée\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newTournee.nom || ''}\r\n                    onChange={(e) => handleNewTourneeChange(index, 'nom', e.target.value)}\r\n                    className=\"inline-edit-input\"\r\n                    placeholder=\"Nom de la tournée\"\r\n                  />\r\n                </td>\r\n                <td style={{ position: 'relative' }}>\r\n                  <div className=\"custom-datepicker-wrapper\">\r\n                    <DatePicker\r\n                      selected={newTournee.heureDepart ? new Date(`2000-01-01T${newTournee.heureDepart}`) : null}\r\n                      onChange={(date: Date | null) => {\r\n                        if (date) {\r\n                          const hours = date.getHours().toString().padStart(2, '0');\r\n                          const minutes = date.getMinutes().toString().padStart(2, '0');\r\n                          handleNewTourneeChange(index, 'heureDepart', `${hours}:${minutes}`);\r\n                        }\r\n                      }}\r\n                      locale=\"fr\"\r\n                      showTimeSelect\r\n                      showTimeSelectOnly\r\n                      timeIntervals={15}\r\n                      timeCaption=\"Heure\"\r\n                      dateFormat=\"HH:mm\"\r\n                      placeholderText=\"HH:MM\"\r\n                      className=\"custom-datepicker-input\"\r\n                      popperPlacement=\"bottom-start\"\r\n                      popperModifiers={[\r\n                        {\r\n                          name: 'offset',\r\n                          options: {\r\n                            offset: [0, 8],\r\n                          },\r\n                          fn: (state) => state\r\n                        },\r\n                      ]}\r\n                    />\r\n                    <span className=\"custom-datepicker-icon\">🕒</span>\r\n                  </div>\r\n                </td>\r\n                <td style={{ position: 'relative' }}>\r\n                  <div className=\"custom-datepicker-wrapper\">\r\n                    <DatePicker\r\n                      selected={newTournee.heureFinReelle ? new Date(`2000-01-01T${newTournee.heureFinReelle}`) : null}\r\n                      onChange={(date: Date | null) => {\r\n                        if (date) {\r\n                          const hours = date.getHours().toString().padStart(2, '0');\r\n                          const minutes = date.getMinutes().toString().padStart(2, '0');\r\n                          handleNewTourneeChange(index, 'heureFinReelle', `${hours}:${minutes}`);\r\n                        }\r\n                      }}\r\n                      locale=\"fr\"\r\n                      showTimeSelect\r\n                      showTimeSelectOnly\r\n                      timeIntervals={15}\r\n                      timeCaption=\"Heure\"\r\n                      dateFormat=\"HH:mm\"\r\n                      placeholderText=\"HH:MM\"\r\n                      className=\"custom-datepicker-input\"\r\n                      popperPlacement=\"bottom-start\"\r\n                      popperModifiers={[\r\n                        {\r\n                          name: 'offset',\r\n                          options: {\r\n                            offset: [0, 8],\r\n                          },\r\n                          fn: (state) => state\r\n                        },\r\n                      ]}\r\n                    />\r\n                    <span className=\"custom-datepicker-icon\">🕒</span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"checkbox-list\" style={{ \r\n                    maxHeight: '150px', \r\n                    overflowY: 'auto',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px',\r\n                    padding: '8px',\r\n                    backgroundColor: '#f9f9f9'\r\n                  }}>\r\n                    {vehicules.map(vehicule => (\r\n                      <div key={vehicule.id} style={{ marginBottom: '6px' }}>\r\n                        <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n                          <input \r\n                            type=\"checkbox\" \r\n                            checked={(newTournee.vehicules || []).includes(vehicule.id)}\r\n                            onChange={(e) => {\r\n                              const currentVehicules = [...(newTournee.vehicules || [])];\r\n                              if (e.target.checked) {\r\n                                // Ajouter le véhicule s'il n'est pas déjà présent\r\n                                if (!currentVehicules.includes(vehicule.id)) {\r\n                                  handleNewTourneeChange(index, 'vehicules', [...currentVehicules, vehicule.id]);\r\n                                }\r\n                              } else {\r\n                                // Retirer le véhicule\r\n                                handleNewTourneeChange(index, 'vehicules', currentVehicules.filter(id => id !== vehicule.id));\r\n                              }\r\n                            }}\r\n                            style={{ marginRight: '8px' }}\r\n                            title={`Sélectionner le véhicule ${vehicule.immatriculation}`}\r\n                          />\r\n                          {vehicule.immatriculation}\r\n                        </label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={newTournee.statut || 'en_attente'}\r\n                    onChange={(e) => handleNewTourneeChange(index, 'statut', e.target.value)}\r\n                    className=\"inline-edit-select\"\r\n                    title=\"Statut de la tournée\"\r\n                  >\r\n                    <option value=\"en_attente\">En attente</option>\r\n                    <option value=\"en_cours\">En cours</option>\r\n                    <option value=\"terminee\">Terminée</option>\r\n                    <option value=\"annulee\">Annulée</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n\r\n            {filteredTournees.map((tournee) => (\r\n              <tr key={tournee.id} className={selectedTournees.includes(tournee.id) ? 'selected-row' : ''}>\r\n                {editMode && (\r\n                  <td>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      checked={selectedTournees.includes(tournee.id)} \r\n                      onChange={() => toggleTourneeSelection(tournee.id)}\r\n                      title={`Sélectionner la tournée ${tournee.nom}`}\r\n                    />\r\n                  </td>\r\n                )}\r\n                <td>\r\n                  {editMode ? (\r\n                    <PoleSelector\r\n                      value={editingTournees[tournee.id]?.pole || tournee.pole || ''}\r\n                      onChange={(value) => handleCellChange(tournee.id, 'pole', value)}\r\n                      placeholder=\"Sélectionner un pôle\"\r\n                      style={{ width: '100%' }}\r\n                      showSearch\r\n                      allowClear\r\n                      title=\"Pôle de la tournée\"\r\n                    />\r\n                  ) : (\r\n                    getPoleNameById(tournee.pole)\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editMode ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editingTournees[tournee.id]?.nom || tournee.nom}\r\n                      onChange={(e) => handleCellChange(tournee.id, 'nom', e.target.value)}\r\n                      className=\"inline-edit-input\"\r\n                      placeholder=\"Nom de la tournée\"\r\n                    />\r\n                  ) : (\r\n                    tournee.nom\r\n                  )}\r\n                </td>\r\n                <td style={{ position: 'relative' }}>\r\n                  {editMode ? (\r\n                    <div className=\"custom-datepicker-wrapper\">\r\n                      <DatePicker\r\n                        selected={editingTournees[tournee.id]?.heureDepart ? new Date(`2000-01-01T${editingTournees[tournee.id].heureDepart}`) : tournee.heureDepart ? new Date(`2000-01-01T${tournee.heureDepart}`) : null}\r\n                        onChange={(date: Date | null) => {\r\n                          if (date) {\r\n                            const hours = date.getHours().toString().padStart(2, '0');\r\n                            const minutes = date.getMinutes().toString().padStart(2, '0');\r\n                            handleCellChange(tournee.id, 'heureDepart', `${hours}:${minutes}`);\r\n                          }\r\n                        }}\r\n                        locale=\"fr\"\r\n                        showTimeSelect\r\n                        showTimeSelectOnly\r\n                        timeIntervals={15}\r\n                        timeCaption=\"Heure\"\r\n                        dateFormat=\"HH:mm\"\r\n                        placeholderText=\"HH:MM\"\r\n                        className=\"custom-datepicker-input\"\r\n                        popperPlacement=\"bottom-start\"\r\n                        popperModifiers={[\r\n                          {\r\n                            name: 'offset',\r\n                            options: {\r\n                              offset: [0, 8],\r\n                            },\r\n                            fn: (state) => state\r\n                          },\r\n                        ]}\r\n                      />\r\n                      <span className=\"custom-datepicker-icon\">🕒</span>\r\n                    </div>\r\n                  ) : (\r\n                    tournee.heureDepart || '-'\r\n                  )}\r\n                </td>\r\n                <td style={{ position: 'relative' }}>\r\n                  {editMode ? (\r\n                    <div className=\"custom-datepicker-wrapper\">\r\n                      <DatePicker\r\n                        selected={editingTournees[tournee.id]?.heureFinReelle ? new Date(`2000-01-01T${editingTournees[tournee.id].heureFinReelle}`) : tournee.heureFinReelle ? new Date(`2000-01-01T${tournee.heureFinReelle}`) : null}\r\n                        onChange={(date: Date | null) => {\r\n                          if (date) {\r\n                            const hours = date.getHours().toString().padStart(2, '0');\r\n                            const minutes = date.getMinutes().toString().padStart(2, '0');\r\n                            handleCellChange(tournee.id, 'heureFinReelle', `${hours}:${minutes}`);\r\n                          }\r\n                        }}\r\n                        locale=\"fr\"\r\n                        showTimeSelect\r\n                        showTimeSelectOnly\r\n                        timeIntervals={15}\r\n                        timeCaption=\"Heure\"\r\n                        dateFormat=\"HH:mm\"\r\n                        placeholderText=\"HH:MM\"\r\n                        className=\"custom-datepicker-input\"\r\n                        popperPlacement=\"bottom-start\"\r\n                        popperModifiers={[\r\n                          {\r\n                            name: 'offset',\r\n                            options: {\r\n                              offset: [0, 8],\r\n                            },\r\n                            fn: (state) => state\r\n                          },\r\n                        ]}\r\n                      />\r\n                      <span className=\"custom-datepicker-icon\">🕒</span>\r\n                    </div>\r\n                  ) : (\r\n                    tournee.heureFinReelle || '-'\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editMode ? (\r\n                    <div className=\"checkbox-list\" style={{ \r\n                      maxHeight: '150px', \r\n                      overflowY: 'auto',\r\n                      border: '1px solid #ddd',\r\n                      borderRadius: '4px',\r\n                      padding: '8px',\r\n                      backgroundColor: '#f9f9f9'\r\n                    }}>\r\n                      {vehicules.map(vehicule => (\r\n                        <div key={vehicule.id} style={{ marginBottom: '6px' }}>\r\n                          <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n                            <input \r\n                              type=\"checkbox\" \r\n                              checked={(editingTournees[tournee.id]?.vehicules || tournee.vehicules).includes(vehicule.id)}\r\n                              onChange={(e) => {\r\n                                const currentVehicules = [...(editingTournees[tournee.id]?.vehicules || tournee.vehicules)];\r\n                                if (e.target.checked) {\r\n                                  // Ajouter le véhicule s'il n'est pas déjà présent\r\n                                  if (!currentVehicules.includes(vehicule.id)) {\r\n                                    handleCellChange(tournee.id, 'vehicules', [...currentVehicules, vehicule.id]);\r\n                                  }\r\n                                } else {\r\n                                  // Retirer le véhicule\r\n                                  handleCellChange(tournee.id, 'vehicules', currentVehicules.filter(id => id !== vehicule.id));\r\n                                }\r\n                              }}\r\n                              style={{ marginRight: '8px' }}\r\n                            />\r\n                            {vehicule.immatriculation}\r\n                          </label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    tournee.vehicules.map(vehiculeId => {\r\n                      const vehicule = vehicules.find(v => v.id === vehiculeId);\r\n                      return vehicule ? vehicule.immatriculation : vehiculeId;\r\n                    }).join(', ')\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editMode ? (\r\n                    <select\r\n                      value={editingTournees[tournee.id]?.statut || tournee.statut}\r\n                      onChange={(e) => handleCellChange(tournee.id, 'statut', e.target.value as 'en_attente' | 'en_cours' | 'terminee' | 'annulee')}\r\n                      className=\"inline-edit-select\"\r\n                      title=\"Statut de la tournée\"\r\n                    >\r\n                      <option value=\"en_attente\">En attente</option>\r\n                      <option value=\"en_cours\">En cours</option>\r\n                      <option value=\"terminee\">Terminée</option>\r\n                      <option value=\"annulee\">Annulée</option>\r\n                    </select>\r\n                  ) : (\r\n                    <span className={getStatusClass(tournee.statut)}>\r\n                      {getStatusText(tournee.statut)}\r\n                    </span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tournees;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}